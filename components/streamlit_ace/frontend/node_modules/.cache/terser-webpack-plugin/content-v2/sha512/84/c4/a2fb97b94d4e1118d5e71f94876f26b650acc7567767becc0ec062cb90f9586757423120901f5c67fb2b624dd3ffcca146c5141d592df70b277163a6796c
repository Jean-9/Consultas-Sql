{"code":"ace.define(\"ace/mode/clue_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(e,t,n){\"use strict\";var i=e(\"../lib/oop\"),o=e(\"./text_highlight_rules\").TextHighlightRules,r=function(){this.$rules={start:[{token:[\"keyword.control.directive.clue\",\"text\",\"text\"],regex:/(@version)( )(.+?(?=\\n))/},{token:[\"keyword.control.macro.clue\",\"text\",\"text\"],regex:/(@macro)( )([A-Za-z_][0-9A-Za-z_]*)/},{token:[\"keyword.control.import.clue\",\"text\",\"string\"],regex:/(@import)( )(\".*\")/},{token:\"meta.preprocessor.macro.invocation.clue\",regex:/\\$[A-Za-z_][0-9A-Za-z_]*!/},{token:\"keyword.control.directive.clue\",regex:/@(?:(?:else_)?(?:ifos|iflua|ifdef|ifndef|ifcmp|ifos|iflua|ifdef|ifcmp|if)|else|define|macro|error|print)/},{token:\"constant.numeric.integer.hexadecimal.clue\",regex:/\\b0[xX][0-9A-Fa-f]+(?![pPeE.0-9])\\b/},{token:\"constant.numeric.float.hexadecimal.clue\",regex:/\\b0[xX][0-9A-Fa-f]+(?:\\.[0-9A-Fa-f]+)?(?:[eE]-?\\d*)?(?:[pP][-+]\\d+)?\\b/},{token:\"constant.numeric.integer.clue\",regex:/\\b\\d+(?![pPeE.0-9])/},{token:\"constant.numeric.float.clue\",regex:/\\b\\d+(?:\\.\\d+)?(?:[eE]-?\\d*)?/},{token:\"punctuation.definition.string.multilined.begin.clue\",regex:/'/,push:[{token:\"punctuation.definition.string.multilined.end.clue\",regex:/'/,next:\"pop\"},{include:\"#escaped_char\"},{defaultToken:\"string.quoted.single.clue\"}]},{token:\"punctuation.definition.string.multilined.begin.clue\",regex:/\"/,push:[{token:\"punctuation.definition.string.multilined.end.clue\",regex:/\"/,next:\"pop\"},{include:\"#escaped_char\"},{defaultToken:\"string.quoted.double.clue\"}]},{token:\"punctuation.definition.string.multilined.begin.clue\",regex:/`/,push:[{token:\"punctuation.definition.string.multilined.end.clue\",regex:/`/,next:\"pop\"},{include:\"#escaped_char\"},{defaultToken:\"string.multiline.clue\"}]},{token:\"comment.line.double-dash.clue\",regex:/\\/\\/.*/},{token:\"punctuation.definition.comment.begin.clue\",regex:/\\/\\*/,push:[{token:\"punctuation.definition.comment.end.clue\",regex:/\\*\\//,next:\"pop\"},{include:\"#escaped_char\"},{defaultToken:\"comment.block.clue\"}]},{token:\"keyword.control.clue\",regex:/\\b(?:if|elseif|else|for|of|in|with|while|meta|until|fn|method|return|loop|enum|goto|continue|break|try|catch|match|default|macro)\\b/},{token:\"keyword.scope.clue\",regex:/\\b(?:local|global|static)\\b/},{token:\"constant.language.clue\",regex:/\\b(?:false|nil|true|_G|_VERSION|math\\.(?:pi|huge))\\b/},{token:\"constant.language.ellipsis.clue\",regex:/\\.{3}(?!\\.)/},{token:\"keyword.operator.property.clue\",regex:/\\.|::/,next:\"property_identifier\"},{token:\"keyword.operator.clue\",regex:/\\/_|\\&|\\||\\!|\\~|\\?|\\$|@|\\+|-|%|#|\\*|\\/|\\^|==?|<=?|>=?|\\.{2}|\\?\\?=?|(?:&&|\\|\\|)=?/},{token:\"variable.language.self.clue\",regex:/\\bself\\b/},{token:\"support.function.any-method.clue\",regex:/\\b[a-zA-Z_][a-zA-Z0-9_]*\\b(?=\\(\\s*)/},{token:\"variable.other.clue\",regex:/[A-Za-z_][0-9A-Za-z_]*/}],\"#escaped_char\":[{token:\"constant.character.escape.clue\",regex:/\\\\[abfnrtvz\\\\\"'$]/},{token:\"constant.character.escape.byte.clue\",regex:/\\\\\\d{1,3}/},{token:\"constant.character.escape.byte.clue\",regex:/\\\\x[0-9A-Fa-f][0-9A-Fa-f]/},{token:\"constant.character.escape.unicode.clue\",regex:/\\\\u\\{[0-9A-Fa-f]+\\}/},{token:\"invalid.illegal.character.escape.clue\",regex:/\\\\./}],property_identifier:[{token:\"variable.other.property.clue\",regex:/[A-Za-z_][0-9A-Za-z_]*/,next:\"start\"},{token:\"\",regex:\"\",next:\"start\"}]},this.normalizeRules()};r.metaData={name:\"Clue\",scopeName:\"source.clue\"},i.inherits(r,o),t.ClueHighlightRules=r}),ace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"],function(e,t,n){\"use strict\";var i=e(\"../../lib/oop\"),o=e(\"../../range\").Range,r=e(\"./fold_mode\").FoldMode,l=t.FoldMode=function(e){e&&(this.foldingStartMarker=new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/,\"|\"+e.start)),this.foldingStopMarker=new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/,\"|\"+e.end)))};i.inherits(l,r),function(){this.foldingStartMarker=/([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/,this.foldingStopMarker=/^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/,this.singleLineBlockCommentRe=/^\\s*(\\/\\*).*\\*\\/\\s*$/,this.tripleStarBlockCommentRe=/^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/,this.startRegionRe=/^\\s*(\\/\\*|\\/\\/)#?region\\b/,this._getFoldWidgetBase=this.getFoldWidget,this.getFoldWidget=function(e,t,n){var i=e.getLine(n);if(this.singleLineBlockCommentRe.test(i)&&!this.startRegionRe.test(i)&&!this.tripleStarBlockCommentRe.test(i))return\"\";var o=this._getFoldWidgetBase(e,t,n);return!o&&this.startRegionRe.test(i)?\"start\":o},this.getFoldWidgetRange=function(e,t,n,i){var o,r=e.getLine(n);if(this.startRegionRe.test(r))return this.getCommentRegionBlock(e,r,n);if(o=r.match(this.foldingStartMarker)){var l=o.index;if(o[1])return this.openingBracketBlock(e,o[1],n,l);var a=e.getCommentFoldRange(n,l+o[0].length,1);return a&&!a.isMultiLine()&&(i?a=this.getSectionRange(e,n):\"all\"!=t&&(a=null)),a}if(\"markbegin\"!==t&&(o=r.match(this.foldingStopMarker))){l=o.index+o[0].length;return o[1]?this.closingBracketBlock(e,o[1],n,l):e.getCommentFoldRange(n,l,-1)}},this.getSectionRange=function(e,t){for(var n=e.getLine(t),i=n.search(/\\S/),r=t,l=n.length,a=t+=1,c=e.getLength();++t<c;){var s=(n=e.getLine(t)).search(/\\S/);if(-1!==s){if(i>s)break;var u=this.getFoldWidgetRange(e,\"all\",t);if(u){if(u.start.row<=r)break;if(u.isMultiLine())t=u.end.row;else if(i==s)break}a=t}}return new o(r,l,a,e.getLine(a).length)},this.getCommentRegionBlock=function(e,t,n){for(var i=t.search(/\\s*$/),r=e.getLength(),l=n,a=/^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/,c=1;++n<r;){t=e.getLine(n);var s=a.exec(t);if(s&&(s[1]?c--:c++,!c))break}if(n>l)return new o(l,i,n,t.length)}}.call(l.prototype)}),ace.define(\"ace/mode/clue\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/clue_highlight_rules\",\"ace/mode/folding/cstyle\"],function(e,t,n){\"use strict\";var i=e(\"../lib/oop\"),o=e(\"./text\").Mode,r=e(\"./clue_highlight_rules\").ClueHighlightRules,l=e(\"./folding/cstyle\").FoldMode,a=function(){this.HighlightRules=r,this.foldingRules=new l,this.$behaviour=this.$defaultBehaviour};i.inherits(a,o),function(){this.lineCommentStart=\"//\",this.blockComment={start:\"/*\",end:\"*/\"},this.$quotes={'\"':'\"',\"'\":\"'\",\"`\":\"`\"},this.$pairQuotesAfter={\"`\":/\\w/},this.$id=\"ace/mode/clue\"}.call(a.prototype),t.Mode=a}),ace.require([\"ace/mode/clue\"],function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)});","name":"3d82fcb5979faebac4fe98575f0f3566.js","input":"ace.define(\"ace/mode/clue_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  /* ***** BEGIN LICENSE BLOCK *****\n  * Distributed under the BSD license:\n  *\n  * Copyright (c) 2012, Ajax.org B.V.\n  * All rights reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * modification, are permitted provided that the following conditions are met:\n  *     * Redistributions of source code must retain the above copyright\n  *       notice, this list of conditions and the following disclaimer.\n  *     * Redistributions in binary form must reproduce the above copyright\n  *       notice, this list of conditions and the following disclaimer in the\n  *       documentation and/or other materials provided with the distribution.\n  *     * Neither the name of Ajax.org B.V. nor the\n  *       names of its contributors may be used to endorse or promote products\n  *       derived from this software without specific prior written permission.\n  *\n  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n  * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  *\n  * ***** END LICENSE BLOCK ***** */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var ClueHighlightRules = function () {\n    this.$rules = {\n      start: [{\n        token: [\"keyword.control.directive.clue\", \"text\", \"text\"],\n        regex: /(@version)( )(.+?(?=\\n))/\n      }, {\n        token: [\"keyword.control.macro.clue\", \"text\", \"text\"],\n        regex: /(@macro)( )([A-Za-z_][0-9A-Za-z_]*)/\n      }, {\n        token: [\"keyword.control.import.clue\", \"text\", \"string\"],\n        regex: /(@import)( )(\".*\")/\n      }, {\n        token: \"meta.preprocessor.macro.invocation.clue\",\n        regex: /\\$[A-Za-z_][0-9A-Za-z_]*!/\n      }, {\n        token: \"keyword.control.directive.clue\",\n        regex: /@(?:(?:else_)?(?:ifos|iflua|ifdef|ifndef|ifcmp|ifos|iflua|ifdef|ifcmp|if)|else|define|macro|error|print)/\n      }, {\n        token: \"constant.numeric.integer.hexadecimal.clue\",\n        regex: /\\b0[xX][0-9A-Fa-f]+(?![pPeE.0-9])\\b/\n      }, {\n        token: \"constant.numeric.float.hexadecimal.clue\",\n        regex: /\\b0[xX][0-9A-Fa-f]+(?:\\.[0-9A-Fa-f]+)?(?:[eE]-?\\d*)?(?:[pP][-+]\\d+)?\\b/\n      }, {\n        token: \"constant.numeric.integer.clue\",\n        regex: /\\b\\d+(?![pPeE.0-9])/\n      }, {\n        token: \"constant.numeric.float.clue\",\n        regex: /\\b\\d+(?:\\.\\d+)?(?:[eE]-?\\d*)?/\n      }, {\n        token: \"punctuation.definition.string.multilined.begin.clue\",\n        regex: /'/,\n        push: [{\n          token: \"punctuation.definition.string.multilined.end.clue\",\n          regex: /'/,\n          next: \"pop\"\n        }, {\n          include: \"#escaped_char\"\n        }, {\n          defaultToken: \"string.quoted.single.clue\"\n        }]\n      }, {\n        token: \"punctuation.definition.string.multilined.begin.clue\",\n        regex: /\"/,\n        push: [{\n          token: \"punctuation.definition.string.multilined.end.clue\",\n          regex: /\"/,\n          next: \"pop\"\n        }, {\n          include: \"#escaped_char\"\n        }, {\n          defaultToken: \"string.quoted.double.clue\"\n        }]\n      }, {\n        token: \"punctuation.definition.string.multilined.begin.clue\",\n        regex: /`/,\n        push: [{\n          token: \"punctuation.definition.string.multilined.end.clue\",\n          regex: /`/,\n          next: \"pop\"\n        }, {\n          include: \"#escaped_char\"\n        }, {\n          defaultToken: \"string.multiline.clue\"\n        }]\n      }, {\n        token: \"comment.line.double-dash.clue\",\n        regex: /\\/\\/.*/\n      }, {\n        token: \"punctuation.definition.comment.begin.clue\",\n        regex: /\\/\\*/,\n        push: [{\n          token: \"punctuation.definition.comment.end.clue\",\n          regex: /\\*\\//,\n          next: \"pop\"\n        }, {\n          include: \"#escaped_char\"\n        }, {\n          defaultToken: \"comment.block.clue\"\n        }]\n      }, {\n        token: \"keyword.control.clue\",\n        regex: /\\b(?:if|elseif|else|for|of|in|with|while|meta|until|fn|method|return|loop|enum|goto|continue|break|try|catch|match|default|macro)\\b/\n      }, {\n        token: \"keyword.scope.clue\",\n        regex: /\\b(?:local|global|static)\\b/\n      }, {\n        token: \"constant.language.clue\",\n        regex: /\\b(?:false|nil|true|_G|_VERSION|math\\.(?:pi|huge))\\b/\n      }, {\n        token: \"constant.language.ellipsis.clue\",\n        regex: /\\.{3}(?!\\.)/\n      }, {\n        token: \"keyword.operator.property.clue\",\n        regex: /\\.|::/,\n        next: \"property_identifier\"\n      }, {\n        token: \"keyword.operator.clue\",\n        regex: /\\/_|\\&|\\||\\!|\\~|\\?|\\$|@|\\+|-|%|#|\\*|\\/|\\^|==?|<=?|>=?|\\.{2}|\\?\\?=?|(?:&&|\\|\\|)=?/\n      }, {\n        token: \"variable.language.self.clue\",\n        regex: /\\bself\\b/\n      }, {\n        token: \"support.function.any-method.clue\",\n        regex: /\\b[a-zA-Z_][a-zA-Z0-9_]*\\b(?=\\(\\s*)/\n      }, {\n        token: \"variable.other.clue\",\n        regex: /[A-Za-z_][0-9A-Za-z_]*/\n      }],\n      \"#escaped_char\": [{\n        token: \"constant.character.escape.clue\",\n        regex: /\\\\[abfnrtvz\\\\\"'$]/\n      }, {\n        token: \"constant.character.escape.byte.clue\",\n        regex: /\\\\\\d{1,3}/\n      }, {\n        token: \"constant.character.escape.byte.clue\",\n        regex: /\\\\x[0-9A-Fa-f][0-9A-Fa-f]/\n      }, {\n        token: \"constant.character.escape.unicode.clue\",\n        regex: /\\\\u\\{[0-9A-Fa-f]+\\}/\n      }, {\n        token: \"invalid.illegal.character.escape.clue\",\n        regex: /\\\\./\n      }],\n      property_identifier: [{\n        token: \"variable.other.property.clue\",\n        regex: /[A-Za-z_][0-9A-Za-z_]*/,\n        next: \"start\"\n      }, {\n        token: \"\",\n        regex: \"\",\n        next: \"start\"\n      }]\n    };\n    this.normalizeRules();\n  };\n  ClueHighlightRules.metaData = {\n    name: \"Clue\",\n    scopeName: \"source.clue\"\n  };\n  oop.inherits(ClueHighlightRules, TextHighlightRules);\n  exports.ClueHighlightRules = ClueHighlightRules;\n});\nace.define(\"ace/mode/folding/cstyle\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/mode/folding/fold_mode\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var FoldMode = exports.FoldMode = function (commentRegex) {\n    if (commentRegex) {\n      this.foldingStartMarker = new RegExp(this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start));\n      this.foldingStopMarker = new RegExp(this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end));\n    }\n  };\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe = /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      if (this.singleLineBlockCommentRe.test(line)) {\n        if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line)) return \"\";\n      }\n      var fw = this._getFoldWidgetBase(session, foldStyle, row);\n      if (!fw && this.startRegionRe.test(line)) return \"start\"; // lineCommentRegionStart\n      return fw;\n    };\n    this.getFoldWidgetRange = function (session, foldStyle, row, forceMultiline) {\n      var line = session.getLine(row);\n      if (this.startRegionRe.test(line)) return this.getCommentRegionBlock(session, line, row);\n      var match = line.match(this.foldingStartMarker);\n      if (match) {\n        var i = match.index;\n        if (match[1]) return this.openingBracketBlock(session, match[1], row, i);\n        var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n        if (range && !range.isMultiLine()) {\n          if (forceMultiline) {\n            range = this.getSectionRange(session, row);\n          } else if (foldStyle != \"all\") range = null;\n        }\n        return range;\n      }\n      if (foldStyle === \"markbegin\") return;\n      var match = line.match(this.foldingStopMarker);\n      if (match) {\n        var i = match.index + match[0].length;\n        if (match[1]) return this.closingBracketBlock(session, match[1], row, i);\n        return session.getCommentFoldRange(row, i, -1);\n      }\n    };\n    this.getSectionRange = function (session, row) {\n      var line = session.getLine(row);\n      var startIndent = line.search(/\\S/);\n      var startRow = row;\n      var startColumn = line.length;\n      row = row + 1;\n      var endRow = row;\n      var maxRow = session.getLength();\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var indent = line.search(/\\S/);\n        if (indent === -1) continue;\n        if (startIndent > indent) break;\n        var subRange = this.getFoldWidgetRange(session, \"all\", row);\n        if (subRange) {\n          if (subRange.start.row <= startRow) {\n            break;\n          } else if (subRange.isMultiLine()) {\n            row = subRange.end.row;\n          } else if (startIndent == indent) {\n            break;\n          }\n        }\n        endRow = row;\n      }\n      return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function (session, line, row) {\n      var startColumn = line.search(/\\s*$/);\n      var maxRow = session.getLength();\n      var startRow = row;\n      var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n      var depth = 1;\n      while (++row < maxRow) {\n        line = session.getLine(row);\n        var m = re.exec(line);\n        if (!m) continue;\n        if (m[1]) depth--;else depth++;\n        if (!depth) break;\n      }\n      var endRow = row;\n      if (endRow > startRow) {\n        return new Range(startRow, startColumn, endRow, line.length);\n      }\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/clue\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/clue_highlight_rules\", \"ace/mode/folding/cstyle\"], function (require, exports, module) {\n  /* ***** BEGIN LICENSE BLOCK *****\n  * Distributed under the BSD license:\n  *\n  * Copyright (c) 2012, Ajax.org B.V.\n  * All rights reserved.\n  *\n  * Redistribution and use in source and binary forms, with or without\n  * modification, are permitted provided that the following conditions are met:\n  *     * Redistributions of source code must retain the above copyright\n  *       notice, this list of conditions and the following disclaimer.\n  *     * Redistributions in binary form must reproduce the above copyright\n  *       notice, this list of conditions and the following disclaimer in the\n  *       documentation and/or other materials provided with the distribution.\n  *     * Neither the name of Ajax.org B.V. nor the\n  *       names of its contributors may be used to endorse or promote products\n  *       derived from this software without specific prior written permission.\n  *\n  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n  * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  *\n  * ***** END LICENSE BLOCK ***** */\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var ClueHighlightRules = require(\"./clue_highlight_rules\").ClueHighlightRules;\n  var FoldMode = require(\"./folding/cstyle\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = ClueHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = \"//\";\n    this.blockComment = {\n      start: \"/*\",\n      end: \"*/\"\n    };\n    this.$quotes = {\n      '\"': '\"',\n      \"'\": \"'\",\n      \"`\": \"`\"\n    };\n    this.$pairQuotesAfter = {\n      \"`\": /\\w/\n    };\n    this.$id = \"ace/mode/clue\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/clue\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}