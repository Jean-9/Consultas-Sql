{"code":"ace.define(\"ace/mode/basic_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(e,t,o){\"use strict\";var i=e(\"../lib/oop\"),r=e(\"./text_highlight_rules\").TextHighlightRules,n=function(){var e=this.createKeywordMapper({\"keyword.control\":\"FOR|TO|NEXT|GOSUB|RETURN|IF|THEN|ELSE|GOTO|ON|WHILE|WEND|TRON|TROFF\",\"entity.name\":\"Auto|Call|Chain|Clear|Close|Common|Cont|Data|MERGE|ALL|Delete|DIM|EDIT|END|ERASE|ERROR|FIELD|GET|INPUT|KILL|LET|LIST|LLIST|LOAD|LSET|RSET|MERGE|NEW|NULL|OPEN|OUT|POKE|PRINT|PUT|RANDOMIZE|READ|RENUM|RESTORE|RESUME|RUN|SAVE|STOP|SWAP|WAIT|WIDTH\",\"keyword.operator\":\"Mod|And|Not|Or|Xor|Eqv|Imp\",\"support.function\":\"ABS|ASC|ATN|CDBL|CINT|COS|CSNG|CVI|CVS|CVD|EOF|EXP|FIX|FRE|INP|INSTR|INT|LEN|LOC|LOG|LPOS|PEEK|POS|RND|SGN|SIN|SPC|SQR|TAB|TAN|USR|VAL|VARPTR\"},\"identifier\",!0);this.$rules={start:[{token:\"string\",regex:/\"(?:\\\\.|[^\"\\\\])*\"/},{token:\"support.function\",regex:/(HEX|CHR|INPUT|LEFT|MID|MKI|MKS|MKD|OCT|RIGHT|SPACE|STR|STRING)\\$/},{token:\"entity.name\",regex:/(?:DEF\\s(?:SEG|USR|FN[a-zA-Z]+)|LINE\\sINPUT|L?PRINT#?(?:\\sUSING)?|MID\\$|ON\\sERROR\\sGOTO|OPTION\\sBASE|WRITE#?|DATE\\$|INKEY\\$|TIME\\$)/},{token:\"variable\",regex:/[a-zA-Z][a-zA-Z0-9_]{0,38}[$%!#]?(?=\\s*=)/},{token:\"keyword.operator\",regex:/\\\\|=|\\^|\\*|\\/|\\+|\\-|<|>|-/},{token:\"paren.lparen\",regex:/[([]/},{token:\"paren.rparen\",regex:/[\\)\\]]/},{token:\"constant.numeric\",regex:/[+-]?\\d+(\\.\\d+)?([ED][+-]?\\d+)?(?:[!#])?/},{token:\"constant.numeric\",regex:/&[HO]?[0-9A-F]+/},{token:\"comment\",regex:/REM\\s+.*$/},{regex:\"\\\\w+\",token:e},{token:\"punctiation\",regex:/[,;]/}]},this.normalizeRules()};i.inherits(n,r),t.BasicHighlightRules=n}),ace.define(\"ace/mode/folding/basic\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\",\"ace/range\",\"ace/token_iterator\"],function(e,t,o){\"use strict\";var i=e(\"../../lib/oop\"),r=e(\"./fold_mode\").FoldMode,n=e(\"../../range\").Range,a=e(\"../../token_iterator\").TokenIterator,s=t.FoldMode=function(){};i.inherits(s,r),function(){this.indentKeywords={tron:1,while:1,for:1,troff:-1,wend:-1,next:-1},this.foldingStartMarker=/(?:\\s|^)(tron|while|for)\\b/i,this.foldingStopMarker=/(?:\\b)(troff|next|wend)\\b/i,this.getFoldWidgetRange=function(e,t,o){var i=e.getLine(o),r=this.foldingStartMarker.test(i),n=this.foldingStopMarker.test(i);if(r||n){var a=n?this.foldingStopMarker.exec(i):this.foldingStartMarker.exec(i);if(a&&a[1].toLowerCase())if(\"keyword.control\"===e.getTokenAt(o,a.index+2).type)return this.basicBlock(e,o,a.index+2)}},this.getFoldWidget=function(e,t,o){var i=e.getLine(o),r=this.foldingStartMarker.test(i),n=this.foldingStopMarker.test(i);if(r&&!n&&((s=(a=this.foldingStartMarker.exec(i))&&a[1].toLowerCase())&&\"keyword.control\"==e.getTokenAt(o,a.index+2).type))return\"start\";if(\"markbeginend\"!=t||!n||r&&n)return\"\";var a,s=(a=i.match(this.foldingStopMarker))&&a[1].toLowerCase();return this.indentKeywords[s]&&\"keyword.control\"===e.getTokenAt(o,a.index+2).type?\"end\":\"\"},this.basicBlock=function(e,t,o,i){var r=new a(e,t,o),s=r.getCurrentToken();if(s&&\"keyword.control\"==s.type){var d=s.value.toLowerCase(),l=[d],c=this.indentKeywords[d];if(c){var g=-1===c?r.getCurrentTokenColumn():e.getLine(t).length,u=t;for(r.step=-1===c?r.stepBackward:r.stepForward;s=r.step();)if(d=s.value.toLowerCase(),\"keyword.control\"===s.type&&this.indentKeywords[d]){var h=c*this.indentKeywords[d];if(h>0?l.unshift(d):h<=0&&l.shift(),0===l.length)break}if(!s)return null;if(i)return r.getCurrentTokenRange();t=r.getCurrentTokenRow();return-1===c?new n(t,e.getLine(t).length,u,g):new n(u,g,t,r.getCurrentTokenColumn())}}}}.call(s.prototype)}),ace.define(\"ace/mode/basic\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/basic_highlight_rules\",\"ace/mode/folding/basic\"],function(e,t,o){\"use strict\";var i=e(\"../lib/oop\"),r=e(\"./text\").Mode,n=e(\"./basic_highlight_rules\").BasicHighlightRules,a=e(\"./folding/basic\").FoldMode,s=function(){this.HighlightRules=n,this.foldingRules=new a,this.$behaviour=this.$defaultBehaviour,this.indentKeywords=this.foldingRules.indentKeywords};i.inherits(s,r),function(){this.lineCommentStart=[\"REM\"],this.getMatching=function(e,t,o,i){if(void 0==t){var r=e.selection.lead;o=r.column,t=r.row}void 0==i&&(i=!0);var n=e.getTokenAt(t,o);if(n&&n.value.toLowerCase()in this.indentKeywords)return this.foldingRules.basicBlock(e,t,o,i)},this.$id=\"ace/mode/basic\"}.call(s.prototype),t.Mode=s}),ace.require([\"ace/mode/basic\"],function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)});","name":"6e7c07e97df8aaa2f5d0bd5540244050.js","input":"ace.define(\"ace/mode/basic_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var BasicHighlightRules = function () {\n    var keywordMapper = this.createKeywordMapper({\n      \"keyword.control\": \"FOR|TO|NEXT|GOSUB|RETURN|IF|THEN|ELSE|GOTO|ON|WHILE|WEND|TRON|TROFF\",\n      \"entity.name\": \"Auto|Call|Chain|Clear|Close|Common|Cont|Data|MERGE|ALL|Delete|DIM|EDIT|END|ERASE|ERROR|FIELD|\" + \"GET|INPUT|KILL|LET|LIST|LLIST|LOAD|LSET|RSET|MERGE|NEW|NULL|OPEN|OUT|POKE|PRINT|PUT|RANDOMIZE|READ|\" + \"RENUM|RESTORE|RESUME|RUN|SAVE|STOP|SWAP|WAIT|WIDTH\",\n      \"keyword.operator\": \"Mod|And|Not|Or|Xor|Eqv|Imp\",\n      \"support.function\": \"ABS|ASC|ATN|CDBL|CINT|COS|CSNG|CVI|CVS|CVD|EOF|EXP|FIX|FRE|INP|INSTR|INT|LEN|LOC|LOG|LPOS|\" + \"PEEK|POS|RND|SGN|SIN|SPC|SQR|TAB|TAN|USR|VAL|VARPTR\"\n    }, \"identifier\", true);\n    this.$rules = {\n      \"start\": [{\n        token: \"string\",\n        regex: /\"(?:\\\\.|[^\"\\\\])*\"/\n      }, {\n        token: \"support.function\",\n        regex: /(HEX|CHR|INPUT|LEFT|MID|MKI|MKS|MKD|OCT|RIGHT|SPACE|STR|STRING)\\$/\n      }, {\n        token: \"entity.name\",\n        regex: /(?:DEF\\s(?:SEG|USR|FN[a-zA-Z]+)|LINE\\sINPUT|L?PRINT#?(?:\\sUSING)?|MID\\$|ON\\sERROR\\sGOTO|OPTION\\sBASE|WRITE#?|DATE\\$|INKEY\\$|TIME\\$)/\n      }, {\n        token: \"variable\",\n        regex: /[a-zA-Z][a-zA-Z0-9_]{0,38}[$%!#]?(?=\\s*=)/\n      }, {\n        token: \"keyword.operator\",\n        regex: /\\\\|=|\\^|\\*|\\/|\\+|\\-|<|>|-/\n      }, {\n        token: \"paren.lparen\",\n        regex: /[([]/\n      }, {\n        token: \"paren.rparen\",\n        regex: /[\\)\\]]/\n      }, {\n        token: \"constant.numeric\",\n        regex: /[+-]?\\d+(\\.\\d+)?([ED][+-]?\\d+)?(?:[!#])?/\n      }, {\n        token: \"constant.numeric\",\n        //hexal, octal\n        regex: /&[HO]?[0-9A-F]+/\n      }, {\n        token: \"comment\",\n        regex: /REM\\s+.*$/\n      }, {\n        regex: \"\\\\w+\",\n        token: keywordMapper\n      }, {\n        token: \"punctiation\",\n        regex: /[,;]/\n      }]\n    };\n    this.normalizeRules();\n  };\n  oop.inherits(BasicHighlightRules, TextHighlightRules);\n  exports.BasicHighlightRules = BasicHighlightRules;\n});\nace.define(\"ace/mode/folding/basic\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/folding/fold_mode\", \"ace/range\", \"ace/token_iterator\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../../lib/oop\");\n  var BaseFoldMode = require(\"./fold_mode\").FoldMode;\n  var Range = require(\"../../range\").Range;\n  var TokenIterator = require(\"../../token_iterator\").TokenIterator;\n  var FoldMode = exports.FoldMode = function () {};\n  oop.inherits(FoldMode, BaseFoldMode);\n  (function () {\n    this.indentKeywords = {\n      \"tron\": 1,\n      \"while\": 1,\n      \"for\": 1,\n      \"troff\": -1,\n      \"wend\": -1,\n      \"next\": -1\n    };\n    this.foldingStartMarker = /(?:\\s|^)(tron|while|for)\\b/i;\n    this.foldingStopMarker = /(?:\\b)(troff|next|wend)\\b/i;\n    this.getFoldWidgetRange = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var isStart = this.foldingStartMarker.test(line);\n      var isEnd = this.foldingStopMarker.test(line);\n      if (isStart || isEnd) {\n        var match = isEnd ? this.foldingStopMarker.exec(line) : this.foldingStartMarker.exec(line);\n        var keyword = match && match[1].toLowerCase();\n        if (keyword) {\n          var type = session.getTokenAt(row, match.index + 2).type;\n          if (type === \"keyword.control\") return this.basicBlock(session, row, match.index + 2);\n        }\n      }\n    };\n    this.getFoldWidget = function (session, foldStyle, row) {\n      var line = session.getLine(row);\n      var isStart = this.foldingStartMarker.test(line);\n      var isEnd = this.foldingStopMarker.test(line);\n      if (isStart && !isEnd) {\n        var match = this.foldingStartMarker.exec(line);\n        var keyword = match && match[1].toLowerCase();\n        if (keyword) {\n          var type = session.getTokenAt(row, match.index + 2).type;\n          if (type == \"keyword.control\") {\n            return \"start\";\n          }\n        }\n      }\n      if (foldStyle != \"markbeginend\" || !isEnd || isStart && isEnd) return \"\";\n      var match = line.match(this.foldingStopMarker);\n      var keyword = match && match[1].toLowerCase();\n      if (this.indentKeywords[keyword]) {\n        if (session.getTokenAt(row, match.index + 2).type === \"keyword.control\") return \"end\";\n      }\n      return \"\";\n    };\n    this.basicBlock = function (session, row, column, tokenRange) {\n      var stream = new TokenIterator(session, row, column);\n      var token = stream.getCurrentToken();\n      if (!token || token.type != \"keyword.control\") return;\n      var val = token.value.toLowerCase();\n      var stack = [val];\n      var dir = this.indentKeywords[val];\n      if (!dir) return;\n      var startColumn = dir === -1 ? stream.getCurrentTokenColumn() : session.getLine(row).length;\n      var startRow = row;\n      stream.step = dir === -1 ? stream.stepBackward : stream.stepForward;\n      while (token = stream.step()) {\n        val = token.value.toLowerCase();\n        if (token.type !== \"keyword.control\" || !this.indentKeywords[val]) continue;\n        var level = dir * this.indentKeywords[val];\n        if (level > 0) {\n          stack.unshift(val);\n        } else if (level <= 0) {\n          stack.shift();\n        }\n        if (stack.length === 0) {\n          break;\n        }\n      }\n      if (!token) return null;\n      if (tokenRange) return stream.getCurrentTokenRange();\n      var row = stream.getCurrentTokenRow();\n      if (dir === -1) return new Range(row, session.getLine(row).length, startRow, startColumn);else return new Range(startRow, startColumn, row, stream.getCurrentTokenColumn());\n    };\n  }).call(FoldMode.prototype);\n});\nace.define(\"ace/mode/basic\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/mode/basic_highlight_rules\", \"ace/mode/folding/basic\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var BasicHighlightRules = require(\"./basic_highlight_rules\").BasicHighlightRules;\n  var FoldMode = require(\"./folding/basic\").FoldMode;\n  var Mode = function () {\n    this.HighlightRules = BasicHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n    this.indentKeywords = this.foldingRules.indentKeywords;\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.lineCommentStart = [\"REM\"];\n    this.getMatching = function (session, row, column, tokenRange) {\n      if (row == undefined) {\n        var pos = session.selection.lead;\n        column = pos.column;\n        row = pos.row;\n      }\n      if (tokenRange == undefined) tokenRange = true;\n      var startToken = session.getTokenAt(row, column);\n      if (startToken) {\n        var val = startToken.value.toLowerCase();\n        if (val in this.indentKeywords) return this.foldingRules.basicBlock(session, row, column, tokenRange);\n      }\n    };\n    this.$id = \"ace/mode/basic\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/basic\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}