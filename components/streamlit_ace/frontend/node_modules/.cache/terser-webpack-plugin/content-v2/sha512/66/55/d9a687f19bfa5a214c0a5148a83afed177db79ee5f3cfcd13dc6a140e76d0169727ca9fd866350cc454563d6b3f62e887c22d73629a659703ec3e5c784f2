{"code":"ace.define(\"ace/mode/csv_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(e,t,i){\"use strict\";var s=e(\"../lib/oop\"),o=e(\"./text_highlight_rules\").TextHighlightRules,r=function(){o.call(this)};s.inherits(r,o),t.CsvHighlightRules=r}),ace.define(\"ace/mode/csv\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/lib/lang\",\"ace/mode/csv_highlight_rules\"],function(e,t,i){\"use strict\";var s=e(\"../lib/oop\"),o=e(\"./text\").Mode,r=e(\"../lib/lang\").escapeRegExp,l=e(\"./csv_highlight_rules\").CsvHighlightRules,h=function(e){this.HighlightRules=l,e||(e={});var t=[e.splitter||\",\",e.quote||'\"'].map(r).join(\"|\");this.$tokenizer={getLineTokens:function(e,t,i){return function(e,t,i){for(var s=[],o=e.split(i.separatorRegex),r=i.spliter,l=i.quote||'\"',h=(t||\"start\").split(\"-\"),u=parseInt(h[1])||0,c=\"string\"==h[0],g=!c,a=0;a<o.length;a++){var p=o[a];if(p){var d=!1;p!=r||c?p==l?g?(c=!0,g=!1):c&&(\"\"==o[a+1]&&o[a+2]==l?(p=l+l,a+=2):c=!1):g=!1:(u++,g=!0,d=!0),s.push({value:p,type:n[u%n.length]+\".csv_\"+u+(d?\".csv_separator\":\"\")})}}return{tokens:s,state:c?\"string-\"+u:\"start\"}}(e,t,this.options)},options:{quotes:e.quote||'\"',separatorRegex:new RegExp(\"(\"+t+\")\"),spliter:e.splitter||\",\"},states:{}},this.$highlightRules=new this.HighlightRules};s.inherits(h,o),function(){this.getTokenizer=function(){return this.$tokenizer},this.$id=\"ace/mode/csv\"}.call(h.prototype),t.Mode=h;var n=[\"keyword\",\"text\",\"string\",\"string.regex\",\"variable\",\"constant.numeric\"]}),ace.define(\"ace/mode/tsv_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"],function(e,t,i){\"use strict\";var s=e(\"../lib/oop\"),o=e(\"./text_highlight_rules\").TextHighlightRules,r=function(){o.call(this)};s.inherits(r,o),t.TsvHighlightRules=r}),ace.define(\"ace/mode/tsv\",[\"require\",\"exports\",\"module\",\"ace/mode/csv\",\"ace/mode/tsv_highlight_rules\"],function(e,t,i){\"use strict\";var s=e(\"./csv\").Mode,o=e(\"./tsv_highlight_rules\").TsvHighlightRules;t.Mode=function(e){var t=new s({splitter:\"\\t\",quote:'\"'});return t.HighlightRules=o,t.$id=\"ace/mode/tsv\",t}}),ace.require([\"ace/mode/tsv\"],function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)});","name":"dc641801697ffa4063f711d8cc2bc8ca.js","input":"ace.define(\"ace/mode/csv_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var CsvHighlightRules = function () {\n    TextHighlightRules.call(this);\n  };\n  oop.inherits(CsvHighlightRules, TextHighlightRules);\n  exports.CsvHighlightRules = CsvHighlightRules;\n});\nace.define(\"ace/mode/csv\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text\", \"ace/lib/lang\", \"ace/mode/csv_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextMode = require(\"./text\").Mode;\n  var escapeRegExp = require(\"../lib/lang\").escapeRegExp;\n  var CsvHighlightRules = require(\"./csv_highlight_rules\").CsvHighlightRules;\n  var Mode = function (options) {\n    this.HighlightRules = CsvHighlightRules;\n    if (!options) options = {};\n    var separatorRegex = [options.splitter || \",\", options.quote || '\"'].map(escapeRegExp).join(\"|\");\n    this.$tokenizer = {\n      getLineTokens: function (line, state, row) {\n        return tokenizeCsv(line, state, this.options);\n      },\n      options: {\n        quotes: options.quote || '\"',\n        separatorRegex: new RegExp(\"(\" + separatorRegex + \")\"),\n        spliter: options.splitter || \",\"\n      },\n      states: {}\n    };\n    this.$highlightRules = new this.HighlightRules();\n  };\n  oop.inherits(Mode, TextMode);\n  (function () {\n    this.getTokenizer = function () {\n      return this.$tokenizer;\n    };\n    this.$id = \"ace/mode/csv\";\n  }).call(Mode.prototype);\n  exports.Mode = Mode;\n  var classNames = [\"keyword\", \"text\", \"string\", \"string.regex\", \"variable\", \"constant.numeric\"];\n  function tokenizeCsv(line, state, options) {\n    var result = [];\n    var parts = line.split(options.separatorRegex);\n    var spliter = options.spliter;\n    var quote = options.quote || '\"';\n    var stateParts = (state || \"start\").split(\"-\");\n    var column = parseInt(stateParts[1]) || 0;\n    var inString = stateParts[0] == 'string';\n    var atColumnStart = !inString;\n    for (var i = 0; i < parts.length; i++) {\n      var value = parts[i];\n      if (value) {\n        var isSeparator = false;\n        if (value == spliter && !inString) {\n          column++;\n          atColumnStart = true;\n          isSeparator = true;\n        } else if (value == quote) {\n          if (atColumnStart) {\n            inString = true;\n            atColumnStart = false;\n          } else if (inString) {\n            if (parts[i + 1] == '' && parts[i + 2] == quote) {\n              value = quote + quote;\n              i += 2;\n            } else {\n              inString = false;\n            }\n          }\n        } else {\n          atColumnStart = false;\n        }\n        result.push({\n          value: value,\n          type: classNames[column % classNames.length] + \".csv_\" + column + (isSeparator ? \".csv_separator\" : \"\")\n        });\n      }\n    }\n    return {\n      tokens: result,\n      state: inString ? \"string-\" + column : \"start\"\n    };\n  }\n});\nace.define(\"ace/mode/tsv_highlight_rules\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/mode/text_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var oop = require(\"../lib/oop\");\n  var TextHighlightRules = require(\"./text_highlight_rules\").TextHighlightRules;\n  var TsvHighlightRules = function () {\n    TextHighlightRules.call(this);\n  };\n  oop.inherits(TsvHighlightRules, TextHighlightRules);\n  exports.TsvHighlightRules = TsvHighlightRules;\n});\nace.define(\"ace/mode/tsv\", [\"require\", \"exports\", \"module\", \"ace/mode/csv\", \"ace/mode/tsv_highlight_rules\"], function (require, exports, module) {\n  \"use strict\";\n\n  var CSVMode = require(\"./csv\").Mode;\n  var TsvHighlightRules = require(\"./tsv_highlight_rules\").TsvHighlightRules;\n  var Mode = function (options) {\n    var mode = new CSVMode({\n      splitter: \"\\t\",\n      quote: '\"'\n    });\n    mode.HighlightRules = TsvHighlightRules;\n    mode.$id = \"ace/mode/tsv\";\n    return mode;\n  };\n  exports.Mode = Mode;\n});\n(function () {\n  ace.require([\"ace/mode/tsv\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}