{"code":"ace.define(\"ace/ext/diff/scroll_diff_decorator\",[\"require\",\"exports\",\"module\",\"ace/layer/decorators\"],function(e,t,n){var i=this&&this.__extends||function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if(\"function\"!==typeof n&&null!==n)throw new TypeError(\"Class extends value \"+String(n)+\" is not a constructor or null\");function i(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),r=this&&this.__values||function(e){var t=\"function\"===typeof Symbol&&Symbol.iterator,n=t&&e[t],i=0;if(n)return n.call(e);if(e&&\"number\"===typeof e.length)return{next:function(){return e&&i>=e.length&&(e=void 0),{value:e&&e[i++],done:!e}}};throw new TypeError(t?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")},o=function(e){function t(t,n,i){var r=e.call(this,t,n)||this;return r.colors.dark.delete=\"rgba(255, 18, 18, 1)\",r.colors.dark.insert=\"rgba(18, 136, 18, 1)\",r.colors.light.delete=\"rgb(255,51,51)\",r.colors.light.insert=\"rgb(32,133,72)\",r.$zones=[],r.$forInlineDiff=i,r}return i(t,e),t.prototype.addZone=function(e,t,n){this.$zones.push({startRow:e,endRow:t,type:n})},t.prototype.setSessions=function(e,t){this.sessionA=e,this.sessionB=t},t.prototype.$updateDecorators=function(t){if(\"function\"===typeof this.canvas.getContext&&(e.prototype.$updateDecorators.call(this,t),this.$zones.length>0)){var n=!0===this.renderer.theme.isDark?this.colors.dark:this.colors.light,i=this.canvas.getContext(\"2d\");this.$setDiffDecorators(i,n)}},t.prototype.$transformPosition=function(e,t){return\"delete\"==t?this.sessionA.documentToScreenRow(e,0):this.sessionB.documentToScreenRow(e,0)},t.prototype.$setDiffDecorators=function(e,t){var n,i,o=this;var s=this.$zones;if(s){var a=[];[s.filter(function(e){return\"delete\"===e.type}),s.filter(function(e){return\"insert\"===e.type})].forEach(function(e){e.forEach(function(e,n){var i=o.$transformPosition(e.startRow,e.type)*o.lineHeight,r=o.$transformPosition(e.endRow,e.type)*o.lineHeight+o.lineHeight,s=Math.round(o.heightRatio*i),u=Math.round(o.heightRatio*r),l=Math.round((s+u)/2),h=u-l;h<o.halfMinDecorationHeight&&(h=o.halfMinDecorationHeight);var d=a[a.length-1];n>0&&d&&d.type===e.type&&l-h<d.to+1&&(l=a[a.length-1].to+1+h),l-h<0&&(l=h),l+h>o.canvasHeight&&(l=o.canvasHeight-h),a.push({type:e.type,from:l-h,to:l+h,color:t[e.type]||null})})}),a=a.sort(function(e,t){return e.from===t.from?e.to-t.to:e.from-t.from});try{for(var u=r(a),l=u.next();!l.done;l=u.next()){var h=l.value;e.fillStyle=h.color||null;var d=h.from,c=h.to-d;this.$forInlineDiff?e.fillRect(this.oneZoneWidth,d,2*this.oneZoneWidth,c):\"delete\"==h.type?e.fillRect(this.oneZoneWidth,d,this.oneZoneWidth,c):e.fillRect(2*this.oneZoneWidth,d,this.oneZoneWidth,c)}}catch(f){n={error:f}}finally{try{l&&!l.done&&(i=u.return)&&i.call(u)}finally{if(n)throw n.error}}}},t.prototype.setZoneWidth=function(){this.oneZoneWidth=Math.round(this.canvasWidth/3)},t}(e(\"../../layer/decorators\").Decorator);t.ScrollDiffDecorator=o}),ace.define(\"ace/ext/diff/styles-css.js\",[\"require\",\"exports\",\"module\"],function(e,t,n){t.cssText='\\n/*\\n * Line Markers\\n */\\n.ace_diff {\\n    position: absolute;\\n    z-index: 0;\\n}\\n.ace_diff.inline {\\n    z-index: 20;\\n}\\n/*\\n * Light Colors \\n */\\n.ace_diff.insert {\\n    background-color: #EFFFF1;\\n}\\n.ace_diff.delete {\\n    background-color: #FFF1F1;\\n}\\n.ace_diff.aligned_diff {\\n    background: rgba(206, 194, 191, 0.26);\\n    background: repeating-linear-gradient(\\n                45deg,\\n              rgba(122, 111, 108, 0.26),\\n              rgba(122, 111, 108, 0.26) 5px,\\n              rgba(0, 0, 0, 0) 5px,\\n              rgba(0, 0, 0, 0) 10px \\n    );\\n}\\n\\n.ace_diff.insert.inline {\\n    background-color:  rgb(74 251 74 / 18%); \\n}\\n.ace_diff.delete.inline {\\n    background-color: rgb(251 74 74 / 15%);\\n}\\n\\n.ace_diff.delete.inline.empty {\\n    background-color: rgba(255, 128, 79, 0.7);\\n    width: 2px !important;\\n}\\n\\n.ace_diff.insert.inline.empty {\\n    background-color: rgba(49, 230, 96, 0.7);\\n    width: 2px !important;\\n}\\n\\n.ace_diff-active-line {\\n    border-bottom: 1px solid;\\n    border-top: 1px solid;\\n    background: transparent;\\n    position: absolute;\\n    box-sizing: border-box;\\n    border-color: #9191ac;\\n}\\n\\n.ace_dark .ace_diff-active-line {\\n    background: transparent;\\n    border-color: #75777a;\\n}\\n \\n\\n/* gutter changes */\\n.ace_mini-diff_gutter-enabled > .ace_gutter-cell,\\n.ace_mini-diff_gutter-enabled > .ace_gutter-cell_svg-icons {\\n    padding-right: 13px;\\n}\\n\\n.ace_mini-diff_gutter_other > .ace_gutter-cell,\\n.ace_mini-diff_gutter_other > .ace_gutter-cell_svg-icons  {\\n    display: none;\\n}\\n\\n.ace_mini-diff_gutter_other {\\n    pointer-events: none;\\n}\\n\\n\\n.ace_mini-diff_gutter-enabled > .mini-diff-added {\\n    background-color: #EFFFF1;\\n    border-left: 3px solid #2BB534;\\n    padding-left: 16px;\\n    display: block;\\n}\\n\\n.ace_mini-diff_gutter-enabled > .mini-diff-deleted {\\n    background-color: #FFF1F1;\\n    border-left: 3px solid #EA7158;\\n    padding-left: 16px;\\n    display: block;\\n}\\n\\n\\n.ace_mini-diff_gutter-enabled > .mini-diff-added:after {\\n    position: absolute;\\n    right: 2px;\\n    content: \"+\";\\n    color: darkgray;\\n    background-color: inherit;\\n}\\n\\n.ace_mini-diff_gutter-enabled > .mini-diff-deleted:after {\\n    position: absolute;\\n    right: 2px;\\n    content: \"-\";\\n    color: darkgray;\\n    background-color: inherit;\\n}\\n.ace_fade-fold-widgets:hover > .ace_folding-enabled > .mini-diff-added:after,\\n.ace_fade-fold-widgets:hover > .ace_folding-enabled > .mini-diff-deleted:after {\\n    display: none;\\n}\\n\\n.ace_diff_other .ace_selection {\\n    filter: drop-shadow(1px 2px 3px darkgray);\\n}\\n\\n.ace_hidden_marker-layer .ace_bracket {\\n    display: none;\\n}\\n\\n\\n\\n/*\\n * Dark Colors \\n */\\n\\n.ace_dark .ace_diff.insert {\\n    background-color: #212E25;\\n}\\n.ace_dark .ace_diff.delete {\\n    background-color: #3F2222;\\n}\\n\\n.ace_dark .ace_mini-diff_gutter-enabled > .mini-diff-added {\\n    background-color: #212E25;\\n    border-left-color:#00802F;\\n}\\n\\n.ace_dark .ace_mini-diff_gutter-enabled > .mini-diff-deleted {\\n    background-color: #3F2222;\\n    border-left-color: #9C3838;\\n}\\n\\n'}),ace.define(\"ace/ext/diff/gutter_decorator\",[\"require\",\"exports\",\"module\",\"ace/lib/dom\"],function(e,t,n){var i=e(\"../../lib/dom\"),r=function(){function e(e,t){this.gutterClass=\"ace_mini-diff_gutter-enabled\",this.gutterCellsClasses={add:\"mini-diff-added\",delete:\"mini-diff-deleted\"},this.editor=e,this.type=t,this.chunks=[],this.attachToEditor()}return e.prototype.attachToEditor=function(){this.renderGutters=this.renderGutters.bind(this),i.addCssClass(this.editor.renderer.$gutterLayer.element,this.gutterClass),this.editor.renderer.$gutterLayer.on(\"afterRender\",this.renderGutters)},e.prototype.renderGutters=function(e,t){var n=this,i=this.editor.renderer.$gutterLayer.$lines.cells;i.forEach(function(e){e.element.classList.remove(Object.values(n.gutterCellsClasses))});var r=-1===this.type?\"old\":\"new\",o=-1===this.type?this.gutterCellsClasses.delete:this.gutterCellsClasses.add;this.chunks.forEach(function(e){var t=e[r].start.row,n=e[r].end.row-1;i.forEach(function(e){e.row>=t&&e.row<=n&&e.element.classList.add(o)})})},e.prototype.setDecorations=function(e){this.chunks=e,this.renderGutters()},e.prototype.dispose=function(){i.removeCssClass(this.editor.renderer.$gutterLayer.element,this.gutterClass),this.editor.renderer.$gutterLayer.off(\"afterRender\",this.renderGutters)},e}();t.MinimalGutterDiffDecorator=r}),ace.define(\"ace/ext/diff/base_diff_view\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/lib/dom\",\"ace/config\",\"ace/line_widgets\",\"ace/ext/diff/scroll_diff_decorator\",\"ace/ext/diff/styles-css.js\",\"ace/editor\",\"ace/virtual_renderer\",\"ace/undomanager\",\"ace/layer/decorators\",\"ace/theme/textmate\",\"ace/multi_select\",\"ace/edit_session\",\"ace/ext/diff/gutter_decorator\"],function(e,t,n){\"use strict\";var i=this&&this.__read||function(e,t){var n=\"function\"===typeof Symbol&&e[Symbol.iterator];if(!n)return e;var i,r,o=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(i=o.next()).done;)s.push(i.value)}catch(a){r={error:a}}finally{try{i&&!i.done&&(n=o.return)&&n.call(o)}finally{if(r)throw r.error}}return s},r=(e(\"../../lib/oop\"),e(\"../../range\").Range),o=e(\"../../lib/dom\"),s=e(\"../../config\"),a=e(\"../../line_widgets\").LineWidgets,u=e(\"./scroll_diff_decorator\").ScrollDiffDecorator,l=e(\"./styles-css.js\").cssText,h=e(\"../../editor\").Editor,d=e(\"../../virtual_renderer\").VirtualRenderer,c=e(\"../../undomanager\").UndoManager,f=e(\"../../layer/decorators\").Decorator;e(\"../../theme/textmate\"),e(\"../../multi_select\");var g=e(\"../../edit_session\").EditSession,m=e(\"./gutter_decorator\").MinimalGutterDiffDecorator,p={compute:function(e,t,n){return[]}},v=function(){function e(e,t){this.onChangeTheme=this.onChangeTheme.bind(this),this.onInput=this.onInput.bind(this),this.onChangeFold=this.onChangeFold.bind(this),this.realign=this.realign.bind(this),this.onSelect=this.onSelect.bind(this),this.onChangeWrapLimit=this.onChangeWrapLimit.bind(this),this.realignPending=!1,this.diffSession,this.chunks,this.inlineDiffEditor=e||!1,this.currentDiffIndex=0,this.diffProvider=p,t&&(this.container=t),o.importCssString(l,\"diffview.css\"),this.$ignoreTrimWhitespace=!1,this.$maxDiffs=5e3,this.$maxComputationTimeMs=150,this.$syncSelections=!1,this.$foldUnchangedOnInput=!1,this.markerB=new b(this,1),this.markerA=new b(this,-1)}return e.prototype.$setupModels=function(e){e.diffProvider&&this.setProvider(e.diffProvider),this.showSideA=void 0==e.inline||\"a\"===e.inline;var t={scrollPastEnd:.5,highlightActiveLine:!1,highlightGutterLine:!1,animatedScroll:!0,customScrollbar:!0,vScrollBarAlwaysVisible:!0,fadeFoldWidgets:!0,showFoldWidgets:!0,selectionStyle:\"text\"};if(this.savedOptionsA=e.editorA&&e.editorA.getOptions(t),this.savedOptionsB=e.editorB&&e.editorB.getOptions(t),this.inlineDiffEditor&&\"a\"!==e.inline||(this.editorA=e.editorA||this.$setupModel(e.sessionA,e.valueA),this.container&&this.container.appendChild(this.editorA.container),this.editorA.setOptions(t)),this.inlineDiffEditor&&\"b\"!==e.inline||(this.editorB=e.editorB||this.$setupModel(e.sessionB,e.valueB),this.container&&this.container.appendChild(this.editorB.container),this.editorB.setOptions(t)),this.inlineDiffEditor){this.activeEditor=this.showSideA?this.editorA:this.editorB,this.otherSession=this.showSideA?this.sessionB:this.sessionA;var n=this.activeEditor.getOptions();n.readOnly=!0,delete n.mode,this.otherEditor=new h(new d(null),void 0,n),this.showSideA?this.editorB=this.otherEditor:this.editorA=this.otherEditor}this.setDiffSession({sessionA:e.sessionA||(e.editorA?e.editorA.session:new g(e.valueA||\"\")),sessionB:e.sessionB||(e.editorB?e.editorB.session:new g(e.valueB||\"\")),chunks:[]}),this.setupScrollbars()},e.prototype.addGutterDecorators=function(){this.gutterDecoratorA||(this.gutterDecoratorA=new m(this.editorA,-1)),this.gutterDecoratorB||(this.gutterDecoratorB=new m(this.editorB,1))},e.prototype.$setupModel=function(e,t){var n=new h(new d,e);return n.session.setUndoManager(new c),void 0!=t&&n.setValue(t,-1),n},e.prototype.foldUnchanged=function(){for(var e=this.chunks,t=\"-\".repeat(120),n={old:new r(0,0,0,0),new:new r(0,0,0,0)},i=!1,o=0;o<e.length+1;o++){var s=e[o]||{old:new r(this.sessionA.getLength(),0,this.sessionA.getLength(),0),new:new r(this.sessionB.getLength(),0,this.sessionB.getLength(),0)},a=s.new.start.row-n.new.end.row-5;if(a>2){var u=n.old.end.row+2,l=this.sessionA.addFold(t,new r(u,0,u+a,Number.MAX_VALUE));u=n.new.end.row+2;var h=this.sessionB.addFold(t,new r(u,0,u+a,Number.MAX_VALUE));(l||h)&&(i=!0),h&&l&&(l.other=h,h.other=l)}n=s}return i},e.prototype.unfoldUnchanged=function(){for(var e=this.sessionA.getAllFolds(),t=e.length-1;t>=0;t--){var n=e[t];120==n.placeholder.length&&this.sessionA.removeFold(n)}},e.prototype.toggleFoldUnchanged=function(){this.foldUnchanged()||this.unfoldUnchanged()},e.prototype.setDiffSession=function(e){this.diffSession&&(this.$detachSessionsEventHandlers(),this.clearSelectionMarkers()),this.diffSession=e,this.sessionA=this.sessionB=null,this.diffSession&&(this.chunks=this.diffSession.chunks||[],this.editorA&&this.editorA.setSession(e.sessionA),this.editorB&&this.editorB.setSession(e.sessionB),this.sessionA=this.diffSession.sessionA,this.sessionB=this.diffSession.sessionB,this.$attachSessionsEventHandlers(),this.initSelectionMarkers()),this.otherSession=this.showSideA?this.sessionB:this.sessionA},e.prototype.$attachSessionsEventHandlers=function(){},e.prototype.$detachSessionsEventHandlers=function(){},e.prototype.getDiffSession=function(){return this.diffSession},e.prototype.setTheme=function(e){this.editorA&&this.editorA.setTheme(e),this.editorB&&this.editorB.setTheme(e)},e.prototype.getTheme=function(){return(this.editorA||this.editorB).getTheme()},e.prototype.onChangeTheme=function(e){var t=e&&e.theme||this.getTheme();this.editorA&&this.editorA.getTheme()!==t&&this.editorA.setTheme(t),this.editorB&&this.editorB.getTheme()!==t&&this.editorB.setTheme(t)},e.prototype.resize=function(e){this.editorA&&this.editorA.resize(e),this.editorB&&this.editorB.resize(e)},e.prototype.scheduleOnInput=function(){var e=this;this.$onInputTimer||(this.$onInputTimer=setTimeout(function(){e.$onInputTimer=null,e.onInput()}))},e.prototype.onInput=function(){var e=this;this.$onInputTimer&&clearTimeout(this.$onInputTimer);var t=this.sessionA.doc.getAllLines(),n=this.sessionB.doc.getAllLines();this.selectionRangeA=null,this.selectionRangeB=null;var i=this.$diffLines(t,n);this.diffSession.chunks=this.chunks=i,this.gutterDecoratorA&&this.gutterDecoratorA.setDecorations(i),this.gutterDecoratorB&&this.gutterDecoratorB.setDecorations(i),this.chunks&&this.chunks.length>this.$maxDiffs||(this.align(),this.editorA&&this.editorA.renderer.updateBackMarkers(),this.editorB&&this.editorB.renderer.updateBackMarkers(),setTimeout(function(){e.updateScrollBarDecorators()},0),this.$foldUnchangedOnInput&&this.foldUnchanged())},e.prototype.setupScrollbars=function(){var e=this,t=function(t){setTimeout(function(){e.$setScrollBarDecorators(t),e.updateScrollBarDecorators()},0)};this.inlineDiffEditor?t(this.activeEditor.renderer):(t(this.editorA.renderer),t(this.editorB.renderer))},e.prototype.$setScrollBarDecorators=function(e){e.$scrollDecorator&&e.$scrollDecorator.destroy(),e.$scrollDecorator=new u(e.scrollBarV,e,this.inlineDiffEditor),e.$scrollDecorator.setSessions(this.sessionA,this.sessionB),e.scrollBarV.setVisible(!0),e.scrollBarV.element.style.bottom=e.scrollBarH.getHeight()+\"px\"},e.prototype.$resetDecorators=function(e){e.$scrollDecorator&&e.$scrollDecorator.destroy(),e.$scrollDecorator=new f(e.scrollBarV,e)},e.prototype.updateScrollBarDecorators=function(){var e=this;if(this.inlineDiffEditor){if(!this.activeEditor)return;this.activeEditor.renderer.$scrollDecorator.$zones=[]}else{if(!this.editorA||!this.editorB)return;this.editorA.renderer.$scrollDecorator.$zones=[],this.editorB.renderer.$scrollDecorator.$zones=[]}var t=function(e,t){e&&\"function\"===typeof e.renderer.$scrollDecorator.addZone&&(t.old.start.row!=t.old.end.row&&e.renderer.$scrollDecorator.addZone(t.old.start.row,t.old.end.row-1,\"delete\"),t.new.start.row!=t.new.end.row&&e.renderer.$scrollDecorator.addZone(t.new.start.row,t.new.end.row-1,\"insert\"))};this.inlineDiffEditor?(this.chunks&&this.chunks.forEach(function(n){t(e.activeEditor,n)}),this.activeEditor.renderer.$scrollDecorator.$updateDecorators(this.activeEditor.renderer.layerConfig)):(this.chunks&&this.chunks.forEach(function(n){t(e.editorA,n),t(e.editorB,n)}),this.editorA.renderer.$scrollDecorator.$updateDecorators(this.editorA.renderer.layerConfig),this.editorB.renderer.$scrollDecorator.$updateDecorators(this.editorB.renderer.layerConfig))},e.prototype.$diffLines=function(e,t){return this.diffProvider.compute(e,t,{ignoreTrimWhitespace:this.$ignoreTrimWhitespace,maxComputationTimeMs:this.$maxComputationTimeMs})},e.prototype.setProvider=function(e){this.diffProvider=e},e.prototype.$addWidget=function(e,t){var n=e.lineWidgets[t.row];n&&(t.rowsAbove+=n.rowsAbove>t.rowsAbove?n.rowsAbove:t.rowsAbove,t.rowCount+=n.rowCount),e.lineWidgets[t.row]=t,e.widgetManager.lineWidgets[t.row]=t,e.$resetRowCache(t.row);var i=e.getFoldAt(t.row,0);i&&e.widgetManager.updateOnFold({data:i,action:\"add\"},e)},e.prototype.$initWidgets=function(e){var t=e.session;t.widgetManager||(t.widgetManager=new a(t),t.widgetManager.attach(e)),e.session.lineWidgets=[],e.session.widgetManager.lineWidgets=[],e.session.$resetRowCache(0)},e.prototype.$screenRow=function(e,t){var n=t.documentToScreenPosition(e).row,i=e.row-t.getLength()+1;return i>0&&(n+=i),n},e.prototype.align=function(){},e.prototype.onChangeWrapLimit=function(e,t){},e.prototype.onSelect=function(e,t){this.searchHighlight(t),this.syncSelect(t)},e.prototype.syncSelect=function(e){if(!this.$updatingSelection){var t=e.session===this.sessionA,n=e.getRange(),i=t?this.selectionRangeA:this.selectionRangeB;if(!i||!n.isEqual(i)){t?this.selectionRangeA=n:this.selectionRangeB=n,this.$updatingSelection=!0;var r=this.transformRange(n,t);this.$syncSelections&&(t?this.editorB:this.editorA).session.selection.setSelectionRange(r),this.$updatingSelection=!1,t?(this.selectionRangeA=n,this.selectionRangeB=r):(this.selectionRangeA=r,this.selectionRangeB=n),this.updateSelectionMarker(this.syncSelectionMarkerA,this.sessionA,this.selectionRangeA),this.updateSelectionMarker(this.syncSelectionMarkerB,this.sessionB,this.selectionRangeB)}}},e.prototype.updateSelectionMarker=function(e,t,n){e.setRange(n),t._signal(\"changeFrontMarker\")},e.prototype.onChangeFold=function(e,t){var n=e.data;if(!this.$syncingFold&&n&&e.action){this.scheduleRealign();var i=t===this.sessionA,r=i?this.sessionB:this.sessionA;if(\"remove\"===e.action&&(n.other?(n.other.other=null,r.removeFold(n.other)):n.lineWidget&&(r.widgetManager.addLineWidget(n.lineWidget),n.lineWidget=null,r.$editor&&r.$editor.renderer.updateBackMarkers())),\"add\"===e.action){var o=this.transformRange(n.range,i);if(o.isEmpty()){var s=o.start.row+1;r.lineWidgets[s]&&(n.lineWidget=r.lineWidgets[s],r.widgetManager.removeLineWidget(n.lineWidget),r.$editor&&r.$editor.renderer.updateBackMarkers())}else this.$syncingFold=!0,n.other=r.addFold(n.placeholder,o),n.other&&(n.other.other=n),this.$syncingFold=!1}}},e.prototype.scheduleRealign=function(){this.realignPending||(this.realignPending=!0,this.editorA.renderer.on(\"beforeRender\",this.realign),this.editorB.renderer.on(\"beforeRender\",this.realign))},e.prototype.realign=function(){this.realignPending=!0,this.editorA.renderer.off(\"beforeRender\",this.realign),this.editorB.renderer.off(\"beforeRender\",this.realign),this.align(),this.realignPending=!1},e.prototype.detach=function(){this.editorA&&this.editorB&&(this.savedOptionsA&&this.editorA.setOptions(this.savedOptionsA),this.savedOptionsB&&this.editorB.setOptions(this.savedOptionsB),this.editorA.renderer.off(\"beforeRender\",this.realign),this.editorB.renderer.off(\"beforeRender\",this.realign),this.$detachEventHandlers(),this.$removeLineWidgets(this.sessionA),this.$removeLineWidgets(this.sessionB),this.gutterDecoratorA&&this.gutterDecoratorA.dispose(),this.gutterDecoratorB&&this.gutterDecoratorB.dispose(),this.sessionA.selection.clearSelection(),this.sessionB.selection.clearSelection(),this.savedOptionsA&&this.savedOptionsA.customScrollbar&&this.$resetDecorators(this.editorA.renderer),this.savedOptionsB&&this.savedOptionsB.customScrollbar&&this.$resetDecorators(this.editorB.renderer))},e.prototype.$removeLineWidgets=function(e){e.lineWidgets=[],e.widgetManager.lineWidgets=[],e._signal(\"changeFold\",{data:{start:{row:0}}})},e.prototype.$detachEventHandlers=function(){},e.prototype.destroy=function(){this.detach(),this.editorA&&this.editorA.destroy(),this.editorB&&this.editorB.destroy(),this.editorA=this.editorB=null},e.prototype.gotoNext=function(e){var t=this.activeEditor||this.editorA;this.inlineDiffEditor&&(t=this.editorA);var n=t==this.editorA,i=t.selection.lead.row,o=this.findChunkIndex(this.chunks,i,n),s=this.chunks[o+e]||this.chunks[o],a=t.session.getScrollTop();if(s){var u=s[n?\"old\":\"new\"],l=Math.max(u.start.row,u.end.row-1);t.selection.setRange(new r(l,0,l,0))}t.renderer.scrollSelectionIntoView(t.selection.lead,t.selection.anchor,.5),t.renderer.animateScrolling(a)},e.prototype.firstDiffSelected=function(){return this.currentDiffIndex<=1},e.prototype.lastDiffSelected=function(){return this.currentDiffIndex>this.chunks.length-1},e.prototype.transformRange=function(e,t){return r.fromPoints(this.transformPosition(e.start,t),this.transformPosition(e.end,t))},e.prototype.transformPosition=function(e,t){var n=this.findChunkIndex(this.chunks,e.row,t),r=this.chunks[n],o=this.sessionB.doc.clonePos,s=o(e),a=i(t?[\"old\",\"new\"]:[\"new\",\"old\"],2),u=a[0],l=a[1],h=0,d=!1;if(r)if(r[u].end.row<=e.row)s.row-=r[u].end.row-r[l].end.row;else if(r.charChanges)for(var c=0;c<r.charChanges.length;c++){var f=r.charChanges[c],g=f[u],m=f[l];if(!(g.end.row<e.row)){if(g.start.row>e.row)break;if(g.isMultiLine()&&g.contains(e.row,e.column)){s.row=m.start.row+e.row-g.start.row;var p=m.end.row;0===m.end.column&&p--,s.row>p&&(s.row=p,s.column=(t?this.sessionB:this.sessionA).getLine(p).length,d=!0),s.row=Math.min(s.row,p)}else{if(s.row=m.start.row,g.start.column>e.column)break;d=!0,!g.isEmpty()&&g.contains(e.row,e.column)?(s.column=m.start.column,h=e.column-g.start.column,h=Math.min(h,m.end.column-m.start.column)):(s=o(m.end),h=e.column-g.end.column)}}}else r[u].start.row<=e.row&&(s.row+=r[l].start.row-r[u].start.row,s.row>=r[l].end.row&&(s.row=r[l].end.row-1,s.column=(t?this.sessionB:this.sessionA).getLine(s.row).length));if(!d){var v=i(t?[this.sessionA,this.sessionB]:[this.sessionB,this.sessionA],2),y=v[0],w=v[1];h-=this.$getDeltaIndent(y,w,e.row,s.row)}return s.column+=h,s},e.prototype.$getDeltaIndent=function(e,t,n,i){return this.$getIndent(e,n)-this.$getIndent(t,i)},e.prototype.$getIndent=function(e,t){return e.getLine(t).match(/^\\s*/)[0].length},e.prototype.printDiffs=function(){this.chunks.forEach(function(e){console.log(e.toString())})},e.prototype.findChunkIndex=function(e,t,n){for(var i=0;i<e.length;i++){var r=e[i],o=n?r.old:r.new;if(!(o.end.row<t)&&o.start.row>t)break}return this.currentDiffIndex=i,i-1},e.prototype.searchHighlight=function(e){if(!this.$syncSelections&&!this.inlineDiffEditor){var t=e.session,n=t===this.sessionA?this.sessionB:this.sessionA;n.highlight(t.$searchHighlight.regExp),n._signal(\"changeBackMarker\")}},e.prototype.initSelectionMarkers=function(){this.syncSelectionMarkerA=new E,this.syncSelectionMarkerB=new E,this.sessionA.addDynamicMarker(this.syncSelectionMarkerA,!0),this.sessionB.addDynamicMarker(this.syncSelectionMarkerB,!0)},e.prototype.clearSelectionMarkers=function(){this.sessionA.removeMarker(this.syncSelectionMarkerA.id),this.sessionB.removeMarker(this.syncSelectionMarkerB.id)},e}();s.defineOptions(v.prototype,\"DiffView\",{showOtherLineNumbers:{set:function(e){this.gutterLayer&&(this.gutterLayer.$renderer=e?null:y,this.editorA.renderer.updateFull())},initialValue:!0},folding:{set:function(e){if(this.editorA.setOption(\"showFoldWidgets\",e),this.editorB.setOption(\"showFoldWidgets\",e),!e){var t=[],n=[];this.chunks&&this.chunks.forEach(function(e){t.push(e.old.start,e.old.end),n.push(e.new.start,e.new.end)}),this.sessionA.unfold(t),this.sessionB.unfold(n)}}},syncSelections:{set:function(e){}},ignoreTrimWhitespace:{set:function(e){this.scheduleOnInput()}},wrap:{set:function(e){this.sessionA.setOption(\"wrap\",e),this.sessionB.setOption(\"wrap\",e)}},maxDiffs:{value:5e3},theme:{set:function(e){this.setTheme(e)},get:function(){return this.editorA.getTheme()}}});var y={getText:function(e){return\"\"},getWidth:function(){return 0}};t.BaseDiffView=v;var w=function e(t,n,i){this.old=t,this.new=n,this.charChanges=i&&i.map(function(t){return new e(new r(t.originalStartLineNumber,t.originalStartColumn,t.originalEndLineNumber,t.originalEndColumn),new r(t.modifiedStartLineNumber,t.modifiedStartColumn,t.modifiedEndLineNumber,t.modifiedEndColumn))})},b=function(){function e(e,t){this.id,this.diffView=e,this.type=t}return e.prototype.update=function(e,t,n,i){var o,s,a,u=this.diffView;-1===this.type?(o=\"old\",s=\"delete\",a=\"insert\"):(o=\"new\",s=\"insert\",a=\"delete\");var l=u.$ignoreTrimWhitespace,h=u.chunks;if(n.lineWidgets&&!u.inlineDiffEditor)for(var d=i.firstRow;d<=i.lastRow;d++){var c=n.lineWidgets[d];if(c&&!c.hidden){var f=n.documentToScreenRow(d,0);if(c.rowsAbove>0){var g=new r(f-c.rowsAbove,0,f-1,Number.MAX_VALUE);t.drawFullLineMarker(e,g,\"ace_diff aligned_diff\",i)}var m=f+c.rowCount-(c.rowsAbove||0);g=new r(f+1,0,m,Number.MAX_VALUE);t.drawFullLineMarker(e,g,\"ace_diff aligned_diff\",i)}}h.forEach(function(u){var h=u[o].start.row,d=u[o].end.row;if(!(d<i.firstRow||h>i.lastRow)){var c=new r(h,0,d-1,1<<30);if(h!==d&&(c=c.toScreenRange(n),t.drawFullLineMarker(e,c,\"ace_diff \"+s,i)),u.charChanges)for(var f=0;f<u.charChanges.length;f++){var g=u.charChanges[f][o];if(0==g.end.column&&g.end.row>g.start.row&&g.end.row==u[o].end.row&&(g.end.row--,g.end.column=Number.MAX_VALUE),l)for(var m=g.start.row;m<=g.end.row;m++){var p=void 0,v=void 0,y=n.getLine(m).match(/^\\s*/)[0].length,w=n.getLine(m).length;p=m===g.start.row?g.start.column:y,v=m===g.end.row?g.end.column:w;var b=new r(m,p,m,v),E=b.toScreenRange(n);if(y!==p||w!==v){var L=\"inline \"+s;b.isEmpty()&&0!==p&&(L=\"inline \"+a+\" empty\"),t.drawSingleLineMarker(e,E,\"ace_diff \"+L,i)}}else{var x=new r(g.start.row,g.start.column,g.end.row,g.end.column);E=x.toScreenRange(n),L=\"inline \"+s;x.isEmpty()&&0!==g.start.column&&(L=\"inline empty \"+a),E.isMultiLine()?t.drawTextMarker(e,E,\"ace_diff \"+L,i):t.drawSingleLineMarker(e,E,\"ace_diff \"+L,i)}}}})},e}(),E=function(){function e(){this.id,this.type=\"fullLine\",this.clazz=\"ace_diff-active-line\"}return e.prototype.update=function(e,t,n,i){},e.prototype.setRange=function(e){var t=e.clone();t.end.column++,this.range=t},e}();t.DiffChunk=w,t.DiffHighlight=b}),ace.define(\"ace/ext/diff/inline_diff_view\",[\"require\",\"exports\",\"module\",\"ace/ext/diff/base_diff_view\",\"ace/virtual_renderer\",\"ace/config\"],function(e,t,n){\"use strict\";var i=this&&this.__extends||function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if(\"function\"!==typeof n&&null!==n)throw new TypeError(\"Class extends value \"+String(n)+\" is not a constructor or null\");function i(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),r=e(\"./base_diff_view\").BaseDiffView,o=e(\"../../virtual_renderer\").VirtualRenderer,s=e(\"../../config\"),a=function(e){function t(t,n){var i=this;return(t=t||{}).inline=t.inline||\"a\",(i=e.call(this,!0,n)||this).init(t),i}return i(t,e),t.prototype.init=function(e){this.onSelect=this.onSelect.bind(this),this.onAfterRender=this.onAfterRender.bind(this),this.$setupModels(e),this.onChangeTheme(),s.resetOptions(this),s._signal(\"diffView\",this);var t=this.activeEditor.renderer.$padding;this.addGutterDecorators(),this.otherEditor.renderer.setPadding(t),this.textLayer=this.otherEditor.renderer.$textLayer,this.markerLayer=this.otherEditor.renderer.$markerBack,this.gutterLayer=this.otherEditor.renderer.$gutterLayer,this.cursorLayer=this.otherEditor.renderer.$cursorLayer,this.otherEditor.renderer.$updateCachedSize=function(){};var n=this.activeEditor.renderer.$textLayer.element;n.parentNode.insertBefore(this.textLayer.element,n);var i=this.activeEditor.renderer.$markerBack.element;i.parentNode.insertBefore(this.markerLayer.element,i.nextSibling);var r=this.activeEditor.renderer.$gutterLayer.element;r.parentNode.insertBefore(this.gutterLayer.element,r.nextSibling),r.style.position=\"absolute\",this.gutterLayer.element.style.position=\"absolute\",this.gutterLayer.element.style.width=\"100%\",this.gutterLayer.element.classList.add(\"ace_mini-diff_gutter_other\"),this.gutterLayer.$updateGutterWidth=function(){},this.initMouse(),this.initTextInput(),this.initTextLayer(),this.initRenderer(),this.$attachEventHandlers(),this.selectEditor(this.activeEditor)},t.prototype.initRenderer=function(e){var t=this;e?delete this.activeEditor.renderer.$getLongestLine:this.editorA.renderer.$getLongestLine=this.editorB.renderer.$getLongestLine=function(){var e=o.prototype.$getLongestLine;return Math.max(e.call(t.editorA.renderer),e.call(t.editorB.renderer))}},t.prototype.initTextLayer=function(){var e=this.textLayer.$renderLine,t=this;this.otherEditor.renderer.$textLayer.$renderLine=function(i,r,o){(function(e,t){var i=0,r=e.length-1,o=-1;for(;i<r;){var s=Math.floor((i+r)/2),a=e[s][n].start.row;if(a<t)o=s,i=s+1;else{if(!(a>t)){o=s;break}r=s-1}}e[o+1]&&e[o+1][n].start.row<=t&&o++;var u=e[o]&&e[o][n];if(u&&u.end.row>t)return!0;return!1})(t.chunks,r)&&e.call(this,i,r,o)};var n=this.showSideA?\"new\":\"old\"},t.prototype.initTextInput=function(e){e?(this.otherEditor.textInput=this.othertextInput,this.otherEditor.container=this.otherEditorContainer):(this.othertextInput=this.otherEditor.textInput,this.otherEditor.textInput=this.activeEditor.textInput,this.otherEditorContainer=this.otherEditor.container,this.otherEditor.container=this.activeEditor.container)},t.prototype.selectEditor=function(e){e==this.activeEditor?(this.otherEditor.selection.clearSelection(),this.activeEditor.textInput.setHost(this.activeEditor),this.activeEditor.setStyle(\"ace_diff_other\",!1),this.cursorLayer.element.remove(),this.activeEditor.renderer.$cursorLayer.element.style.display=\"block\",this.showSideA&&(this.sessionA.removeMarker(this.syncSelectionMarkerA.id),this.sessionA.addDynamicMarker(this.syncSelectionMarkerA,!0)),this.markerLayer.element.classList.add(\"ace_hidden_marker-layer\"),this.activeEditor.renderer.$markerBack.element.classList.remove(\"ace_hidden_marker-layer\"),this.removeBracketHighlight(this.otherEditor)):(this.activeEditor.selection.clearSelection(),this.activeEditor.textInput.setHost(this.otherEditor),this.activeEditor.setStyle(\"ace_diff_other\"),this.activeEditor.renderer.$cursorLayer.element.parentNode.appendChild(this.cursorLayer.element),this.activeEditor.renderer.$cursorLayer.element.style.display=\"none\",this.activeEditor.$isFocused&&this.otherEditor.onFocus(),this.showSideA&&this.sessionA.removeMarker(this.syncSelectionMarkerA.id),this.markerLayer.element.classList.remove(\"ace_hidden_marker-layer\"),this.activeEditor.renderer.$markerBack.element.classList.add(\"ace_hidden_marker-layer\"),this.removeBracketHighlight(this.activeEditor))},t.prototype.removeBracketHighlight=function(e){var t=e.session;t.$bracketHighlight&&(t.$bracketHighlight.markerIds.forEach(function(e){t.removeMarker(e)}),t.$bracketHighlight=null)},t.prototype.initMouse=function(){var e=this;this.otherEditor.renderer.$loop=this.activeEditor.renderer.$loop,this.otherEditor.renderer.scroller={getBoundingClientRect:function(){return e.activeEditor.renderer.scroller.getBoundingClientRect()},style:this.activeEditor.renderer.scroller.style};var t=function(t){if(t.domEvent){var n=t.editor.renderer.pixelToScreenCoordinates(t.clientX,t.clientY),i=e.activeEditor.session,r=e.otherEditor.session,o=i.screenToDocumentPosition(n.row,n.column,n.offsetX),s=r.screenToDocumentPosition(n.row,n.column,n.offsetX),a=i.documentToScreenPosition(o),u=r.documentToScreenPosition(s);t.editor==e.activeEditor&&(u.row==n.row&&a.row!=n.row?(\"mousedown\"==t.type&&e.selectEditor(e.otherEditor),t.propagationStopped=!0,t.defaultPrevented=!0,e.otherEditor.$mouseHandler.onMouseEvent(t.type,t.domEvent)):\"mousedown\"==t.type&&e.selectEditor(e.activeEditor))}},n=[\"mousedown\",\"click\",\"mouseup\",\"dblclick\",\"tripleclick\",\"quadclick\"];n.forEach(function(n){e.activeEditor.on(n,t,!0),e.activeEditor.on(\"gutter\"+n,t,!0)});var i=function(t){e.activeEditor.onFocus(t)},r=function(t){e.activeEditor.onBlur(t)};this.otherEditor.on(\"focus\",i),this.otherEditor.on(\"blur\",r),this.onMouseDetach=function(){n.forEach(function(n){e.activeEditor.off(n,t,!0),e.activeEditor.off(\"gutter\"+n,t,!0)}),e.otherEditor.off(\"focus\",i),e.otherEditor.off(\"blur\",r)}},t.prototype.align=function(){var e=this;this.$initWidgets(e.editorA),this.$initWidgets(e.editorB),e.chunks.forEach(function(t){var n=e.$screenRow(t.old.end,e.sessionA)-e.$screenRow(t.old.start,e.sessionA),i=e.$screenRow(t.new.end,e.sessionB)-e.$screenRow(t.new.start,e.sessionB);e.$addWidget(e.sessionA,{rowCount:i,rowsAbove:0===t.old.end.row?i:0,row:0===t.old.end.row?0:t.old.end.row-1}),e.$addWidget(e.sessionB,{rowCount:n,rowsAbove:n,row:t.new.start.row})}),e.sessionA._emit(\"changeFold\",{data:{start:{row:0}}}),e.sessionB._emit(\"changeFold\",{data:{start:{row:0}}})},t.prototype.onChangeWrapLimit=function(){this.sessionB.adjustWrapLimit(this.sessionA.$wrapLimit),this.scheduleRealign()},t.prototype.$attachSessionsEventHandlers=function(){this.$attachSessionEventHandlers(this.editorA,this.markerA),this.$attachSessionEventHandlers(this.editorB,this.markerB),this.sessionA.on(\"changeWrapLimit\",this.onChangeWrapLimit),this.sessionA.on(\"changeWrapMode\",this.onChangeWrapLimit)},t.prototype.$attachSessionEventHandlers=function(e,t){e.session.on(\"changeFold\",this.onChangeFold),e.session.addDynamicMarker(t),e.selection.on(\"changeCursor\",this.onSelect),e.selection.on(\"changeSelection\",this.onSelect)},t.prototype.$detachSessionsEventHandlers=function(){this.$detachSessionHandlers(this.editorA,this.markerA),this.$detachSessionHandlers(this.editorB,this.markerB),this.otherSession.bgTokenizer.lines.fill(void 0),this.sessionA.off(\"changeWrapLimit\",this.onChangeWrapLimit),this.sessionA.off(\"changeWrapMode\",this.onChangeWrapLimit)},t.prototype.$detachSessionHandlers=function(e,t){e.session.removeMarker(t.id),e.selection.off(\"changeCursor\",this.onSelect),e.selection.off(\"changeSelection\",this.onSelect),e.session.off(\"changeFold\",this.onChangeFold)},t.prototype.$attachEventHandlers=function(){this.activeEditor.on(\"input\",this.onInput),this.activeEditor.renderer.on(\"afterRender\",this.onAfterRender),this.otherSession.on(\"change\",this.onInput)},t.prototype.$detachEventHandlers=function(){this.$detachSessionsEventHandlers(),this.activeEditor.off(\"input\",this.onInput),this.activeEditor.renderer.off(\"afterRender\",this.onAfterRender),this.otherSession.off(\"change\",this.onInput),this.textLayer.element.textContent=\"\",this.textLayer.element.remove(),this.gutterLayer.element.textContent=\"\",this.gutterLayer.element.remove(),this.markerLayer.element.textContent=\"\",this.markerLayer.element.remove(),this.onMouseDetach(),this.selectEditor(this.activeEditor),this.clearSelectionMarkers(),this.otherEditor.setSession(null),this.otherEditor.renderer.$loop=null,this.initTextInput(!0),this.initRenderer(!0),this.otherEditor.destroy()},t.prototype.onAfterRender=function(e,t){var n=t.layerConfig,i=this.otherSession,r=this.otherEditor.renderer;i.$scrollTop=t.scrollTop,i.$scrollLeft=t.scrollLeft,[\"characterWidth\",\"lineHeight\",\"scrollTop\",\"scrollLeft\",\"scrollMargin\",\"$padding\",\"$size\",\"layerConfig\",\"$horizScroll\",\"$vScroll\"].forEach(function(e){r[e]=t[e]}),r.$computeLayerConfig();var o=r.layerConfig;this.gutterLayer.update(o),o.firstRowScreen=n.firstRowScreen,r.$cursorLayer.config=o,r.$cursorLayer.update(o),(e&r.CHANGE_LINES||e&r.CHANGE_FULL||e&r.CHANGE_SCROLL||e&r.CHANGE_TEXT)&&this.textLayer.update(o),this.markerLayer.setMarkers(this.otherSession.getMarkers()),this.markerLayer.update(o)},t.prototype.detach=function(){e.prototype.detach.call(this),this.otherEditor&&this.otherEditor.destroy()},t}(r);t.InlineDiffView=a}),ace.define(\"ace/ext/diff/split_diff_view\",[\"require\",\"exports\",\"module\",\"ace/ext/diff/base_diff_view\",\"ace/config\"],function(e,t,n){\"use strict\";var i=this&&this.__extends||function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if(\"function\"!==typeof n&&null!==n)throw new TypeError(\"Class extends value \"+String(n)+\" is not a constructor or null\");function i(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),r=e(\"./base_diff_view\").BaseDiffView,o=e(\"../../config\"),s=function(e){function t(t){var n=this;return t=t||{},(n=e.call(this)||this).init(t),n}return i(t,e),t.prototype.init=function(e){this.onChangeTheme=this.onChangeTheme.bind(this),this.onMouseWheel=this.onMouseWheel.bind(this),this.onScroll=this.onScroll.bind(this),this.$setupModels(e),this.addGutterDecorators(),this.onChangeTheme(),o.resetOptions(this),o._signal(\"diffView\",this),this.$attachEventHandlers()},t.prototype.onChangeWrapLimit=function(){this.scheduleRealign()},t.prototype.align=function(){var e=this;this.$initWidgets(e.editorA),this.$initWidgets(e.editorB),e.chunks.forEach(function(t){var n,i;(n=e.$screenRow(t.old.start,e.sessionA))<(i=e.$screenRow(t.new.start,e.sessionB))?e.$addWidget(e.sessionA,{rowCount:i-n,rowsAbove:0===t.old.start.row?i-n:0,row:0===t.old.start.row?0:t.old.start.row-1}):n>i&&e.$addWidget(e.sessionB,{rowCount:n-i,rowsAbove:0===t.new.start.row?n-i:0,row:0===t.new.start.row?0:t.new.start.row-1}),(n=e.$screenRow(t.old.end,e.sessionA))<(i=e.$screenRow(t.new.end,e.sessionB))?e.$addWidget(e.sessionA,{rowCount:i-n,rowsAbove:0===t.old.end.row?i-n:0,row:0===t.old.end.row?0:t.old.end.row-1}):n>i&&e.$addWidget(e.sessionB,{rowCount:n-i,rowsAbove:0===t.new.end.row?n-i:0,row:0===t.new.end.row?0:t.new.end.row-1})}),e.sessionA._emit(\"changeFold\",{data:{start:{row:0}}}),e.sessionB._emit(\"changeFold\",{data:{start:{row:0}}})},t.prototype.onScroll=function(e,t){this.syncScroll(this.sessionA===t?this.editorA.renderer:this.editorB.renderer)},t.prototype.syncScroll=function(e){if(0!=this.$syncScroll){var t=this.editorA.renderer,n=this.editorB.renderer,i=e==t;if(!t.$scrollAnimation||!n.$scrollAnimation){var r=Date.now();if(!(this.scrollSetBy!=e&&r-this.scrollSetAt<500)){var o=i?t:n;if(this.scrollSetBy!=e){if(i&&this.scrollA==o.session.getScrollTop())return;if(!i&&this.scrollB==o.session.getScrollTop())return}var s=i?n:t,a=o.session.getScrollTop();this.$syncScroll=!1,i?(this.scrollA=o.session.getScrollTop(),this.scrollB=a):(this.scrollA=a,this.scrollB=o.session.getScrollTop()),this.scrollSetBy=e,s.session.setScrollTop(a),this.$syncScroll=!0,this.scrollSetAt=r}}}},t.prototype.onMouseWheel=function(e){if(!e.getAccelKey()){e.getShiftKey()&&e.wheelY&&!e.wheelX&&(e.wheelX=e.wheelY,e.wheelY=0);var t=e.editor;if(!t.renderer.isScrollableBy(e.wheelX*e.speed,e.wheelY*e.speed)){var n=t==this.editorA?this.editorB:this.editorA;return n.renderer.isScrollableBy(e.wheelX*e.speed,e.wheelY*e.speed)&&n.renderer.scrollBy(e.wheelX*e.speed,e.wheelY*e.speed),e.stop()}}},t.prototype.$attachSessionsEventHandlers=function(){this.$attachSessionEventHandlers(this.editorA,this.markerA),this.$attachSessionEventHandlers(this.editorB,this.markerB)},t.prototype.$attachSessionEventHandlers=function(e,t){e.session.on(\"changeScrollTop\",this.onScroll),e.session.on(\"changeFold\",this.onChangeFold),e.session.addDynamicMarker(t),e.selection.on(\"changeCursor\",this.onSelect),e.selection.on(\"changeSelection\",this.onSelect),e.session.on(\"changeWrapLimit\",this.onChangeWrapLimit),e.session.on(\"changeWrapMode\",this.onChangeWrapLimit)},t.prototype.$detachSessionsEventHandlers=function(){this.$detachSessionHandlers(this.editorA,this.markerA),this.$detachSessionHandlers(this.editorB,this.markerB)},t.prototype.$detachSessionHandlers=function(e,t){e.session.off(\"changeScrollTop\",this.onScroll),e.session.off(\"changeFold\",this.onChangeFold),e.session.removeMarker(t.id),e.selection.off(\"changeCursor\",this.onSelect),e.selection.off(\"changeSelection\",this.onSelect),e.session.off(\"changeWrapLimit\",this.onChangeWrapLimit),e.session.off(\"changeWrapMode\",this.onChangeWrapLimit)},t.prototype.$attachEventHandlers=function(){this.editorA.renderer.on(\"themeChange\",this.onChangeTheme),this.editorB.renderer.on(\"themeChange\",this.onChangeTheme),this.editorA.on(\"mousewheel\",this.onMouseWheel),this.editorB.on(\"mousewheel\",this.onMouseWheel),this.editorA.on(\"input\",this.onInput),this.editorB.on(\"input\",this.onInput)},t.prototype.$detachEventHandlers=function(){this.$detachSessionsEventHandlers(),this.clearSelectionMarkers(),this.editorA.renderer.off(\"themeChange\",this.onChangeTheme),this.editorB.renderer.off(\"themeChange\",this.onChangeTheme),this.$detachEditorEventHandlers(this.editorA),this.$detachEditorEventHandlers(this.editorB)},t.prototype.$detachEditorEventHandlers=function(e){e.off(\"mousewheel\",this.onMouseWheel),e.off(\"input\",this.onInput)},t}(r);t.SplitDiffView=s}),ace.define(\"ace/ext/diff/providers/default\",[\"require\",\"exports\",\"module\",\"ace/range\",\"ace/ext/diff/base_diff_view\"],function(e,t,n){\"use strict\";var i,r,o,s,a,u,l=this&&this.__extends||function(){var e=function(t,n){return e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},e(t,n)};return function(t,n){if(\"function\"!==typeof n&&null!==n)throw new TypeError(\"Class extends value \"+String(n)+\" is not a constructor or null\");function i(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),h=this&&this.__generator||function(e,t){var n,i,r,o={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]},s=Object.create((\"function\"===typeof Iterator?Iterator:Object).prototype);return s.next=a(0),s.throw=a(1),s.return=a(2),\"function\"===typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function a(a){return function(u){return function(a){if(n)throw new TypeError(\"Generator is already executing.\");for(;s&&(s=0,a[0]&&(o=0)),o;)try{if(n=1,i&&(r=2&a[0]?i.return:a[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,a[1])).done)return r;switch(i=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return o.label++,{value:a[1],done:!1};case 5:o.label++,i=a[1],a=[0];continue;case 7:a=o.ops.pop(),o.trys.pop();continue;default:if(!(r=(r=o.trys).length>0&&r[r.length-1])&&(6===a[0]||2===a[0])){o=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){o.label=a[1];break}if(6===a[0]&&o.label<r[1]){o.label=r[1],r=a;break}if(r&&o.label<r[2]){o.label=r[2],o.ops.push(a);break}r[2]&&o.ops.pop(),o.trys.pop();continue}a=t.call(e,o)}catch(u){a=[6,u],i=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,u])}}},d=this&&this.__values||function(e){var t=\"function\"===typeof Symbol&&Symbol.iterator,n=t&&e[t],i=0;if(n)return n.call(e);if(e&&\"number\"===typeof e.length)return{next:function(){return e&&i>=e.length&&(e=void 0),{value:e&&e[i++],done:!e}}};throw new TypeError(t?\"Object is not iterable.\":\"Symbol.iterator is not defined.\")};function c(e,t){return function(n,i){return t(e(n),e(i))}}var f=function(e,t){return e-t};var g=function(e){function t(n){var i=e.call(this,n||\"An unexpected bug occurred.\")||this;return Object.setPrototypeOf(i,t.prototype),i}return l(t,e),t}(Error);function m(e){e()}var p=function(){function e(e,t){if(this.start=e,this.endExclusive=t,e>t)throw new g(\"Invalid range: \".concat(this.toString()))}return e.fromTo=function(t,n){return new e(t,n)},e.addRange=function(t,n){for(var i=0;i<n.length&&n[i].endExclusive<t.start;)i++;for(var r=i;r<n.length&&n[r].start<=t.endExclusive;)r++;if(i===r)n.splice(i,0,t);else{var o=Math.min(t.start,n[i].start),s=Math.max(t.endExclusive,n[r-1].endExclusive);n.splice(i,r-i,new e(o,s))}},e.tryCreate=function(t,n){if(!(t>n))return new e(t,n)},e.ofLength=function(t){return new e(0,t)},e.ofStartAndLength=function(t,n){return new e(t,t+n)},e.emptyAt=function(t){return new e(t,t)},Object.defineProperty(e.prototype,\"isEmpty\",{get:function(){return this.start===this.endExclusive},enumerable:!1,configurable:!0}),e.prototype.delta=function(t){return new e(this.start+t,this.endExclusive+t)},e.prototype.deltaStart=function(t){return new e(this.start+t,this.endExclusive)},e.prototype.deltaEnd=function(t){return new e(this.start,this.endExclusive+t)},Object.defineProperty(e.prototype,\"length\",{get:function(){return this.endExclusive-this.start},enumerable:!1,configurable:!0}),e.prototype.toString=function(){return\"[\".concat(this.start,\", \").concat(this.endExclusive,\")\")},e.prototype.equals=function(e){return this.start===e.start&&this.endExclusive===e.endExclusive},e.prototype.containsRange=function(e){return this.start<=e.start&&e.endExclusive<=this.endExclusive},e.prototype.contains=function(e){return this.start<=e&&e<this.endExclusive},e.prototype.join=function(t){return new e(Math.min(this.start,t.start),Math.max(this.endExclusive,t.endExclusive))},e.prototype.intersect=function(t){var n=Math.max(this.start,t.start),i=Math.min(this.endExclusive,t.endExclusive);if(n<=i)return new e(n,i)},e.prototype.intersectionLength=function(e){var t=Math.max(this.start,e.start),n=Math.min(this.endExclusive,e.endExclusive);return Math.max(0,n-t)},e.prototype.intersects=function(e){return Math.max(this.start,e.start)<Math.min(this.endExclusive,e.endExclusive)},e.prototype.intersectsOrTouches=function(e){return Math.max(this.start,e.start)<=Math.min(this.endExclusive,e.endExclusive)},e.prototype.isBefore=function(e){return this.endExclusive<=e.start},e.prototype.isAfter=function(e){return this.start>=e.endExclusive},e.prototype.slice=function(e){return e.slice(this.start,this.endExclusive)},e.prototype.substring=function(e){return e.substring(this.start,this.endExclusive)},e.prototype.clip=function(e){if(this.isEmpty)throw new g(\"Invalid clipping range: \".concat(this.toString()));return Math.max(this.start,Math.min(this.endExclusive-1,e))},e.prototype.clipCyclic=function(e){if(this.isEmpty)throw new g(\"Invalid clipping range: \".concat(this.toString()));return e<this.start?this.endExclusive-(this.start-e)%this.length:e>=this.endExclusive?this.start+(e-this.start)%this.length:e},e.prototype.map=function(e){for(var t=[],n=this.start;n<this.endExclusive;n++)t.push(e(n));return t},e.prototype.forEach=function(e){for(var t=this.start;t<this.endExclusive;t++)e(t)},e}(),v=function(){function e(e,t){this.lineNumber=e,this.column=t}return e.prototype.equals=function(t){return e.equals(this,t)},e.equals=function(e,t){return!e&&!t||!!e&&!!t&&e.lineNumber===t.lineNumber&&e.column===t.column},e.prototype.isBefore=function(t){return e.isBefore(this,t)},e.isBefore=function(e,t){return e.lineNumber<t.lineNumber||!(t.lineNumber<e.lineNumber)&&e.column<t.column},e.prototype.isBeforeOrEqual=function(t){return e.isBeforeOrEqual(this,t)},e.isBeforeOrEqual=function(e,t){return e.lineNumber<t.lineNumber||!(t.lineNumber<e.lineNumber)&&e.column<=t.column},e}(),y=function(){function e(e,t,n,i){e>n||e===n&&t>i?(this.startLineNumber=n,this.startColumn=i,this.endLineNumber=e,this.endColumn=t):(this.startLineNumber=e,this.startColumn=t,this.endLineNumber=n,this.endColumn=i)}return e.prototype.isEmpty=function(){return e.isEmpty(this)},e.isEmpty=function(e){return e.startLineNumber===e.endLineNumber&&e.startColumn===e.endColumn},e.prototype.containsPosition=function(t){return e.containsPosition(this,t)},e.containsPosition=function(e,t){return!(t.lineNumber<e.startLineNumber||t.lineNumber>e.endLineNumber)&&(!(t.lineNumber===e.startLineNumber&&t.column<e.startColumn)&&!(t.lineNumber===e.endLineNumber&&t.column>e.endColumn))},e.prototype.containsRange=function(t){return e.containsRange(this,t)},e.containsRange=function(e,t){return!(t.startLineNumber<e.startLineNumber||t.endLineNumber<e.startLineNumber)&&(!(t.startLineNumber>e.endLineNumber||t.endLineNumber>e.endLineNumber)&&(!(t.startLineNumber===e.startLineNumber&&t.startColumn<e.startColumn)&&!(t.endLineNumber===e.endLineNumber&&t.endColumn>e.endColumn)))},e.prototype.strictContainsRange=function(t){return e.strictContainsRange(this,t)},e.strictContainsRange=function(e,t){return!(t.startLineNumber<e.startLineNumber||t.endLineNumber<e.startLineNumber)&&(!(t.startLineNumber>e.endLineNumber||t.endLineNumber>e.endLineNumber)&&(!(t.startLineNumber===e.startLineNumber&&t.startColumn<=e.startColumn)&&!(t.endLineNumber===e.endLineNumber&&t.endColumn>=e.endColumn)))},e.prototype.plusRange=function(t){return e.plusRange(this,t)},e.plusRange=function(t,n){var i,r,o,s;return n.startLineNumber<t.startLineNumber?(i=n.startLineNumber,r=n.startColumn):n.startLineNumber===t.startLineNumber?(i=n.startLineNumber,r=Math.min(n.startColumn,t.startColumn)):(i=t.startLineNumber,r=t.startColumn),n.endLineNumber>t.endLineNumber?(o=n.endLineNumber,s=n.endColumn):n.endLineNumber===t.endLineNumber?(o=n.endLineNumber,s=Math.max(n.endColumn,t.endColumn)):(o=t.endLineNumber,s=t.endColumn),new e(i,r,o,s)},e.prototype.intersectRanges=function(t){return e.intersectRanges(this,t)},e.intersectRanges=function(t,n){var i=t.startLineNumber,r=t.startColumn,o=t.endLineNumber,s=t.endColumn,a=n.startLineNumber,u=n.startColumn,l=n.endLineNumber,h=n.endColumn;return i<a?(i=a,r=u):i===a&&(r=Math.max(r,u)),o>l?(o=l,s=h):o===l&&(s=Math.min(s,h)),i>o||i===o&&r>s?null:new e(i,r,o,s)},e.prototype.equalsRange=function(t){return e.equalsRange(this,t)},e.equalsRange=function(e,t){return!e&&!t||!!e&&!!t&&e.startLineNumber===t.startLineNumber&&e.startColumn===t.startColumn&&e.endLineNumber===t.endLineNumber&&e.endColumn===t.endColumn},e.prototype.getEndPosition=function(){return e.getEndPosition(this)},e.getEndPosition=function(e){return new v(e.endLineNumber,e.endColumn)},e.prototype.getStartPosition=function(){return e.getStartPosition(this)},e.getStartPosition=function(e){return new v(e.startLineNumber,e.startColumn)},e.prototype.collapseToStart=function(){return e.collapseToStart(this)},e.collapseToStart=function(t){return new e(t.startLineNumber,t.startColumn,t.startLineNumber,t.startColumn)},e.prototype.collapseToEnd=function(){return e.collapseToEnd(this)},e.collapseToEnd=function(t){return new e(t.endLineNumber,t.endColumn,t.endLineNumber,t.endColumn)},e.fromPositions=function(t,n){return void 0===n&&(n=t),new e(t.lineNumber,t.column,n.lineNumber,n.column)},e}();function w(e,t){var n=b(e,t);return-1===n?void 0:e[n]}function b(e,t,n,i){void 0===n&&(n=0),void 0===i&&(i=e.length);for(var r=n,o=i;r<o;){var s=Math.floor((r+o)/2);t(e[s])?r=s+1:o=s}return r-1}function E(e,t,n,i){void 0===n&&(n=0),void 0===i&&(i=e.length);for(var r=n,o=i;r<o;){var s=Math.floor((r+o)/2);t(e[s])?o=s:r=s+1}return r}var L=function(){function e(e){this._array=e,this._findLastMonotonousLastIdx=0}return e.prototype.findLastMonotonous=function(e){var t,n;if(r.assertInvariants){if(this._prevFindLastPredicate)try{for(var i=d(this._array),o=i.next();!o.done;o=i.next()){var s=o.value;if(this._prevFindLastPredicate(s)&&!e(s))throw new Error(\"MonotonousArray: current predicate must be weaker than (or equal to) the previous predicate.\")}}catch(u){t={error:u}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(t)throw t.error}}this._prevFindLastPredicate=e}var a=b(this._array,e,this._findLastMonotonousLastIdx);return this._findLastMonotonousLastIdx=a+1,-1===a?void 0:this._array[a]},e}();(r=L).assertInvariants=!1;var x=function(){function e(e,t){if(e>t)throw new g(\"startLineNumber \".concat(e,\" cannot be after endLineNumberExclusive \").concat(t));this.startLineNumber=e,this.endLineNumberExclusive=t}return e.fromRangeInclusive=function(t){return new e(t.startLineNumber,t.endLineNumber+1)},e.join=function(t){if(0===t.length)throw new g(\"lineRanges cannot be empty\");for(var n=t[0].startLineNumber,i=t[0].endLineNumberExclusive,r=1;r<t.length;r++)n=Math.min(n,t[r].startLineNumber),i=Math.max(i,t[r].endLineNumberExclusive);return new e(n,i)},e.ofLength=function(t,n){return new e(t,t+n)},Object.defineProperty(e.prototype,\"isEmpty\",{get:function(){return this.startLineNumber===this.endLineNumberExclusive},enumerable:!1,configurable:!0}),e.prototype.delta=function(t){return new e(this.startLineNumber+t,this.endLineNumberExclusive+t)},Object.defineProperty(e.prototype,\"length\",{get:function(){return this.endLineNumberExclusive-this.startLineNumber},enumerable:!1,configurable:!0}),e.prototype.join=function(t){return new e(Math.min(this.startLineNumber,t.startLineNumber),Math.max(this.endLineNumberExclusive,t.endLineNumberExclusive))},e.prototype.intersect=function(t){var n=Math.max(this.startLineNumber,t.startLineNumber),i=Math.min(this.endLineNumberExclusive,t.endLineNumberExclusive);if(n<=i)return new e(n,i)},e.prototype.overlapOrTouch=function(e){return this.startLineNumber<=e.endLineNumberExclusive&&e.startLineNumber<=this.endLineNumberExclusive},e.prototype.toInclusiveRange=function(){return this.isEmpty?null:new y(this.startLineNumber,1,this.endLineNumberExclusive-1,Number.MAX_SAFE_INTEGER)},e.prototype.toOffsetRange=function(){return new p(this.startLineNumber-1,this.endLineNumberExclusive-1)},e}(),R=function(){function e(e){void 0===e&&(e=[]),this._normalizedRanges=e}return Object.defineProperty(e.prototype,\"ranges\",{get:function(){return this._normalizedRanges},enumerable:!1,configurable:!0}),e.prototype.addRange=function(e){if(0!==e.length){var t=E(this._normalizedRanges,function(t){return t.endLineNumberExclusive>=e.startLineNumber}),n=b(this._normalizedRanges,function(t){return t.startLineNumber<=e.endLineNumberExclusive})+1;if(t===n)this._normalizedRanges.splice(t,0,e);else if(t===n-1){var i=this._normalizedRanges[t];this._normalizedRanges[t]=i.join(e)}else{i=this._normalizedRanges[t].join(this._normalizedRanges[n-1]).join(e);this._normalizedRanges.splice(t,n-t,i)}}},e.prototype.contains=function(e){var t=w(this._normalizedRanges,function(t){return t.startLineNumber<=e});return!!t&&t.endLineNumberExclusive>e},e.prototype.subtractFrom=function(t){var n=E(this._normalizedRanges,function(e){return e.endLineNumberExclusive>=t.startLineNumber}),i=b(this._normalizedRanges,function(e){return e.startLineNumber<=t.endLineNumberExclusive})+1;if(n===i)return new e([t]);for(var r=[],o=t.startLineNumber,s=n;s<i;s++){var a=this._normalizedRanges[s];a.startLineNumber>o&&r.push(new x(o,a.startLineNumber)),o=a.endLineNumberExclusive}return o<t.endLineNumberExclusive&&r.push(new x(o,t.endLineNumberExclusive)),new e(r)},e.prototype.getIntersection=function(t){for(var n=[],i=0,r=0;i<this._normalizedRanges.length&&r<t._normalizedRanges.length;){var o=this._normalizedRanges[i],s=t._normalizedRanges[r],a=o.intersect(s);a&&!a.isEmpty&&n.push(a),o.endLineNumberExclusive<s.endLineNumberExclusive?i++:r++}return new e(n)},e.prototype.getWithDelta=function(t){return new e(this._normalizedRanges.map(function(e){return e.delta(t)}))},e}(),N=function(){function e(e,t){this.lineCount=e,this.columnCount=t}return e.prototype.toLineRange=function(){return x.ofLength(1,this.lineCount)},e.prototype.addToPosition=function(e){return 0===this.lineCount?new v(e.lineNumber,e.column+this.columnCount):new v(e.lineNumber+this.lineCount,this.columnCount+1)},e}();(o=N).zero=new o(0,0);var S=function(e){function t(t){return e.call(this,function(e){return t[e-1]},t.length)||this}return l(t,e),t}(function(){function e(e,t){!function(e,t){if(void 0===t&&(t=\"unexpected state\"),!e)throw new g(\"Assertion Failed: \".concat(t))}(t>=1),this._getLineContent=e,this._lineCount=t}return e.prototype.getValueOfRange=function(e){if(e.startLineNumber===e.endLineNumber)return this._getLineContent(e.startLineNumber).substring(e.startColumn-1,e.endColumn-1);for(var t=this._getLineContent(e.startLineNumber).substring(e.startColumn-1),n=e.startLineNumber+1;n<e.endLineNumber;n++)t+=\"\\n\"+this._getLineContent(n);return t+=\"\\n\"+this._getLineContent(e.endLineNumber).substring(0,e.endColumn-1)},e.prototype.getLineLength=function(e){return this._getLineContent(e).length},Object.defineProperty(e.prototype,\"length\",{get:function(){var e=this._getLineContent(this._lineCount);return new N(this._lineCount-1,e.length)},enumerable:!1,configurable:!0}),e}()),A=function(e,t,n){this.changes=e,this.moves=t,this.hitTimeout=n},_=function(e,t){this.lineRangeMapping=e,this.changes=t},C=function(){function e(e,t){this.original=e,this.modified=t}return e.prototype.join=function(t){return new e(this.original.join(t.original),this.modified.join(t.modified))},Object.defineProperty(e.prototype,\"changedLineCount\",{get:function(){return Math.max(this.original.length,this.modified.length)},enumerable:!1,configurable:!0}),e.prototype.toRangeMapping=function(){var e=this.original.toInclusiveRange(),t=this.modified.toInclusiveRange();if(e&&t)return new k(e,t);if(1===this.original.startLineNumber||1===this.modified.startLineNumber){if(1!==this.modified.startLineNumber||1!==this.original.startLineNumber)throw new g(\"not a valid diff\");return new k(new y(this.original.startLineNumber,1,this.original.endLineNumberExclusive,1),new y(this.modified.startLineNumber,1,this.modified.endLineNumberExclusive,1))}return new k(new y(this.original.startLineNumber-1,Number.MAX_SAFE_INTEGER,this.original.endLineNumberExclusive-1,Number.MAX_SAFE_INTEGER),new y(this.modified.startLineNumber-1,Number.MAX_SAFE_INTEGER,this.modified.endLineNumberExclusive-1,Number.MAX_SAFE_INTEGER))},e.prototype.toRangeMapping2=function(e,t){if($(this.original.endLineNumberExclusive,e)&&$(this.modified.endLineNumberExclusive,t))return new k(new y(this.original.startLineNumber,1,this.original.endLineNumberExclusive,1),new y(this.modified.startLineNumber,1,this.modified.endLineNumberExclusive,1));if(!this.original.isEmpty&&!this.modified.isEmpty)return new k(y.fromPositions(new v(this.original.startLineNumber,1),B(new v(this.original.endLineNumberExclusive-1,Number.MAX_SAFE_INTEGER),e)),y.fromPositions(new v(this.modified.startLineNumber,1),B(new v(this.modified.endLineNumberExclusive-1,Number.MAX_SAFE_INTEGER),t)));if(this.original.startLineNumber>1&&this.modified.startLineNumber>1)return new k(y.fromPositions(B(new v(this.original.startLineNumber-1,Number.MAX_SAFE_INTEGER),e),B(new v(this.original.endLineNumberExclusive-1,Number.MAX_SAFE_INTEGER),e)),y.fromPositions(B(new v(this.modified.startLineNumber-1,Number.MAX_SAFE_INTEGER),t),B(new v(this.modified.endLineNumberExclusive-1,Number.MAX_SAFE_INTEGER),t)));throw new g},e}();function B(e,t){if(e.lineNumber<1)return new v(1,1);if(e.lineNumber>t.length)return new v(t.length,t[t.length-1].length+1);var n=t[e.lineNumber-1];return e.column>n.length+1?new v(e.lineNumber,n.length+1):e}function $(e,t){return e>=1&&e<=t.length}var M=function(e){function t(t,n,i){var r=e.call(this,t,n)||this;return r.innerChanges=i,r}return l(t,e),t.fromRangeMappings=function(e){return new t(x.join(e.map(function(e){return x.fromRangeInclusive(e.originalRange)})),x.join(e.map(function(e){return x.fromRangeInclusive(e.modifiedRange)})),e)},t.prototype.flip=function(){var e;return new t(this.modified,this.original,null===(e=this.innerChanges)||void 0===e?void 0:e.map(function(e){return e.flip()}))},t.prototype.withInnerChangesFromLineRanges=function(){return new t(this.original,this.modified,[this.toRangeMapping()])},t}(C),k=function(){function e(e,t){this.originalRange=e,this.modifiedRange=t}return e.join=function(e){if(0===e.length)throw new g(\"Cannot join an empty list of range mappings\");for(var t=e[0],n=1;n<e.length;n++)t=t.join(e[n]);return t},e.assertSorted=function(e){for(var t=1;t<e.length;t++){var n=e[t-1],i=e[t];if(!n.originalRange.getEndPosition().isBeforeOrEqual(i.originalRange.getStartPosition())||!n.modifiedRange.getEndPosition().isBeforeOrEqual(i.modifiedRange.getStartPosition()))throw new g(\"Range mappings must be sorted\")}},e.prototype.flip=function(){return new e(this.modifiedRange,this.originalRange)},e.prototype.join=function(t){return new e(this.originalRange.plusRange(t.originalRange),this.modifiedRange.plusRange(t.modifiedRange))},e}();function q(e,t,n,i){var r,o;void 0===i&&(i=!1);var s=[];try{for(var a=d(function(e,t){var n,i,r,o,s,a,u,l;return h(this,function(h){switch(h.label){case 0:h.trys.push([0,8,9,10]),r=d(e),o=r.next(),h.label=1;case 1:return o.done?[3,7]:(s=o.value,void 0!==i&&t(i,s)?(n.push(s),[3,5]):[3,2]);case 2:return n?[4,n]:[3,4];case 3:h.sent(),h.label=4;case 4:n=[s],h.label=5;case 5:i=s,h.label=6;case 6:return o=r.next(),[3,1];case 7:return[3,10];case 8:return a=h.sent(),u={error:a},[3,10];case 9:try{o&&!o.done&&(l=r.return)&&l.call(r)}finally{if(u)throw u.error}return[7];case 10:return n?[4,n]:[3,12];case 11:h.sent(),h.label=12;case 12:return[2]}})}(e.map(function(e){return function(e,t,n){var i=0,r=0;1===e.modifiedRange.endColumn&&1===e.originalRange.endColumn&&e.originalRange.startLineNumber+i<=e.originalRange.endLineNumber&&e.modifiedRange.startLineNumber+i<=e.modifiedRange.endLineNumber&&(r=-1);e.modifiedRange.startColumn-1>=n.getLineLength(e.modifiedRange.startLineNumber)&&e.originalRange.startColumn-1>=t.getLineLength(e.originalRange.startLineNumber)&&e.originalRange.startLineNumber<=e.originalRange.endLineNumber+r&&e.modifiedRange.startLineNumber<=e.modifiedRange.endLineNumber+r&&(i=1);var o=new x(e.originalRange.startLineNumber+i,e.originalRange.endLineNumber+1+r),s=new x(e.modifiedRange.startLineNumber+i,e.modifiedRange.endLineNumber+1+r);return new M(o,s,[e])}(e,t,n)}),function(e,t){return e.original.overlapOrTouch(t.original)||e.modified.overlapOrTouch(t.modified)})),u=a.next();!u.done;u=a.next()){var l=u.value,c=l[0],f=l[l.length-1];s.push(new M(c.original.join(f.original),c.modified.join(f.modified),l.map(function(e){return e.innerChanges[0]})))}}catch(g){r={error:g}}finally{try{u&&!u.done&&(o=a.return)&&o.call(a)}finally{if(r)throw r.error}}return m(function(){if(!i&&s.length>0){if(s[0].modified.startLineNumber!==s[0].original.startLineNumber)return!1;if(n.length.lineCount-s[s.length-1].modified.endLineNumberExclusive!==t.length.lineCount-s[s.length-1].original.endLineNumberExclusive)return!1}return function(e,t){for(var n=0;n<e.length-1;){if(!t(e[n],e[n+1]))return!1;n++}return!0}(s,function(e,t){return t.original.startLineNumber-e.original.endLineNumberExclusive===t.modified.startLineNumber-e.modified.endLineNumberExclusive&&e.original.endLineNumberExclusive<t.original.startLineNumber&&e.modified.endLineNumberExclusive<t.modified.startLineNumber})}),s}var D=function(){function e(e,t){this.diffs=e,this.hitTimeout=t}return e.trivial=function(t,n){return new e([new T(p.ofLength(t.length),p.ofLength(n.length))],!1)},e.trivialTimedOut=function(t,n){return new e([new T(p.ofLength(t.length),p.ofLength(n.length))],!0)},e}(),T=function(){function e(e,t){this.seq1Range=e,this.seq2Range=t}return e.invert=function(t,n){var i=[];return function(e,t){for(var n=0;n<=e.length;n++)t(0===n?void 0:e[n-1],n===e.length?void 0:e[n])}(t,function(t,r){i.push(e.fromOffsetPairs(t?t.getEndExclusives():O.zero,r?r.getStarts():new O(n,(t?t.seq2Range.endExclusive-t.seq1Range.endExclusive:0)+n)))}),i},e.fromOffsetPairs=function(t,n){return new e(new p(t.offset1,n.offset1),new p(t.offset2,n.offset2))},e.assertSorted=function(e){var t,n,i=void 0;try{for(var r=d(e),o=r.next();!o.done;o=r.next()){var s=o.value;if(i&&!(i.seq1Range.endExclusive<=s.seq1Range.start&&i.seq2Range.endExclusive<=s.seq2Range.start))throw new g(\"Sequence diffs must be sorted\");i=s}}catch(a){t={error:a}}finally{try{o&&!o.done&&(n=r.return)&&n.call(r)}finally{if(t)throw t.error}}},e.prototype.swap=function(){return new e(this.seq2Range,this.seq1Range)},e.prototype.join=function(t){return new e(this.seq1Range.join(t.seq1Range),this.seq2Range.join(t.seq2Range))},e.prototype.delta=function(t){return 0===t?this:new e(this.seq1Range.delta(t),this.seq2Range.delta(t))},e.prototype.deltaStart=function(t){return 0===t?this:new e(this.seq1Range.deltaStart(t),this.seq2Range.deltaStart(t))},e.prototype.deltaEnd=function(t){return 0===t?this:new e(this.seq1Range.deltaEnd(t),this.seq2Range.deltaEnd(t))},e.prototype.intersect=function(t){var n=this.seq1Range.intersect(t.seq1Range),i=this.seq2Range.intersect(t.seq2Range);if(n&&i)return new e(n,i)},e.prototype.getStarts=function(){return new O(this.seq1Range.start,this.seq2Range.start)},e.prototype.getEndExclusives=function(){return new O(this.seq1Range.endExclusive,this.seq2Range.endExclusive)},e}(),O=function(){function e(e,t){this.offset1=e,this.offset2=t}return e.prototype.delta=function(e){return 0===e?this:new s(this.offset1+e,this.offset2+e)},e.prototype.equals=function(e){return this.offset1===e.offset1&&this.offset2===e.offset2},e}();(s=O).zero=new s(0,0),s.max=new s(Number.MAX_SAFE_INTEGER,Number.MAX_SAFE_INTEGER);var I=function(){function e(){}return e.prototype.isValid=function(){return!0},e}();(a=I).instance=new a;var W=function(){function e(e){if(this.timeout=e,this.startTime=Date.now(),this.valid=!0,e<=0)throw new g(\"timeout must be positive\")}return e.prototype.isValid=function(){return!(Date.now()-this.startTime<this.timeout)&&this.valid&&(this.valid=!1),this.valid},e.prototype.disable=function(){this.timeout=Number.MAX_SAFE_INTEGER,this.isValid=function(){return!0},this.valid=!0},e}(),P=function(){function e(e,t){this.width=e,this.height=t,this.array=[],this.array=new Array(e*t)}return e.prototype.get=function(e,t){return this.array[e+t*this.width]},e.prototype.set=function(e,t,n){this.array[e+t*this.width]=n},e}();function F(e){return 32===e||9===e}var j=function(){function e(e,t,n){this.range=e,this.lines=t,this.source=n,this.histogram=[];for(var i=0,r=e.startLineNumber-1;r<e.endLineNumberExclusive-1;r++){for(var o=t[r],s=0;s<o.length;s++){i++;var a=o[s],l=u.getKey(a);this.histogram[l]=(this.histogram[l]||0)+1}i++;var h=u.getKey(\"\\n\");this.histogram[h]=(this.histogram[h]||0)+1}this.totalCount=i}return e.getKey=function(e){var t=this.chrKeys.get(e);return void 0===t&&(t=this.chrKeys.size,this.chrKeys.set(e,t)),t},e.prototype.computeSimilarity=function(e){for(var t,n,i=0,r=Math.max(this.histogram.length,e.histogram.length),o=0;o<r;o++)i+=Math.abs((null!==(t=this.histogram[o])&&void 0!==t?t:0)-(null!==(n=e.histogram[o])&&void 0!==n?n:0));return 1-i/(this.totalCount+e.totalCount)},e}();(u=j).chrKeys=new Map;var H=function(){function e(){}return e.prototype.compute=function(e,t,n,i){if(void 0===n&&(n=I.instance),0===e.length||0===t.length)return D.trivial(e,t);for(var r=new P(e.length,t.length),o=new P(e.length,t.length),s=new P(e.length,t.length),a=0;a<e.length;a++)for(var u=0;u<t.length;u++){if(!n.isValid())return D.trivialTimedOut(e,t);var l=0===a?0:r.get(a-1,u),h=0===u?0:r.get(a,u-1),d=void 0;e.getElement(a)===t.getElement(u)?(d=0===a||0===u?0:r.get(a-1,u-1),a>0&&u>0&&3===o.get(a-1,u-1)&&(d+=s.get(a-1,u-1)),d+=i?i(a,u):1):d=-1;var c=Math.max(l,h,d);if(c===d){var f=a>0&&u>0?s.get(a-1,u-1):0;s.set(a,u,f+1),o.set(a,u,3)}else c===l?(s.set(a,u,0),o.set(a,u,1)):c===h&&(s.set(a,u,0),o.set(a,u,2));r.set(a,u,c)}var g=[],m=e.length,v=t.length;function y(e,t){e+1===m&&t+1===v||g.push(new T(new p(e+1,m),new p(t+1,v))),m=e,v=t}for(var w=e.length-1,b=t.length-1;w>=0&&b>=0;)3===o.get(w,b)?(y(w,b),w--,b--):1===o.get(w,b)?w--:b--;return y(-1,-1),g.reverse(),new D(g,!1)},e}(),z=function(){function e(){}return e.prototype.compute=function(e,t,n){if(void 0===n&&(n=I.instance),0===e.length||0===t.length)return D.trivial(e,t);var i=e,r=t;function o(e,t){for(;e<i.length&&t<r.length&&i.getElement(e)===r.getElement(t);)e++,t++;return e}var s=0,a=new G;a.set(0,o(0,0));var u=new X;u.set(0,0===a.get(0)?null:new V(null,0,0,a.get(0)));var l=0;e:for(;;){if(s++,!n.isValid())return D.trivialTimedOut(i,r);var h=-Math.min(s,r.length+s%2),d=Math.min(s,i.length+s%2);for(l=h;l<=d;l+=2){var c=l===d?-1:a.get(l+1),f=l===h?-1:a.get(l-1)+1,g=Math.min(Math.max(c,f),i.length),m=g-l;if(!(g>i.length||m>r.length)){var v=o(g,m);a.set(l,v);var y=g===c?u.get(l+1):u.get(l-1);if(u.set(l,v!==g?new V(y,g,m,v-g):y),a.get(l)===i.length&&a.get(l)-l===r.length)break e}}}for(var w=u.get(l),b=[],E=i.length,L=r.length;;){var x=w?w.x+w.length:0,R=w?w.y+w.length:0;if(x===E&&R===L||b.push(new T(new p(x,E),new p(R,L))),!w)break;E=w.x,L=w.y,w=w.prev}return b.reverse(),new D(b,!1)},e}(),V=function(e,t,n,i){this.prev=e,this.x=t,this.y=n,this.length=i},G=function(){function e(){this.positiveArr=new Int32Array(10),this.negativeArr=new Int32Array(10)}return e.prototype.get=function(e){return e<0?(e=-e-1,this.negativeArr[e]):this.positiveArr[e]},e.prototype.set=function(e,t){if(e<0){if((e=-e-1)>=this.negativeArr.length){var n=this.negativeArr;this.negativeArr=new Int32Array(2*n.length),this.negativeArr.set(n)}this.negativeArr[e]=t}else{if(e>=this.positiveArr.length){n=this.positiveArr;this.positiveArr=new Int32Array(2*n.length),this.positiveArr.set(n)}this.positiveArr[e]=t}},e}(),X=function(){function e(){this.positiveArr=[],this.negativeArr=[]}return e.prototype.get=function(e){return e<0?(e=-e-1,this.negativeArr[e]):this.positiveArr[e]},e.prototype.set=function(e,t){e<0?(e=-e-1,this.negativeArr[e]=t):this.positiveArr[e]=t},e}(),U=function(){function e(){this.map=new Map}return e.prototype.add=function(e,t){var n=this.map.get(e);n||(n=new Set,this.map.set(e,n)),n.add(t)},e.prototype.forEach=function(e,t){var n=this.map.get(e);n&&n.forEach(t)},e.prototype.get=function(e){var t=this.map.get(e);return t||new Set},e}(),Z=function(){function e(e,t,n){this.lines=e,this.range=t,this.considerWhitespaceChanges=n,this.elements=[],this.firstElementOffsetByLineIdx=[],this.lineStartOffsets=[],this.trimmedWsLengthsByLineIdx=[],this.firstElementOffsetByLineIdx.push(0);for(var i=this.range.startLineNumber;i<=this.range.endLineNumber;i++){var r=e[i-1],o=0;i===this.range.startLineNumber&&this.range.startColumn>1&&(o=this.range.startColumn-1,r=r.substring(o)),this.lineStartOffsets.push(o);var s=0;if(!n){var a=r.trimStart();s=r.length-a.length,r=a.trimEnd()}this.trimmedWsLengthsByLineIdx.push(s);for(var u=i===this.range.endLineNumber?Math.min(this.range.endColumn-1-o-s,r.length):r.length,l=0;l<u;l++)this.elements.push(r.charCodeAt(l));i<this.range.endLineNumber&&(this.elements.push(\"\\n\".charCodeAt(0)),this.firstElementOffsetByLineIdx.push(this.elements.length))}}return e.prototype.toString=function(){return'Slice: \"'.concat(this.text,'\"')},Object.defineProperty(e.prototype,\"text\",{get:function(){return this.getText(new p(0,this.length))},enumerable:!1,configurable:!0}),e.prototype.getText=function(e){return this.elements.slice(e.start,e.endExclusive).map(function(e){return String.fromCharCode(e)}).join(\"\")},e.prototype.getElement=function(e){return this.elements[e]},Object.defineProperty(e.prototype,\"length\",{get:function(){return this.elements.length},enumerable:!1,configurable:!0}),e.prototype.getBoundaryScore=function(e){var t=ee(e>0?this.elements[e-1]:-1),n=ee(e<this.elements.length?this.elements[e]:-1);if(7===t&&8===n)return 0;if(8===t)return 150;var i=0;return t!==n&&(i+=10,0===t&&1===n&&(i+=1)),i+=Q(t),i+=Q(n)},e.prototype.translateOffset=function(e,t){void 0===t&&(t=\"right\");var n=b(this.firstElementOffsetByLineIdx,function(t){return t<=e}),i=e-this.firstElementOffsetByLineIdx[n];return new v(this.range.startLineNumber+n,1+this.lineStartOffsets[n]+i+(0===i&&\"left\"===t?0:this.trimmedWsLengthsByLineIdx[n]))},e.prototype.translateRange=function(e){var t=this.translateOffset(e.start,\"right\"),n=this.translateOffset(e.endExclusive,\"left\");return n.isBefore(t)?y.fromPositions(n,n):y.fromPositions(t,n)},e.prototype.findWordContaining=function(e){if(!(e<0||e>=this.elements.length)&&K(this.elements[e])){for(var t=e;t>0&&K(this.elements[t-1]);)t--;for(var n=e;n<this.elements.length&&K(this.elements[n]);)n++;return new p(t,n)}},e.prototype.findSubWordContaining=function(e){if(!(e<0||e>=this.elements.length)&&K(this.elements[e])){for(var t=e;t>0&&K(this.elements[t-1])&&!Y(this.elements[t]);)t--;for(var n=e;n<this.elements.length&&K(this.elements[n])&&!Y(this.elements[n]);)n++;return new p(t,n)}},e.prototype.countLinesIn=function(e){return this.translateOffset(e.endExclusive).lineNumber-this.translateOffset(e.start).lineNumber},e.prototype.isStronglyEqual=function(e,t){return this.elements[e]===this.elements[t]},e.prototype.extendToFullLines=function(e){var t,n,i=null!==(t=w(this.firstElementOffsetByLineIdx,function(t){return t<=e.start}))&&void 0!==t?t:0,r=null!==(n=function(e,t){var n=E(e,t);return n===e.length?void 0:e[n]}(this.firstElementOffsetByLineIdx,function(t){return e.endExclusive<=t}))&&void 0!==n?n:this.elements.length;return new p(i,r)},e}();function K(e){return e>=97&&e<=122||e>=65&&e<=90||e>=48&&e<=57}function Y(e){return e>=65&&e<=90}var J=((i={})[0]=0,i[1]=0,i[2]=0,i[3]=10,i[4]=2,i[5]=30,i[6]=3,i[7]=10,i[8]=10,i);function Q(e){return J[e]}function ee(e){return 10===e?8:13===e?7:F(e)?6:e>=97&&e<=122?0:e>=65&&e<=90?1:e>=48&&e<=57?2:-1===e?3:44===e||59===e?5:4}function te(e,t,n,i,r,o){var s=function(e,t,n,i){var r,o,s,a,u=[],l=e.filter(function(e){return e.modified.isEmpty&&e.original.length>=3}).map(function(e){return new j(e.original,t,e)}),h=new Set(e.filter(function(e){return e.original.isEmpty&&e.modified.length>=3}).map(function(e){return new j(e.modified,n,e)})),c=new Set;try{for(var f=d(l),g=f.next();!g.done;g=f.next()){var m=g.value,p=-1,v=void 0;try{for(var y=(s=void 0,d(h)),w=y.next();!w.done;w=y.next()){var b=w.value,E=m.computeSimilarity(b);E>p&&(p=E,v=b)}}catch(L){s={error:L}}finally{try{w&&!w.done&&(a=y.return)&&a.call(y)}finally{if(s)throw s.error}}if(p>.9&&v&&(h.delete(v),u.push(new C(m.range,v.range)),c.add(m.source),c.add(v.source)),!i.isValid())return{moves:u,excludedChanges:c}}}catch(x){r={error:x}}finally{try{g&&!g.done&&(o=f.return)&&o.call(f)}finally{if(r)throw r.error}}return{moves:u,excludedChanges:c}}(e,t,n,o),a=s.moves,u=s.excludedChanges;if(!o.isValid())return[];var l=function(e,t,n,i,r,o){var s,a,u,l,h,g,m,p,v=[],y=new U;try{for(var b=d(e),E=b.next();!E.done;E=b.next())for(var N=(M=E.value).original.startLineNumber;N<M.original.endLineNumberExclusive-2;N++){var S=\"\".concat(t[N-1],\":\").concat(t[N+1-1],\":\").concat(t[N+2-1]);y.add(S,{range:new x(N,N+3)})}}catch(J){s={error:J}}finally{try{E&&!E.done&&(a=b.return)&&a.call(b)}finally{if(s)throw s.error}}var A=[];e.sort(c(function(e){return e.modified.startLineNumber},f));var _=function(e){for(var t=[],i=function(e){var i=\"\".concat(n[e-1],\":\").concat(n[e+1-1],\":\").concat(n[e+2-1]),r=new x(e,e+3),o=[];y.forEach(i,function(e){var n,i,s=e.range;try{for(var a=(n=void 0,d(t)),u=a.next();!u.done;u=a.next()){var l=u.value;if(l.originalLineRange.endLineNumberExclusive+1===s.endLineNumberExclusive&&l.modifiedLineRange.endLineNumberExclusive+1===r.endLineNumberExclusive)return l.originalLineRange=new x(l.originalLineRange.startLineNumber,s.endLineNumberExclusive),l.modifiedLineRange=new x(l.modifiedLineRange.startLineNumber,r.endLineNumberExclusive),void o.push(l)}}catch(c){n={error:c}}finally{try{u&&!u.done&&(i=a.return)&&i.call(a)}finally{if(n)throw n.error}}var h={modifiedLineRange:r,originalLineRange:s};A.push(h),o.push(h)}),t=o},r=e.modified.startLineNumber;r<e.modified.endLineNumberExclusive-2;r++)i(r);if(!o.isValid())return{value:[]}};try{for(var B=d(e),$=B.next();!$.done;$=B.next()){var M,k=_(M=$.value);if(\"object\"===typeof k)return k.value}}catch(Q){u={error:Q}}finally{try{$&&!$.done&&(l=B.return)&&l.call(B)}finally{if(u)throw u.error}}A.sort((q=c(function(e){return e.modifiedLineRange.length},f),function(e,t){return-q(e,t)}));var q;var D=new R,T=new R;try{for(var O=d(A),I=O.next();!I.done;I=O.next()){var W=I.value,P=W.modifiedLineRange.startLineNumber-W.originalLineRange.startLineNumber,F=D.subtractFrom(W.modifiedLineRange),j=T.subtractFrom(W.originalLineRange).getWithDelta(P),H=F.getIntersection(j);try{for(var z=(m=void 0,d(H.ranges)),V=z.next();!V.done;V=z.next()){var G=V.value;if(!(G.length<3)){var X=G,Z=G.delta(-P);v.push(new C(Z,X)),D.addRange(X),T.addRange(Z)}}}catch(ee){m={error:ee}}finally{try{V&&!V.done&&(p=z.return)&&p.call(z)}finally{if(m)throw m.error}}}}catch(te){h={error:te}}finally{try{I&&!I.done&&(g=O.return)&&g.call(O)}finally{if(h)throw h.error}}v.sort(c(function(e){return e.original.startLineNumber},f));var K=new L(e),Y=function(t){var n=v[t],s=K.findLastMonotonous(function(e){return e.original.startLineNumber<=n.original.startLineNumber}),a=w(e,function(e){return e.modified.startLineNumber<=n.modified.startLineNumber}),u=Math.max(n.original.startLineNumber-s.original.startLineNumber,n.modified.startLineNumber-a.modified.startLineNumber),l=K.findLastMonotonous(function(e){return e.original.startLineNumber<n.original.endLineNumberExclusive}),h=w(e,function(e){return e.modified.startLineNumber<n.modified.endLineNumberExclusive}),d=Math.max(l.original.endLineNumberExclusive-n.original.endLineNumberExclusive,h.modified.endLineNumberExclusive-n.modified.endLineNumberExclusive),c=void 0;for(c=0;c<u;c++){var f=n.original.startLineNumber-c-1,g=n.modified.startLineNumber-c-1;if(f>i.length||g>r.length)break;if(D.contains(g)||T.contains(f))break;if(!ne(i[f-1],r[g-1],o))break}c>0&&(T.addRange(new x(n.original.startLineNumber-c,n.original.startLineNumber)),D.addRange(new x(n.modified.startLineNumber-c,n.modified.startLineNumber)));var m=void 0;for(m=0;m<d;m++){f=n.original.endLineNumberExclusive+m,g=n.modified.endLineNumberExclusive+m;if(f>i.length||g>r.length)break;if(D.contains(g)||T.contains(f))break;if(!ne(i[f-1],r[g-1],o))break}m>0&&(T.addRange(new x(n.original.endLineNumberExclusive,n.original.endLineNumberExclusive+m)),D.addRange(new x(n.modified.endLineNumberExclusive,n.modified.endLineNumberExclusive+m))),(c>0||m>0)&&(v[t]=new C(new x(n.original.startLineNumber-c,n.original.endLineNumberExclusive+m),new x(n.modified.startLineNumber-c,n.modified.endLineNumberExclusive+m)))};for(N=0;N<v.length;N++)Y(N);return v}(e.filter(function(e){return!u.has(e)}),i,r,t,n,o);return function(e,t){var n,i;try{for(var r=d(t),o=r.next();!o.done;o=r.next()){var s=o.value;e.push(s)}}catch(a){n={error:a}}finally{try{o&&!o.done&&(i=r.return)&&i.call(r)}finally{if(n)throw n.error}}}(a,l),a=(a=function(e){if(0===e.length)return e;e.sort(c(function(e){return e.original.startLineNumber},f));for(var t=[e[0]],n=1;n<e.length;n++){var i=t[t.length-1],r=e[n],o=r.original.startLineNumber-i.original.endLineNumberExclusive,s=r.modified.startLineNumber-i.modified.endLineNumberExclusive;o>=0&&s>=0&&o+s<=2?t[t.length-1]=i.join(r):t.push(r)}return t}(a)).filter(function(e){var n=e.original.toOffsetRange().slice(t).map(function(e){return e.trim()});return n.join(\"\\n\").length>=15&&function(e,t){var n,i,r=0;try{for(var o=d(e),s=o.next();!s.done;s=o.next()){t(s.value)&&r++}}catch(a){n={error:a}}finally{try{s&&!s.done&&(i=o.return)&&i.call(o)}finally{if(n)throw n.error}}return r}(n,function(e){return e.length>=2})>=2}),a=function(e,t){var n=new L(e);return t=t.filter(function(t){return(n.findLastMonotonous(function(e){return e.original.startLineNumber<t.original.endLineNumberExclusive})||new C(new x(1,1),new x(1,1)))!==w(e,function(e){return e.modified.startLineNumber<t.modified.endLineNumberExclusive})}),t}(e,a),a}function ne(e,t,n){var i,r;if(e.trim()===t.trim())return!0;if(e.length>300&&t.length>300)return!1;var o=(new z).compute(new Z([e],new y(1,1,1,e.length),!1),new Z([t],new y(1,1,1,t.length),!1),n),s=0,a=T.invert(o.diffs,e.length);try{for(var u=d(a),l=u.next();!l.done;l=u.next()){l.value.seq1Range.forEach(function(t){F(e.charCodeAt(t))||s++})}}catch(c){i={error:c}}finally{try{l&&!l.done&&(r=u.return)&&r.call(u)}finally{if(i)throw i.error}}var h=function(t){for(var n=0,i=0;i<e.length;i++)F(t.charCodeAt(i))||n++;return n}(e.length>t.length?e:t);return s/h>.6&&h>10}function ie(e,t,n){var i=n;return i=re(e,t,i),i=function(e,t,n){if(!e.getBoundaryScore||!t.getBoundaryScore)return n;for(var i=0;i<n.length;i++){var r=i>0?n[i-1]:void 0,o=n[i],s=i+1<n.length?n[i+1]:void 0,a=new p(r?r.seq1Range.endExclusive+1:0,s?s.seq1Range.start-1:e.length),u=new p(r?r.seq2Range.endExclusive+1:0,s?s.seq2Range.start-1:t.length);o.seq1Range.isEmpty?n[i]=oe(o,e,t,a,u):o.seq2Range.isEmpty&&(n[i]=oe(o.swap(),t,e,u,a).swap())}return n}(e,t,i=re(e,t,i)),i}function re(e,t,n){if(0===n.length)return n;var i=[];i.push(n[0]);for(var r=1;r<n.length;r++){var o=i[i.length-1];if((l=n[r]).seq1Range.isEmpty||l.seq2Range.isEmpty){var s=l.seq1Range.start-o.seq1Range.endExclusive,a=void 0;for(a=1;a<=s&&(e.getElement(l.seq1Range.start-a)===e.getElement(l.seq1Range.endExclusive-a)&&t.getElement(l.seq2Range.start-a)===t.getElement(l.seq2Range.endExclusive-a));a++);if(--a===s){i[i.length-1]=new T(new p(o.seq1Range.start,l.seq1Range.endExclusive-s),new p(o.seq2Range.start,l.seq2Range.endExclusive-s));continue}l=l.delta(-a)}i.push(l)}var u=[];for(r=0;r<i.length-1;r++){var l,h=i[r+1];if((l=i[r]).seq1Range.isEmpty||l.seq2Range.isEmpty){s=h.seq1Range.start-l.seq1Range.endExclusive,a=void 0;for(a=0;a<s&&(e.isStronglyEqual(l.seq1Range.start+a,l.seq1Range.endExclusive+a)&&t.isStronglyEqual(l.seq2Range.start+a,l.seq2Range.endExclusive+a));a++);if(a===s){i[r+1]=new T(new p(l.seq1Range.start+s,h.seq1Range.endExclusive),new p(l.seq2Range.start+s,h.seq2Range.endExclusive));continue}a>0&&(l=l.delta(a))}u.push(l)}return i.length>0&&u.push(i[i.length-1]),u}function oe(e,t,n,i,r){for(var o=1;e.seq1Range.start-o>=i.start&&e.seq2Range.start-o>=r.start&&n.isStronglyEqual(e.seq2Range.start-o,e.seq2Range.endExclusive-o)&&o<100;)o++;o--;for(var s=0;e.seq1Range.start+s<i.endExclusive&&e.seq2Range.endExclusive+s<r.endExclusive&&n.isStronglyEqual(e.seq2Range.start+s,e.seq2Range.endExclusive+s)&&s<100;)s++;if(0===o&&0===s)return e;for(var a=0,u=-1,l=-o;l<=s;l++){var h=e.seq2Range.start+l,d=e.seq2Range.endExclusive+l,c=e.seq1Range.start+l,f=t.getBoundaryScore(c)+n.getBoundaryScore(h)+n.getBoundaryScore(d);f>u&&(u=f,a=l)}return e.delta(a)}function se(e,t,n,i,r){void 0===r&&(r=!1);var o=T.invert(n,e.length),s=[],a=new O(0,0);function u(n,u){if(!(n.offset1<a.offset1||n.offset2<a.offset2)){var l=i(e,n.offset1),h=i(t,n.offset2);if(l&&h){for(var d=new T(l,h),c=d.intersect(u),f=c.seq1Range.length,g=c.seq2Range.length;o.length>0;){var m=o[0];if(!(m.seq1Range.intersects(d.seq1Range)||m.seq2Range.intersects(d.seq2Range)))break;var p=i(e,m.seq1Range.start),v=i(t,m.seq2Range.start),y=new T(p,v),w=y.intersect(m);if(f+=w.seq1Range.length,g+=w.seq2Range.length,!((d=d.join(y)).seq1Range.endExclusive>=m.seq1Range.endExclusive))break;o.shift()}(r&&f+g<d.seq1Range.length+d.seq2Range.length||f+g<2*(d.seq1Range.length+d.seq2Range.length)/3)&&s.push(d),a=d.getEndExclusives()}}}for(;o.length>0;){var l=o.shift();l.seq1Range.isEmpty||(u(l.getStarts(),l),u(l.getEndExclusives().delta(-1),l))}var h=function(e,t){var n=[];for(;e.length>0||t.length>0;){var i=e[0],r=t[0],o=void 0;o=i&&(!r||i.seq1Range.start<r.seq1Range.start)?e.shift():t.shift(),n.length>0&&n[n.length-1].seq1Range.endExclusive>=o.seq1Range.start?n[n.length-1]=n[n.length-1].join(o):n.push(o)}return n}(n,s);return h}var ae=function(){function e(e,t){this.trimmedHash=e,this.lines=t}return e.prototype.getElement=function(e){return this.trimmedHash[e]},Object.defineProperty(e.prototype,\"length\",{get:function(){return this.trimmedHash.length},enumerable:!1,configurable:!0}),e.prototype.getBoundaryScore=function(e){return 1e3-((0===e?0:ue(this.lines[e-1]))+(e===this.lines.length?0:ue(this.lines[e])))},e.prototype.getText=function(e){return this.lines.slice(e.start,e.endExclusive).join(\"\\n\")},e.prototype.isStronglyEqual=function(e,t){return this.lines[e]===this.lines[t]},e}();function ue(e){for(var t=0;t<e.length&&(32===e.charCodeAt(t)||9===e.charCodeAt(t));)t++;return t}var le=function(){function e(){this.dynamicProgrammingDiffing=new H,this.myersDiffingAlgorithm=new z}return e.prototype.computeDiff=function(e,t,n){var i,r,o=this;if(e.length<=1&&function(e,t,n){if(void 0===n&&(n=function(e,t){return e===t}),e===t)return!0;if(!e||!t)return!1;if(e.length!==t.length)return!1;for(var i=0,r=e.length;i<r;i++)if(!n(e[i],t[i]))return!1;return!0}(e,t,function(e,t){return e===t}))return new A([],[],!1);if(1===e.length&&0===e[0].length||1===t.length&&0===t[0].length)return new A([new M(new x(1,e.length+1),new x(1,t.length+1),[new k(new y(1,1,e.length,e[e.length-1].length+1),new y(1,1,t.length,t[t.length-1].length+1))])],[],!1);var s=0===n.maxComputationTimeMs?I.instance:new W(n.maxComputationTimeMs),a=!n.ignoreTrimWhitespace,u=new Map;function l(e){var t=u.get(e);return void 0===t&&(t=u.size,u.set(e,t)),t}var h=e.map(function(e){return l(e.trim())}),c=t.map(function(e){return l(e.trim())}),f=new ae(h,e),g=new ae(c,t),v=f.length+g.length<1700?o.dynamicProgrammingDiffing.compute(f,g,s,function(n,i){return e[n]===t[i]?0===t[i].length?.1:1+Math.log(1+t[i].length):.99}):o.myersDiffingAlgorithm.compute(f,g,s),w=v.diffs,b=v.hitTimeout;w=ie(f,g,w),w=function(e,t,n){var i=n;if(0===i.length)return i;var r,o=0;do{r=!1;for(var s=[i[0]],a=function(t){var n=i[t],o=s[s.length-1];!function(t,i){var r=new p(o.seq1Range.endExclusive,n.seq1Range.start);return e.getText(r).replace(/\\s/g,\"\").length<=4&&(t.seq1Range.length+t.seq2Range.length>5||i.seq1Range.length+i.seq2Range.length>5)}(o,n)?s.push(n):(r=!0,s[s.length-1]=s[s.length-1].join(n))},u=1;u<i.length;u++)a(u);i=s}while(o++<10&&r);return i}(f,0,w);var E=[],L=function(i){var r,u;if(a)for(var l=0;l<i;l++){var h=R+l,c=N+l;if(e[h]!==t[c]){var f=o.refineDiff(e,t,new T(new p(h,h+1),new p(c,c+1)),s,a,n);try{for(var g=(r=void 0,d(f.mappings)),m=g.next();!m.done;m=g.next()){var v=m.value;E.push(v)}}catch(y){r={error:y}}finally{try{m&&!m.done&&(u=g.return)&&u.call(g)}finally{if(r)throw r.error}}f.hitTimeout&&(b=!0)}}},R=0,N=0,_=function(i){var r,o;m(function(){return i.seq1Range.start-R===i.seq2Range.start-N});var u=i.seq1Range.start-R;L(u),R=i.seq1Range.endExclusive,N=i.seq2Range.endExclusive;var l=C.refineDiff(e,t,i,s,a,n);l.hitTimeout&&(b=!0);try{for(var h=(r=void 0,d(l.mappings)),c=h.next();!c.done;c=h.next()){var f=c.value;E.push(f)}}catch(g){r={error:g}}finally{try{c&&!c.done&&(o=h.return)&&o.call(h)}finally{if(r)throw r.error}}},C=this;try{for(var B=d(w),$=B.next();!$.done;$=B.next()){_($.value)}}catch(P){i={error:P}}finally{try{$&&!$.done&&(r=B.return)&&r.call(B)}finally{if(i)throw i.error}}L(e.length-R);var D=q(E,new S(e),new S(t)),O=[];return n.computeMoves&&(O=this.computeMoves(D,e,t,h,c,s,a,n)),m(function(){var n,i,r,o;function s(e,t){if(e.lineNumber<1||e.lineNumber>t.length)return!1;var n=t[e.lineNumber-1];return!(e.column<1||e.column>n.length+1)}function a(e,t){return!(e.startLineNumber<1||e.startLineNumber>t.length+1)&&!(e.endLineNumberExclusive<1||e.endLineNumberExclusive>t.length+1)}try{for(var u=d(D),l=u.next();!l.done;l=u.next()){var h=l.value;if(!h.innerChanges)return!1;try{for(var c=(r=void 0,d(h.innerChanges)),f=c.next();!f.done;f=c.next()){var g=f.value;if(!(s(g.modifiedRange.getStartPosition(),t)&&s(g.modifiedRange.getEndPosition(),t)&&s(g.originalRange.getStartPosition(),e)&&s(g.originalRange.getEndPosition(),e)))return!1}}catch(m){r={error:m}}finally{try{f&&!f.done&&(o=c.return)&&o.call(c)}finally{if(r)throw r.error}}if(!a(h.modified,t)||!a(h.original,e))return!1}}catch(p){n={error:p}}finally{try{l&&!l.done&&(i=u.return)&&i.call(u)}finally{if(n)throw n.error}}return!0}),new A(D,O,b)},e.prototype.computeMoves=function(e,t,n,i,r,o,s,a){var u=this;return te(e,t,n,i,r,o).map(function(e){var i=q(u.refineDiff(t,n,new T(e.original.toOffsetRange(),e.modified.toOffsetRange()),o,s,a).mappings,new S(t),new S(n),!0);return new _(e,i)})},e.prototype.refineDiff=function(e,t,n,i,r,o){var s,a=new C(new x((s=n).seq1Range.start+1,s.seq1Range.endExclusive+1),new x(s.seq2Range.start+1,s.seq2Range.endExclusive+1)).toRangeMapping2(e,t),u=new Z(e,a.originalRange,r),l=new Z(t,a.modifiedRange,r),h=u.length+l.length<500?this.dynamicProgrammingDiffing.compute(u,l,i):this.myersDiffingAlgorithm.compute(u,l,i),c=h.diffs;return c=ie(u,l,c),c=se(u,l,c,function(e,t){return e.findWordContaining(t)}),o.extendToSubwords&&(c=se(u,l,c,function(e,t){return e.findSubWordContaining(t)},!0)),c=function(e,t,n){var i,r,o=[];try{for(var s=d(n),a=s.next();!a.done;a=s.next()){var u=a.value,l=o[o.length-1];l&&(u.seq1Range.start-l.seq1Range.endExclusive<=2||u.seq2Range.start-l.seq2Range.endExclusive<=2)?o[o.length-1]=new T(l.seq1Range.join(u.seq1Range),l.seq2Range.join(u.seq2Range)):o.push(u)}}catch(h){i={error:h}}finally{try{a&&!a.done&&(r=s.return)&&r.call(s)}finally{if(i)throw i.error}}return o}(0,0,c),c=function(e,t,n){var i=n;if(0===i.length)return i;var r,o=0;do{r=!1;for(var s=[i[0]],a=function(n){var o=i[n],a=s[s.length-1];!function(n,i){var r=new p(a.seq1Range.endExclusive,o.seq1Range.start);if(e.countLinesIn(r)>5||r.length>500)return!1;var s=e.getText(r).trim();if(s.length>20||s.split(/\\r\\n|\\r|\\n/).length>1)return!1;var u=e.countLinesIn(n.seq1Range),l=n.seq1Range.length,h=t.countLinesIn(n.seq2Range),d=n.seq2Range.length,c=e.countLinesIn(i.seq1Range),f=i.seq1Range.length,g=t.countLinesIn(i.seq2Range),m=i.seq2Range.length;function v(e){return Math.min(e,130)}return Math.pow(Math.pow(v(40*u+l),1.5)+Math.pow(v(40*h+d),1.5),1.5)+Math.pow(Math.pow(v(40*c+f),1.5)+Math.pow(v(40*g+m),1.5),1.5)>1.3*Math.pow(Math.pow(130,1.5),1.5)}(a,o)?s.push(o):(r=!0,s[s.length-1]=s[s.length-1].join(o))},u=1;u<i.length;u++)a(u);i=s}while(o++<10&&r);var l=[];return function(e,t){for(var n=0;n<e.length;n++)t(0===n?void 0:e[n-1],e[n],n+1===e.length?void 0:e[n+1])}(i,function(t,n,i){var r=n;function o(e){return e.length>0&&e.trim().length<=3&&n.seq1Range.length+n.seq2Range.length>100}var s=e.extendToFullLines(n.seq1Range),a=e.getText(new p(s.start,n.seq1Range.start));o(a)&&(r=r.deltaStart(-a.length));var u=e.getText(new p(n.seq1Range.endExclusive,s.endExclusive));o(u)&&(r=r.deltaEnd(u.length));var h=T.fromOffsetPairs(t?t.getEndExclusives():O.zero,i?i.getStarts():O.max),d=r.intersect(h);l.length>0&&d.getStarts().equals(l[l.length-1].getEndExclusives())?l[l.length-1]=l[l.length-1].join(d):l.push(d)}),l}(u,l,c),{mappings:c.map(function(e){return new k(u.translateRange(e.seq1Range),l.translateRange(e.seq2Range))}),hitTimeout:h.hitTimeout}},e}();function he(e,t,n){var i=(new le).computeDiff(e,t,n);return null===i||void 0===i?void 0:i.changes.map(function(e){var t=e.innerChanges;return{origStart:e.original.startLineNumber-1,origEnd:e.original.endLineNumberExclusive-1,editStart:e.modified.startLineNumber-1,editEnd:e.modified.endLineNumberExclusive-1,charChanges:null===t||void 0===t?void 0:t.map(function(e){return{originalStartLineNumber:e.originalRange.startLineNumber-1,originalStartColumn:e.originalRange.startColumn-1,originalEndLineNumber:e.originalRange.endLineNumber-1,originalEndColumn:e.originalRange.endColumn-1,modifiedStartLineNumber:e.modifiedRange.startLineNumber-1,modifiedStartColumn:e.modifiedRange.startColumn-1,modifiedEndLineNumber:e.modifiedRange.endLineNumber-1,modifiedEndColumn:e.modifiedRange.endColumn-1}})}})}t.computeDiff=he;var de=e(\"../../../range\").Range,ce=e(\"../base_diff_view\").DiffChunk,fe=function(){function e(){}return e.prototype.compute=function(e,t,n){return n||(n={}),n.maxComputationTimeMs||(n.maxComputationTimeMs=500),(he(e,t,n)||[]).map(function(e){return new ce(new de(e.origStart,0,e.origEnd,0),new de(e.editStart,0,e.editEnd,0),e.charChanges)})},e}();t.DiffProvider=fe}),ace.define(\"ace/ext/diff\",[\"require\",\"exports\",\"module\",\"ace/ext/diff/inline_diff_view\",\"ace/ext/diff/split_diff_view\",\"ace/ext/diff/providers/default\"],function(e,t,n){var i=e(\"./diff/inline_diff_view\").InlineDiffView,r=e(\"./diff/split_diff_view\").SplitDiffView,o=e(\"./diff/providers/default\").DiffProvider;t.InlineDiffView=i,t.SplitDiffView=r,t.DiffProvider=o,t.createDiffView=function(e,t){var n;return(e=e||{}).diffProvider=e.diffProvider||new o,n=e.inline?new i(e):new r(e),t&&n.setOptions(t),n}}),ace.require([\"ace/ext/diff\"],function(e){\"object\"==typeof module&&\"object\"==typeof exports&&module&&(module.exports=e)});","name":"f8a58b73ecbf585f7d6696c7c132715e.js","input":"ace.define(\"ace/ext/diff/scroll_diff_decorator\", [\"require\", \"exports\", \"module\", \"ace/layer/decorators\"], function (require, exports, module) {\n  var __extends = this && this.__extends || function () {\n    var extendStatics = function (d, b) {\n      extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      };\n      return extendStatics(d, b);\n    };\n    return function (d, b) {\n      if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n      extendStatics(d, b);\n      function __() {\n        this.constructor = d;\n      }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n  var __values = this && this.__values || function (o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n      next: function () {\n        if (o && i >= o.length) o = void 0;\n        return {\n          value: o && o[i++],\n          done: !o\n        };\n      }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n  };\n  var Decorator = require(\"../../layer/decorators\").Decorator;\n  var ScrollDiffDecorator = /** @class */function (_super) {\n    __extends(ScrollDiffDecorator, _super);\n    function ScrollDiffDecorator(scrollbarV, renderer, forInlineDiff) {\n      var _this = _super.call(this, scrollbarV, renderer) || this;\n      _this.colors.dark[\"delete\"] = \"rgba(255, 18, 18, 1)\";\n      _this.colors.dark[\"insert\"] = \"rgba(18, 136, 18, 1)\";\n      _this.colors.light[\"delete\"] = \"rgb(255,51,51)\";\n      _this.colors.light[\"insert\"] = \"rgb(32,133,72)\";\n      _this.$zones = [];\n      _this.$forInlineDiff = forInlineDiff;\n      return _this;\n    }\n    ScrollDiffDecorator.prototype.addZone = function (startRow, endRow, type) {\n      this.$zones.push({\n        startRow: startRow,\n        endRow: endRow,\n        type: type\n      });\n    };\n    ScrollDiffDecorator.prototype.setSessions = function (sessionA, sessionB) {\n      this.sessionA = sessionA;\n      this.sessionB = sessionB;\n    };\n    ScrollDiffDecorator.prototype.$updateDecorators = function (config) {\n      if (typeof this.canvas.getContext !== \"function\") {\n        return;\n      }\n      _super.prototype.$updateDecorators.call(this, config);\n      if (this.$zones.length > 0) {\n        var colors = this.renderer.theme.isDark === true ? this.colors.dark : this.colors.light;\n        var ctx = this.canvas.getContext(\"2d\");\n        this.$setDiffDecorators(ctx, colors);\n      }\n    };\n    ScrollDiffDecorator.prototype.$transformPosition = function (row, type) {\n      if (type == \"delete\") {\n        return this.sessionA.documentToScreenRow(row, 0);\n      } else {\n        return this.sessionB.documentToScreenRow(row, 0);\n      }\n    };\n    ScrollDiffDecorator.prototype.$setDiffDecorators = function (ctx, colors) {\n      var e_1, _a;\n      var _this = this;\n      function compare(a, b) {\n        if (a.from === b.from) {\n          return a.to - b.to;\n        }\n        return a.from - b.from;\n      }\n      var zones = this.$zones;\n      if (zones) {\n        var resolvedZones = [];\n        var deleteZones = zones.filter(function (z) {\n          return z.type === \"delete\";\n        });\n        var insertZones = zones.filter(function (z) {\n          return z.type === \"insert\";\n        });\n        [deleteZones, insertZones].forEach(function (typeZones) {\n          typeZones.forEach(function (zone, i) {\n            var offset1 = _this.$transformPosition(zone.startRow, zone.type) * _this.lineHeight;\n            var offset2 = _this.$transformPosition(zone.endRow, zone.type) * _this.lineHeight + _this.lineHeight;\n            var y1 = Math.round(_this.heightRatio * offset1);\n            var y2 = Math.round(_this.heightRatio * offset2);\n            var padding = 1;\n            var ycenter = Math.round((y1 + y2) / 2);\n            var halfHeight = y2 - ycenter;\n            if (halfHeight < _this.halfMinDecorationHeight) {\n              halfHeight = _this.halfMinDecorationHeight;\n            }\n            var previousZone = resolvedZones[resolvedZones.length - 1];\n            if (i > 0 && previousZone && previousZone.type === zone.type && ycenter - halfHeight < previousZone.to + padding) {\n              ycenter = resolvedZones[resolvedZones.length - 1].to + padding + halfHeight;\n            }\n            if (ycenter - halfHeight < 0) {\n              ycenter = halfHeight;\n            }\n            if (ycenter + halfHeight > _this.canvasHeight) {\n              ycenter = _this.canvasHeight - halfHeight;\n            }\n            resolvedZones.push({\n              type: zone.type,\n              from: ycenter - halfHeight,\n              to: ycenter + halfHeight,\n              color: colors[zone.type] || null\n            });\n          });\n        });\n        resolvedZones = resolvedZones.sort(compare);\n        try {\n          for (var resolvedZones_1 = __values(resolvedZones), resolvedZones_1_1 = resolvedZones_1.next(); !resolvedZones_1_1.done; resolvedZones_1_1 = resolvedZones_1.next()) {\n            var zone = resolvedZones_1_1.value;\n            ctx.fillStyle = zone.color || null;\n            var zoneFrom = zone.from;\n            var zoneTo = zone.to;\n            var zoneHeight = zoneTo - zoneFrom;\n            if (this.$forInlineDiff) {\n              ctx.fillRect(this.oneZoneWidth, zoneFrom, 2 * this.oneZoneWidth, zoneHeight);\n            } else {\n              if (zone.type == \"delete\") {\n                ctx.fillRect(this.oneZoneWidth, zoneFrom, this.oneZoneWidth, zoneHeight);\n              } else {\n                ctx.fillRect(2 * this.oneZoneWidth, zoneFrom, this.oneZoneWidth, zoneHeight);\n              }\n            }\n          }\n        } catch (e_1_1) {\n          e_1 = {\n            error: e_1_1\n          };\n        } finally {\n          try {\n            if (resolvedZones_1_1 && !resolvedZones_1_1.done && (_a = resolvedZones_1.return)) _a.call(resolvedZones_1);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n        }\n      }\n    };\n    ScrollDiffDecorator.prototype.setZoneWidth = function () {\n      this.oneZoneWidth = Math.round(this.canvasWidth / 3);\n    };\n    return ScrollDiffDecorator;\n  }(Decorator);\n  exports.ScrollDiffDecorator = ScrollDiffDecorator;\n});\nace.define(\"ace/ext/diff/styles-css.js\", [\"require\", \"exports\", \"module\"], function (require, exports, module) {\n  exports.cssText = \"\\n/*\\n * Line Markers\\n */\\n.ace_diff {\\n    position: absolute;\\n    z-index: 0;\\n}\\n.ace_diff.inline {\\n    z-index: 20;\\n}\\n/*\\n * Light Colors \\n */\\n.ace_diff.insert {\\n    background-color: #EFFFF1;\\n}\\n.ace_diff.delete {\\n    background-color: #FFF1F1;\\n}\\n.ace_diff.aligned_diff {\\n    background: rgba(206, 194, 191, 0.26);\\n    background: repeating-linear-gradient(\\n                45deg,\\n              rgba(122, 111, 108, 0.26),\\n              rgba(122, 111, 108, 0.26) 5px,\\n              rgba(0, 0, 0, 0) 5px,\\n              rgba(0, 0, 0, 0) 10px \\n    );\\n}\\n\\n.ace_diff.insert.inline {\\n    background-color:  rgb(74 251 74 / 18%); \\n}\\n.ace_diff.delete.inline {\\n    background-color: rgb(251 74 74 / 15%);\\n}\\n\\n.ace_diff.delete.inline.empty {\\n    background-color: rgba(255, 128, 79, 0.7);\\n    width: 2px !important;\\n}\\n\\n.ace_diff.insert.inline.empty {\\n    background-color: rgba(49, 230, 96, 0.7);\\n    width: 2px !important;\\n}\\n\\n.ace_diff-active-line {\\n    border-bottom: 1px solid;\\n    border-top: 1px solid;\\n    background: transparent;\\n    position: absolute;\\n    box-sizing: border-box;\\n    border-color: #9191ac;\\n}\\n\\n.ace_dark .ace_diff-active-line {\\n    background: transparent;\\n    border-color: #75777a;\\n}\\n \\n\\n/* gutter changes */\\n.ace_mini-diff_gutter-enabled > .ace_gutter-cell,\\n.ace_mini-diff_gutter-enabled > .ace_gutter-cell_svg-icons {\\n    padding-right: 13px;\\n}\\n\\n.ace_mini-diff_gutter_other > .ace_gutter-cell,\\n.ace_mini-diff_gutter_other > .ace_gutter-cell_svg-icons  {\\n    display: none;\\n}\\n\\n.ace_mini-diff_gutter_other {\\n    pointer-events: none;\\n}\\n\\n\\n.ace_mini-diff_gutter-enabled > .mini-diff-added {\\n    background-color: #EFFFF1;\\n    border-left: 3px solid #2BB534;\\n    padding-left: 16px;\\n    display: block;\\n}\\n\\n.ace_mini-diff_gutter-enabled > .mini-diff-deleted {\\n    background-color: #FFF1F1;\\n    border-left: 3px solid #EA7158;\\n    padding-left: 16px;\\n    display: block;\\n}\\n\\n\\n.ace_mini-diff_gutter-enabled > .mini-diff-added:after {\\n    position: absolute;\\n    right: 2px;\\n    content: \\\"+\\\";\\n    color: darkgray;\\n    background-color: inherit;\\n}\\n\\n.ace_mini-diff_gutter-enabled > .mini-diff-deleted:after {\\n    position: absolute;\\n    right: 2px;\\n    content: \\\"-\\\";\\n    color: darkgray;\\n    background-color: inherit;\\n}\\n.ace_fade-fold-widgets:hover > .ace_folding-enabled > .mini-diff-added:after,\\n.ace_fade-fold-widgets:hover > .ace_folding-enabled > .mini-diff-deleted:after {\\n    display: none;\\n}\\n\\n.ace_diff_other .ace_selection {\\n    filter: drop-shadow(1px 2px 3px darkgray);\\n}\\n\\n.ace_hidden_marker-layer .ace_bracket {\\n    display: none;\\n}\\n\\n\\n\\n/*\\n * Dark Colors \\n */\\n\\n.ace_dark .ace_diff.insert {\\n    background-color: #212E25;\\n}\\n.ace_dark .ace_diff.delete {\\n    background-color: #3F2222;\\n}\\n\\n.ace_dark .ace_mini-diff_gutter-enabled > .mini-diff-added {\\n    background-color: #212E25;\\n    border-left-color:#00802F;\\n}\\n\\n.ace_dark .ace_mini-diff_gutter-enabled > .mini-diff-deleted {\\n    background-color: #3F2222;\\n    border-left-color: #9C3838;\\n}\\n\\n\";\n});\nace.define(\"ace/ext/diff/gutter_decorator\", [\"require\", \"exports\", \"module\", \"ace/lib/dom\"], function (require, exports, module) {\n  var dom = require(\"../../lib/dom\");\n  var MinimalGutterDiffDecorator = /** @class */function () {\n    function MinimalGutterDiffDecorator(editor, type) {\n      this.gutterClass = \"ace_mini-diff_gutter-enabled\";\n      this.gutterCellsClasses = {\n        add: \"mini-diff-added\",\n        delete: \"mini-diff-deleted\"\n      };\n      this.editor = editor;\n      this.type = type;\n      this.chunks = [];\n      this.attachToEditor();\n    }\n    MinimalGutterDiffDecorator.prototype.attachToEditor = function () {\n      this.renderGutters = this.renderGutters.bind(this);\n      dom.addCssClass(this.editor.renderer.$gutterLayer.element, this.gutterClass);\n      this.editor.renderer.$gutterLayer.on(\"afterRender\", this.renderGutters);\n    };\n    MinimalGutterDiffDecorator.prototype.renderGutters = function (e, gutterLayer) {\n      var _this = this;\n      var cells = this.editor.renderer.$gutterLayer.$lines.cells;\n      cells.forEach(function (cell) {\n        cell.element.classList.remove(Object.values(_this.gutterCellsClasses));\n      });\n      var dir = this.type === -1 ? \"old\" : \"new\";\n      var diffClass = this.type === -1 ? this.gutterCellsClasses.delete : this.gutterCellsClasses.add;\n      this.chunks.forEach(function (lineChange) {\n        var startRow = lineChange[dir].start.row;\n        var endRow = lineChange[dir].end.row - 1;\n        cells.forEach(function (cell) {\n          if (cell.row >= startRow && cell.row <= endRow) {\n            cell.element.classList.add(diffClass);\n          }\n        });\n      });\n    };\n    MinimalGutterDiffDecorator.prototype.setDecorations = function (changes) {\n      this.chunks = changes;\n      this.renderGutters();\n    };\n    MinimalGutterDiffDecorator.prototype.dispose = function () {\n      dom.removeCssClass(this.editor.renderer.$gutterLayer.element, this.gutterClass);\n      this.editor.renderer.$gutterLayer.off(\"afterRender\", this.renderGutters);\n    };\n    return MinimalGutterDiffDecorator;\n  }();\n  exports.MinimalGutterDiffDecorator = MinimalGutterDiffDecorator;\n});\nace.define(\"ace/ext/diff/base_diff_view\", [\"require\", \"exports\", \"module\", \"ace/lib/oop\", \"ace/range\", \"ace/lib/dom\", \"ace/config\", \"ace/line_widgets\", \"ace/ext/diff/scroll_diff_decorator\", \"ace/ext/diff/styles-css.js\", \"ace/editor\", \"ace/virtual_renderer\", \"ace/undomanager\", \"ace/layer/decorators\", \"ace/theme/textmate\", \"ace/multi_select\", \"ace/edit_session\", \"ace/ext/diff/gutter_decorator\"], function (require, exports, module) {\n  \"use strict\";\n\n  var __read = this && this.__read || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o),\n      r,\n      ar = [],\n      e;\n    try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    } catch (error) {\n      e = {\n        error: error\n      };\n    } finally {\n      try {\n        if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      } finally {\n        if (e) throw e.error;\n      }\n    }\n    return ar;\n  };\n  var oop = require(\"../../lib/oop\");\n  var Range = require(\"../../range\").Range;\n  var dom = require(\"../../lib/dom\");\n  var config = require(\"../../config\");\n  var LineWidgets = require(\"../../line_widgets\").LineWidgets;\n  var ScrollDiffDecorator = require(\"./scroll_diff_decorator\").ScrollDiffDecorator;\n  var css = require(\"./styles-css.js\").cssText;\n  var Editor = require(\"../../editor\").Editor;\n  var Renderer = require(\"../../virtual_renderer\").VirtualRenderer;\n  var UndoManager = require(\"../../undomanager\").UndoManager;\n  var Decorator = require(\"../../layer/decorators\").Decorator;\n  require(\"../../theme/textmate\");\n  require(\"../../multi_select\");\n  var EditSession = require(\"../../edit_session\").EditSession;\n  var MinimalGutterDiffDecorator = require(\"./gutter_decorator\").MinimalGutterDiffDecorator;\n  var dummyDiffProvider = {\n    compute: function (val1, val2, options) {\n      return [];\n    }\n  };\n  var BaseDiffView = /** @class */function () {\n    function BaseDiffView(inlineDiffEditor, container) {\n      this.onChangeTheme = this.onChangeTheme.bind(this);\n      this.onInput = this.onInput.bind(this);\n      this.onChangeFold = this.onChangeFold.bind(this);\n      this.realign = this.realign.bind(this);\n      this.onSelect = this.onSelect.bind(this);\n      this.onChangeWrapLimit = this.onChangeWrapLimit.bind(this);\n      this.realignPending = false;\n      this.diffSession;\n      this.chunks;\n      this.inlineDiffEditor = inlineDiffEditor || false;\n      this.currentDiffIndex = 0;\n      this.diffProvider = dummyDiffProvider;\n      if (container) {\n        this.container = container;\n      }\n      dom.importCssString(css, \"diffview.css\");\n      this.$ignoreTrimWhitespace = false;\n      this.$maxDiffs = 5000;\n      this.$maxComputationTimeMs = 150;\n      this.$syncSelections = false;\n      this.$foldUnchangedOnInput = false;\n      this.markerB = new DiffHighlight(this, 1);\n      this.markerA = new DiffHighlight(this, -1);\n    }\n    BaseDiffView.prototype.$setupModels = function (diffModel) {\n      if (diffModel.diffProvider) {\n        this.setProvider(diffModel.diffProvider);\n      }\n      this.showSideA = diffModel.inline == undefined ? true : diffModel.inline === \"a\";\n      var diffEditorOptions = /**@type {Partial<import(\"../../../ace-internal\").Ace.EditorOptions>}*/{\n        scrollPastEnd: 0.5,\n        highlightActiveLine: false,\n        highlightGutterLine: false,\n        animatedScroll: true,\n        customScrollbar: true,\n        vScrollBarAlwaysVisible: true,\n        fadeFoldWidgets: true,\n        showFoldWidgets: true,\n        selectionStyle: \"text\"\n      };\n      this.savedOptionsA = diffModel.editorA && diffModel.editorA.getOptions(diffEditorOptions);\n      this.savedOptionsB = diffModel.editorB && diffModel.editorB.getOptions(diffEditorOptions);\n      if (!this.inlineDiffEditor || diffModel.inline === \"a\") {\n        this.editorA = diffModel.editorA || this.$setupModel(diffModel.sessionA, diffModel.valueA);\n        this.container && this.container.appendChild(this.editorA.container);\n        this.editorA.setOptions(diffEditorOptions);\n      }\n      if (!this.inlineDiffEditor || diffModel.inline === \"b\") {\n        this.editorB = diffModel.editorB || this.$setupModel(diffModel.sessionB, diffModel.valueB);\n        this.container && this.container.appendChild(this.editorB.container);\n        this.editorB.setOptions(diffEditorOptions);\n      }\n      if (this.inlineDiffEditor) {\n        this.activeEditor = this.showSideA ? this.editorA : this.editorB;\n        this.otherSession = this.showSideA ? this.sessionB : this.sessionA;\n        var cloneOptions = this.activeEditor.getOptions();\n        cloneOptions.readOnly = true;\n        delete cloneOptions.mode;\n        this.otherEditor = new Editor(new Renderer(null), undefined, cloneOptions);\n        if (this.showSideA) {\n          this.editorB = this.otherEditor;\n        } else {\n          this.editorA = this.otherEditor;\n        }\n      }\n      this.setDiffSession({\n        sessionA: diffModel.sessionA || (diffModel.editorA ? diffModel.editorA.session : new EditSession(diffModel.valueA || \"\")),\n        sessionB: diffModel.sessionB || (diffModel.editorB ? diffModel.editorB.session : new EditSession(diffModel.valueB || \"\")),\n        chunks: []\n      });\n      this.setupScrollbars();\n    };\n    BaseDiffView.prototype.addGutterDecorators = function () {\n      if (!this.gutterDecoratorA) this.gutterDecoratorA = new MinimalGutterDiffDecorator(this.editorA, -1);\n      if (!this.gutterDecoratorB) this.gutterDecoratorB = new MinimalGutterDiffDecorator(this.editorB, 1);\n    };\n    BaseDiffView.prototype.$setupModel = function (session, value) {\n      var editor = new Editor(new Renderer(), session);\n      editor.session.setUndoManager(new UndoManager());\n      if (value != undefined) {\n        editor.setValue(value, -1);\n      }\n      return editor;\n    };\n    BaseDiffView.prototype.foldUnchanged = function () {\n      var chunks = this.chunks;\n      var placeholder = \"-\".repeat(120);\n      var prev = {\n        old: new Range(0, 0, 0, 0),\n        new: new Range(0, 0, 0, 0)\n      };\n      var foldsChanged = false;\n      for (var i = 0; i < chunks.length + 1; i++) {\n        var current = chunks[i] || {\n          old: new Range(this.sessionA.getLength(), 0, this.sessionA.getLength(), 0),\n          new: new Range(this.sessionB.getLength(), 0, this.sessionB.getLength(), 0)\n        };\n        var l = current.new.start.row - prev.new.end.row - 5;\n        if (l > 2) {\n          var s = prev.old.end.row + 2;\n          var fold1 = this.sessionA.addFold(placeholder, new Range(s, 0, s + l, Number.MAX_VALUE));\n          s = prev.new.end.row + 2;\n          var fold2 = this.sessionB.addFold(placeholder, new Range(s, 0, s + l, Number.MAX_VALUE));\n          if (fold1 || fold2) foldsChanged = true;\n          if (fold2 && fold1) {\n            fold1[\"other\"] = fold2;\n            fold2[\"other\"] = fold1;\n          }\n        }\n        prev = current;\n      }\n      return foldsChanged;\n    };\n    BaseDiffView.prototype.unfoldUnchanged = function () {\n      var folds = this.sessionA.getAllFolds();\n      for (var i = folds.length - 1; i >= 0; i--) {\n        var fold = folds[i];\n        if (fold.placeholder.length == 120) {\n          this.sessionA.removeFold(fold);\n        }\n      }\n    };\n    BaseDiffView.prototype.toggleFoldUnchanged = function () {\n      if (!this.foldUnchanged()) {\n        this.unfoldUnchanged();\n      }\n    };\n    BaseDiffView.prototype.setDiffSession = function (session) {\n      if (this.diffSession) {\n        this.$detachSessionsEventHandlers();\n        this.clearSelectionMarkers();\n      }\n      this.diffSession = session;\n      this.sessionA = this.sessionB = null;\n      if (this.diffSession) {\n        this.chunks = this.diffSession.chunks || [];\n        this.editorA && this.editorA.setSession(session.sessionA);\n        this.editorB && this.editorB.setSession(session.sessionB);\n        this.sessionA = this.diffSession.sessionA;\n        this.sessionB = this.diffSession.sessionB;\n        this.$attachSessionsEventHandlers();\n        this.initSelectionMarkers();\n      }\n      this.otherSession = this.showSideA ? this.sessionB : this.sessionA;\n    };\n    BaseDiffView.prototype.$attachSessionsEventHandlers = function () {};\n    BaseDiffView.prototype.$detachSessionsEventHandlers = function () {};\n    BaseDiffView.prototype.getDiffSession = function () {\n      return this.diffSession;\n    };\n    BaseDiffView.prototype.setTheme = function (theme) {\n      this.editorA && this.editorA.setTheme(theme);\n      this.editorB && this.editorB.setTheme(theme);\n    };\n    BaseDiffView.prototype.getTheme = function () {\n      return (this.editorA || this.editorB).getTheme();\n    };\n    BaseDiffView.prototype.onChangeTheme = function (e) {\n      var theme = e && e.theme || this.getTheme();\n      if (this.editorA && this.editorA.getTheme() !== theme) {\n        this.editorA.setTheme(theme);\n      }\n      if (this.editorB && this.editorB.getTheme() !== theme) {\n        this.editorB.setTheme(theme);\n      }\n    };\n    BaseDiffView.prototype.resize = function (force) {\n      this.editorA && this.editorA.resize(force);\n      this.editorB && this.editorB.resize(force);\n    };\n    BaseDiffView.prototype.scheduleOnInput = function () {\n      var _this = this;\n      if (this.$onInputTimer) return;\n      this.$onInputTimer = setTimeout(function () {\n        _this.$onInputTimer = null;\n        _this.onInput();\n      });\n    };\n    BaseDiffView.prototype.onInput = function () {\n      var _this = this;\n      if (this.$onInputTimer) clearTimeout(this.$onInputTimer);\n      var val1 = this.sessionA.doc.getAllLines();\n      var val2 = this.sessionB.doc.getAllLines();\n      this.selectionRangeA = null;\n      this.selectionRangeB = null;\n      var chunks = this.$diffLines(val1, val2);\n      this.diffSession.chunks = this.chunks = chunks;\n      this.gutterDecoratorA && this.gutterDecoratorA.setDecorations(chunks);\n      this.gutterDecoratorB && this.gutterDecoratorB.setDecorations(chunks);\n      if (this.chunks && this.chunks.length > this.$maxDiffs) {\n        return;\n      }\n      this.align();\n      this.editorA && this.editorA.renderer.updateBackMarkers();\n      this.editorB && this.editorB.renderer.updateBackMarkers();\n      setTimeout(function () {\n        _this.updateScrollBarDecorators();\n      }, 0);\n      if (this.$foldUnchangedOnInput) {\n        this.foldUnchanged();\n      }\n    };\n    BaseDiffView.prototype.setupScrollbars = function () {\n      var _this = this;\n      var setupScrollBar = function (renderer) {\n        setTimeout(function () {\n          _this.$setScrollBarDecorators(renderer);\n          _this.updateScrollBarDecorators();\n        }, 0);\n      };\n      if (this.inlineDiffEditor) {\n        setupScrollBar(this.activeEditor.renderer);\n      } else {\n        setupScrollBar(this.editorA.renderer);\n        setupScrollBar(this.editorB.renderer);\n      }\n    };\n    BaseDiffView.prototype.$setScrollBarDecorators = function (renderer) {\n      if (renderer.$scrollDecorator) {\n        renderer.$scrollDecorator.destroy();\n      }\n      renderer.$scrollDecorator = new ScrollDiffDecorator(renderer.scrollBarV, renderer, this.inlineDiffEditor);\n      renderer.$scrollDecorator.setSessions(this.sessionA, this.sessionB);\n      renderer.scrollBarV.setVisible(true);\n      renderer.scrollBarV.element.style.bottom = renderer.scrollBarH.getHeight() + \"px\";\n    };\n    BaseDiffView.prototype.$resetDecorators = function (renderer) {\n      if (renderer.$scrollDecorator) {\n        renderer.$scrollDecorator.destroy();\n      }\n      renderer.$scrollDecorator = new Decorator(renderer.scrollBarV, renderer);\n    };\n    BaseDiffView.prototype.updateScrollBarDecorators = function () {\n      var _this = this;\n      if (this.inlineDiffEditor) {\n        if (!this.activeEditor) {\n          return;\n        }\n        this.activeEditor.renderer.$scrollDecorator.$zones = [];\n      } else {\n        if (!this.editorA || !this.editorB) {\n          return;\n        }\n        this.editorA.renderer.$scrollDecorator.$zones = [];\n        this.editorB.renderer.$scrollDecorator.$zones = [];\n      }\n      var updateDecorators = function (editor, change) {\n        if (!editor) {\n          return;\n        }\n        if (typeof editor.renderer.$scrollDecorator.addZone !== \"function\") {\n          return;\n        }\n        if (change.old.start.row != change.old.end.row) {\n          editor.renderer.$scrollDecorator.addZone(change.old.start.row, change.old.end.row - 1, \"delete\");\n        }\n        if (change.new.start.row != change.new.end.row) {\n          editor.renderer.$scrollDecorator.addZone(change.new.start.row, change.new.end.row - 1, \"insert\");\n        }\n      };\n      if (this.inlineDiffEditor) {\n        this.chunks && this.chunks.forEach(function (lineChange) {\n          updateDecorators(_this.activeEditor, lineChange);\n        });\n        this.activeEditor.renderer.$scrollDecorator.$updateDecorators(this.activeEditor.renderer.layerConfig);\n      } else {\n        this.chunks && this.chunks.forEach(function (lineChange) {\n          updateDecorators(_this.editorA, lineChange);\n          updateDecorators(_this.editorB, lineChange);\n        });\n        this.editorA.renderer.$scrollDecorator.$updateDecorators(this.editorA.renderer.layerConfig);\n        this.editorB.renderer.$scrollDecorator.$updateDecorators(this.editorB.renderer.layerConfig);\n      }\n    };\n    BaseDiffView.prototype.$diffLines = function (val1, val2) {\n      return this.diffProvider.compute(val1, val2, {\n        ignoreTrimWhitespace: this.$ignoreTrimWhitespace,\n        maxComputationTimeMs: this.$maxComputationTimeMs\n      });\n    };\n    BaseDiffView.prototype.setProvider = function (provider) {\n      this.diffProvider = provider;\n    };\n    BaseDiffView.prototype.$addWidget = function (session, w) {\n      var lineWidget = session.lineWidgets[w.row];\n      if (lineWidget) {\n        w.rowsAbove += lineWidget.rowsAbove > w.rowsAbove ? lineWidget.rowsAbove : w.rowsAbove;\n        w.rowCount += lineWidget.rowCount;\n      }\n      session.lineWidgets[w.row] = w;\n      session.widgetManager.lineWidgets[w.row] = w;\n      session.$resetRowCache(w.row);\n      var fold = session.getFoldAt(w.row, 0);\n      if (fold) {\n        session.widgetManager.updateOnFold({\n          data: fold,\n          action: \"add\"\n        }, session);\n      }\n    };\n    BaseDiffView.prototype.$initWidgets = function (editor) {\n      var session = editor.session;\n      if (!session.widgetManager) {\n        session.widgetManager = new LineWidgets(session);\n        session.widgetManager.attach(editor);\n      }\n      editor.session.lineWidgets = [];\n      editor.session.widgetManager.lineWidgets = [];\n      editor.session.$resetRowCache(0);\n    };\n    BaseDiffView.prototype.$screenRow = function (pos, session) {\n      var row = session.documentToScreenPosition(pos).row;\n      var afterEnd = pos.row - session.getLength() + 1;\n      if (afterEnd > 0) {\n        row += afterEnd;\n      }\n      return row;\n    };\n    BaseDiffView.prototype.align = function () {};\n    BaseDiffView.prototype.onChangeWrapLimit = function (e, session) {};\n    BaseDiffView.prototype.onSelect = function (e, selection) {\n      this.searchHighlight(selection);\n      this.syncSelect(selection);\n    };\n    BaseDiffView.prototype.syncSelect = function (selection) {\n      if (this.$updatingSelection) return;\n      var isOld = selection.session === this.sessionA;\n      var selectionRange = selection.getRange();\n      var currSelectionRange = isOld ? this.selectionRangeA : this.selectionRangeB;\n      if (currSelectionRange && selectionRange.isEqual(currSelectionRange)) return;\n      if (isOld) {\n        this.selectionRangeA = selectionRange;\n      } else {\n        this.selectionRangeB = selectionRange;\n      }\n      this.$updatingSelection = true;\n      var newRange = this.transformRange(selectionRange, isOld);\n      if (this.$syncSelections) {\n        (isOld ? this.editorB : this.editorA).session.selection.setSelectionRange(newRange);\n      }\n      this.$updatingSelection = false;\n      if (isOld) {\n        this.selectionRangeA = selectionRange;\n        this.selectionRangeB = newRange;\n      } else {\n        this.selectionRangeA = newRange;\n        this.selectionRangeB = selectionRange;\n      }\n      this.updateSelectionMarker(this.syncSelectionMarkerA, this.sessionA, this.selectionRangeA);\n      this.updateSelectionMarker(this.syncSelectionMarkerB, this.sessionB, this.selectionRangeB);\n    };\n    BaseDiffView.prototype.updateSelectionMarker = function (marker, session, range) {\n      marker.setRange(range);\n      session._signal(\"changeFrontMarker\");\n    };\n    BaseDiffView.prototype.onChangeFold = function (ev, session) {\n      var fold = ev.data;\n      if (this.$syncingFold || !fold || !ev.action) return;\n      this.scheduleRealign();\n      var isOrig = session === this.sessionA;\n      var other = isOrig ? this.sessionB : this.sessionA;\n      if (ev.action === \"remove\") {\n        if (fold.other) {\n          fold.other.other = null;\n          other.removeFold(fold.other);\n        } else if (fold.lineWidget) {\n          other.widgetManager.addLineWidget(fold.lineWidget);\n          fold.lineWidget = null;\n          if (other[\"$editor\"]) {\n            other[\"$editor\"].renderer.updateBackMarkers();\n          }\n        }\n      }\n      if (ev.action === \"add\") {\n        var range = this.transformRange(fold.range, isOrig);\n        if (range.isEmpty()) {\n          var row = range.start.row + 1;\n          if (other.lineWidgets[row]) {\n            fold.lineWidget = other.lineWidgets[row];\n            other.widgetManager.removeLineWidget(fold.lineWidget);\n            if (other[\"$editor\"]) {\n              other[\"$editor\"].renderer.updateBackMarkers();\n            }\n          }\n        } else {\n          this.$syncingFold = true;\n          fold.other = other.addFold(fold.placeholder, range);\n          if (fold.other) {\n            fold.other.other = fold;\n          }\n          this.$syncingFold = false;\n        }\n      }\n    };\n    BaseDiffView.prototype.scheduleRealign = function () {\n      if (!this.realignPending) {\n        this.realignPending = true;\n        this.editorA.renderer.on(\"beforeRender\", this.realign);\n        this.editorB.renderer.on(\"beforeRender\", this.realign);\n      }\n    };\n    BaseDiffView.prototype.realign = function () {\n      this.realignPending = true;\n      this.editorA.renderer.off(\"beforeRender\", this.realign);\n      this.editorB.renderer.off(\"beforeRender\", this.realign);\n      this.align();\n      this.realignPending = false;\n    };\n    BaseDiffView.prototype.detach = function () {\n      if (!this.editorA || !this.editorB) return;\n      if (this.savedOptionsA) this.editorA.setOptions(this.savedOptionsA);\n      if (this.savedOptionsB) this.editorB.setOptions(this.savedOptionsB);\n      this.editorA.renderer.off(\"beforeRender\", this.realign);\n      this.editorB.renderer.off(\"beforeRender\", this.realign);\n      this.$detachEventHandlers();\n      this.$removeLineWidgets(this.sessionA);\n      this.$removeLineWidgets(this.sessionB);\n      this.gutterDecoratorA && this.gutterDecoratorA.dispose();\n      this.gutterDecoratorB && this.gutterDecoratorB.dispose();\n      this.sessionA.selection.clearSelection();\n      this.sessionB.selection.clearSelection();\n      if (this.savedOptionsA && this.savedOptionsA.customScrollbar) {\n        this.$resetDecorators(this.editorA.renderer);\n      }\n      if (this.savedOptionsB && this.savedOptionsB.customScrollbar) {\n        this.$resetDecorators(this.editorB.renderer);\n      }\n    };\n    BaseDiffView.prototype.$removeLineWidgets = function (session) {\n      session.lineWidgets = [];\n      session.widgetManager.lineWidgets = [];\n      session._signal(\"changeFold\", {\n        data: {\n          start: {\n            row: 0\n          }\n        }\n      });\n    };\n    BaseDiffView.prototype.$detachEventHandlers = function () {};\n    BaseDiffView.prototype.destroy = function () {\n      this.detach();\n      this.editorA && this.editorA.destroy();\n      this.editorB && this.editorB.destroy();\n      this.editorA = this.editorB = null;\n    };\n    BaseDiffView.prototype.gotoNext = function (dir) {\n      var ace = this.activeEditor || this.editorA;\n      if (this.inlineDiffEditor) {\n        ace = this.editorA;\n      }\n      var sideA = ace == this.editorA;\n      var row = ace.selection.lead.row;\n      var i = this.findChunkIndex(this.chunks, row, sideA);\n      var chunk = this.chunks[i + dir] || this.chunks[i];\n      var scrollTop = ace.session.getScrollTop();\n      if (chunk) {\n        var range = chunk[sideA ? \"old\" : \"new\"];\n        var line = Math.max(range.start.row, range.end.row - 1);\n        ace.selection.setRange(new Range(line, 0, line, 0));\n      }\n      ace.renderer.scrollSelectionIntoView(ace.selection.lead, ace.selection.anchor, 0.5);\n      ace.renderer.animateScrolling(scrollTop);\n    };\n    BaseDiffView.prototype.firstDiffSelected = function () {\n      return this.currentDiffIndex <= 1;\n    };\n    BaseDiffView.prototype.lastDiffSelected = function () {\n      return this.currentDiffIndex > this.chunks.length - 1;\n    };\n    BaseDiffView.prototype.transformRange = function (range, isOriginal) {\n      return Range.fromPoints(this.transformPosition(range.start, isOriginal), this.transformPosition(range.end, isOriginal));\n    };\n    BaseDiffView.prototype.transformPosition = function (pos, isOriginal) {\n      var chunkIndex = this.findChunkIndex(this.chunks, pos.row, isOriginal);\n      var chunk = this.chunks[chunkIndex];\n      var clonePos = this.sessionB.doc.clonePos;\n      var result = clonePos(pos);\n      var _a = __read(isOriginal ? [\"old\", \"new\"] : [\"new\", \"old\"], 2),\n        from = _a[0],\n        to = _a[1];\n      var deltaChar = 0;\n      var ignoreIndent = false;\n      if (chunk) {\n        if (chunk[from].end.row <= pos.row) {\n          result.row -= chunk[from].end.row - chunk[to].end.row;\n        } else if (chunk.charChanges) {\n          for (var i = 0; i < chunk.charChanges.length; i++) {\n            var change = chunk.charChanges[i];\n            var fromRange = change[from];\n            var toRange = change[to];\n            if (fromRange.end.row < pos.row) continue;\n            if (fromRange.start.row > pos.row) break;\n            if (fromRange.isMultiLine() && fromRange.contains(pos.row, pos.column)) {\n              result.row = toRange.start.row + pos.row - fromRange.start.row;\n              var maxRow = toRange.end.row;\n              if (toRange.end.column === 0) maxRow--;\n              if (result.row > maxRow) {\n                result.row = maxRow;\n                result.column = (isOriginal ? this.sessionB : this.sessionA).getLine(maxRow).length;\n                ignoreIndent = true;\n              }\n              result.row = Math.min(result.row, maxRow);\n            } else {\n              result.row = toRange.start.row;\n              if (fromRange.start.column > pos.column) break;\n              ignoreIndent = true;\n              if (!fromRange.isEmpty() && fromRange.contains(pos.row, pos.column)) {\n                result.column = toRange.start.column;\n                deltaChar = pos.column - fromRange.start.column;\n                deltaChar = Math.min(deltaChar, toRange.end.column - toRange.start.column);\n              } else {\n                result = clonePos(toRange.end);\n                deltaChar = pos.column - fromRange.end.column;\n              }\n            }\n          }\n        } else if (chunk[from].start.row <= pos.row) {\n          result.row += chunk[to].start.row - chunk[from].start.row;\n          if (result.row >= chunk[to].end.row) {\n            result.row = chunk[to].end.row - 1;\n            result.column = (isOriginal ? this.sessionB : this.sessionA).getLine(result.row).length;\n          }\n        }\n      }\n      if (!ignoreIndent) {\n        //TODO:\n        var _b = __read(isOriginal ? [this.sessionA, this.sessionB] : [this.sessionB, this.sessionA], 2),\n          fromEditSession = _b[0],\n          toEditSession = _b[1];\n        deltaChar -= this.$getDeltaIndent(fromEditSession, toEditSession, pos.row, result.row);\n      }\n      result.column += deltaChar;\n      return result;\n    };\n    BaseDiffView.prototype.$getDeltaIndent = function (fromEditSession, toEditSession, fromLine, toLine) {\n      var origIndent = this.$getIndent(fromEditSession, fromLine);\n      var editIndent = this.$getIndent(toEditSession, toLine);\n      return origIndent - editIndent;\n    };\n    BaseDiffView.prototype.$getIndent = function (editSession, line) {\n      return editSession.getLine(line).match(/^\\s*/)[0].length;\n    };\n    BaseDiffView.prototype.printDiffs = function () {\n      this.chunks.forEach(function (diff) {\n        console.log(diff.toString());\n      });\n    };\n    BaseDiffView.prototype.findChunkIndex = function (chunks, row, isOriginal) {\n      for (var i = 0; i < chunks.length; i++) {\n        var ch = chunks[i];\n        var chunk = isOriginal ? ch.old : ch.new;\n        if (chunk.end.row < row) continue;\n        if (chunk.start.row > row) break;\n      }\n      this.currentDiffIndex = i;\n      return i - 1;\n    };\n    BaseDiffView.prototype.searchHighlight = function (selection) {\n      if (this.$syncSelections || this.inlineDiffEditor) {\n        return;\n      }\n      var currSession = selection.session;\n      var otherSession = currSession === this.sessionA ? this.sessionB : this.sessionA;\n      otherSession.highlight(currSession.$searchHighlight.regExp);\n      otherSession._signal(\"changeBackMarker\");\n    };\n    BaseDiffView.prototype.initSelectionMarkers = function () {\n      this.syncSelectionMarkerA = new SyncSelectionMarker();\n      this.syncSelectionMarkerB = new SyncSelectionMarker();\n      this.sessionA.addDynamicMarker(this.syncSelectionMarkerA, true);\n      this.sessionB.addDynamicMarker(this.syncSelectionMarkerB, true);\n    };\n    BaseDiffView.prototype.clearSelectionMarkers = function () {\n      this.sessionA.removeMarker(this.syncSelectionMarkerA.id);\n      this.sessionB.removeMarker(this.syncSelectionMarkerB.id);\n    };\n    return BaseDiffView;\n  }();\n  config.defineOptions(BaseDiffView.prototype, \"DiffView\", {\n    showOtherLineNumbers: {\n      set: function (value) {\n        if (this.gutterLayer) {\n          this.gutterLayer.$renderer = value ? null : emptyGutterRenderer;\n          this.editorA.renderer.updateFull();\n        }\n      },\n      initialValue: true\n    },\n    folding: {\n      set: function (value) {\n        this.editorA.setOption(\"showFoldWidgets\", value);\n        this.editorB.setOption(\"showFoldWidgets\", value);\n        if (!value) {\n          var posA = [];\n          var posB = [];\n          if (this.chunks) {\n            this.chunks.forEach(function (x) {\n              posA.push(x.old.start, x.old.end);\n              posB.push(x.new.start, x.new.end);\n            });\n          }\n          this.sessionA.unfold(posA);\n          this.sessionB.unfold(posB);\n        }\n      }\n    },\n    syncSelections: {\n      set: function (value) {}\n    },\n    ignoreTrimWhitespace: {\n      set: function (value) {\n        this.scheduleOnInput();\n      }\n    },\n    wrap: {\n      set: function (value) {\n        this.sessionA.setOption(\"wrap\", value);\n        this.sessionB.setOption(\"wrap\", value);\n      }\n    },\n    maxDiffs: {\n      value: 5000\n    },\n    theme: {\n      set: function (value) {\n        this.setTheme(value);\n      },\n      get: function () {\n        return this.editorA.getTheme();\n      }\n    }\n  });\n  var emptyGutterRenderer = {\n    getText: function name(params) {\n      return \"\";\n    },\n    getWidth: function () {\n      return 0;\n    }\n  };\n  exports.BaseDiffView = BaseDiffView;\n  var DiffChunk = /** @class */function () {\n    function DiffChunk(originalRange, modifiedRange, charChanges) {\n      this.old = originalRange;\n      this.new = modifiedRange;\n      this.charChanges = charChanges && charChanges.map(function (m) {\n        return new DiffChunk(new Range(m.originalStartLineNumber, m.originalStartColumn, m.originalEndLineNumber, m.originalEndColumn), new Range(m.modifiedStartLineNumber, m.modifiedStartColumn, m.modifiedEndLineNumber, m.modifiedEndColumn));\n      });\n    }\n    return DiffChunk;\n  }();\n  var DiffHighlight = /** @class */function () {\n    function DiffHighlight(diffView, type) {\n      this.id;\n      this.diffView = diffView;\n      this.type = type;\n    }\n    DiffHighlight.prototype.update = function (html, markerLayer, session, config) {\n      var dir, operation, opOperation;\n      var diffView = this.diffView;\n      if (this.type === -1) {\n        // original editor\n        dir = \"old\";\n        operation = \"delete\";\n        opOperation = \"insert\";\n      } else {\n        //modified editor\n        dir = \"new\";\n        operation = \"insert\";\n        opOperation = \"delete\";\n      }\n      var ignoreTrimWhitespace = diffView.$ignoreTrimWhitespace;\n      var lineChanges = diffView.chunks;\n      if (session.lineWidgets && !diffView.inlineDiffEditor) {\n        for (var row = config.firstRow; row <= config.lastRow; row++) {\n          var lineWidget = session.lineWidgets[row];\n          if (!lineWidget || lineWidget.hidden) continue;\n          var start = session.documentToScreenRow(row, 0);\n          if (lineWidget.rowsAbove > 0) {\n            var range = new Range(start - lineWidget.rowsAbove, 0, start - 1, Number.MAX_VALUE);\n            markerLayer.drawFullLineMarker(html, range, \"ace_diff aligned_diff\", config);\n          }\n          var end = start + lineWidget.rowCount - (lineWidget.rowsAbove || 0);\n          var range = new Range(start + 1, 0, end, Number.MAX_VALUE);\n          markerLayer.drawFullLineMarker(html, range, \"ace_diff aligned_diff\", config);\n        }\n      }\n      lineChanges.forEach(function (lineChange) {\n        var startRow = lineChange[dir].start.row;\n        var endRow = lineChange[dir].end.row;\n        if (endRow < config.firstRow || startRow > config.lastRow) return;\n        var range = new Range(startRow, 0, endRow - 1, 1 << 30);\n        if (startRow !== endRow) {\n          range = range.toScreenRange(session);\n          markerLayer.drawFullLineMarker(html, range, \"ace_diff \" + operation, config);\n        }\n        if (lineChange.charChanges) {\n          for (var i = 0; i < lineChange.charChanges.length; i++) {\n            var changeRange = lineChange.charChanges[i][dir];\n            if (changeRange.end.column == 0 && changeRange.end.row > changeRange.start.row && changeRange.end.row == lineChange[dir].end.row) {\n              changeRange.end.row--;\n              changeRange.end.column = Number.MAX_VALUE;\n            }\n            if (ignoreTrimWhitespace) {\n              for (var lineNumber = changeRange.start.row; lineNumber <= changeRange.end.row; lineNumber++) {\n                var startColumn = void 0;\n                var endColumn = void 0;\n                var sessionLineStart = session.getLine(lineNumber).match(/^\\s*/)[0].length;\n                var sessionLineEnd = session.getLine(lineNumber).length;\n                if (lineNumber === changeRange.start.row) {\n                  startColumn = changeRange.start.column;\n                } else {\n                  startColumn = sessionLineStart;\n                }\n                if (lineNumber === changeRange.end.row) {\n                  endColumn = changeRange.end.column;\n                } else {\n                  endColumn = sessionLineEnd;\n                }\n                var range_1 = new Range(lineNumber, startColumn, lineNumber, endColumn);\n                var screenRange = range_1.toScreenRange(session);\n                if (sessionLineStart === startColumn && sessionLineEnd === endColumn) {\n                  continue;\n                }\n                var cssClass = \"inline \" + operation;\n                if (range_1.isEmpty() && startColumn !== 0) {\n                  cssClass = \"inline \" + opOperation + \" empty\";\n                }\n                markerLayer.drawSingleLineMarker(html, screenRange, \"ace_diff \" + cssClass, config);\n              }\n            } else {\n              var range_2 = new Range(changeRange.start.row, changeRange.start.column, changeRange.end.row, changeRange.end.column);\n              var screenRange = range_2.toScreenRange(session);\n              var cssClass = \"inline \" + operation;\n              if (range_2.isEmpty() && changeRange.start.column !== 0) {\n                cssClass = \"inline empty \" + opOperation;\n              }\n              if (screenRange.isMultiLine()) {\n                markerLayer.drawTextMarker(html, screenRange, \"ace_diff \" + cssClass, config);\n              } else {\n                markerLayer.drawSingleLineMarker(html, screenRange, \"ace_diff \" + cssClass, config);\n              }\n            }\n          }\n        }\n      });\n    };\n    return DiffHighlight;\n  }();\n  var SyncSelectionMarker = /** @class */function () {\n    function SyncSelectionMarker() {\n      this.id;\n      this.type = \"fullLine\";\n      this.clazz = \"ace_diff-active-line\";\n    }\n    SyncSelectionMarker.prototype.update = function (html, markerLayer, session, config) {};\n    SyncSelectionMarker.prototype.setRange = function (range) {\n      var newRange = range.clone();\n      newRange.end.column++;\n      this.range = newRange;\n    };\n    return SyncSelectionMarker;\n  }();\n  exports.DiffChunk = DiffChunk;\n  exports.DiffHighlight = DiffHighlight;\n});\nace.define(\"ace/ext/diff/inline_diff_view\", [\"require\", \"exports\", \"module\", \"ace/ext/diff/base_diff_view\", \"ace/virtual_renderer\", \"ace/config\"], function (require, exports, module) {\n  \"use strict\";\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = function (d, b) {\n      extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      };\n      return extendStatics(d, b);\n    };\n    return function (d, b) {\n      if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n      extendStatics(d, b);\n      function __() {\n        this.constructor = d;\n      }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n  var BaseDiffView = require(\"./base_diff_view\").BaseDiffView;\n  var Renderer = require(\"../../virtual_renderer\").VirtualRenderer;\n  var config = require(\"../../config\");\n  var InlineDiffView = /** @class */function (_super) {\n    __extends(InlineDiffView, _super);\n    function InlineDiffView(diffModel, container) {\n      var _this = this;\n      diffModel = diffModel || {};\n      diffModel.inline = diffModel.inline || \"a\";\n      _this = _super.call(this, true, container) || this;\n      _this.init(diffModel);\n      return _this;\n    }\n    InlineDiffView.prototype.init = function (diffModel) {\n      this.onSelect = this.onSelect.bind(this);\n      this.onAfterRender = this.onAfterRender.bind(this);\n      this.$setupModels(diffModel);\n      this.onChangeTheme();\n      config.resetOptions(this);\n      config[\"_signal\"](\"diffView\", this);\n      var padding = this.activeEditor.renderer.$padding;\n      this.addGutterDecorators();\n      this.otherEditor.renderer.setPadding(padding);\n      this.textLayer = this.otherEditor.renderer.$textLayer;\n      this.markerLayer = this.otherEditor.renderer.$markerBack;\n      this.gutterLayer = this.otherEditor.renderer.$gutterLayer;\n      this.cursorLayer = this.otherEditor.renderer.$cursorLayer;\n      this.otherEditor.renderer.$updateCachedSize = function () {};\n      var textLayerElement = this.activeEditor.renderer.$textLayer.element;\n      textLayerElement.parentNode.insertBefore(this.textLayer.element, textLayerElement);\n      var markerLayerElement = this.activeEditor.renderer.$markerBack.element;\n      markerLayerElement.parentNode.insertBefore(this.markerLayer.element, markerLayerElement.nextSibling);\n      var gutterLayerElement = this.activeEditor.renderer.$gutterLayer.element;\n      gutterLayerElement.parentNode.insertBefore(this.gutterLayer.element, gutterLayerElement.nextSibling);\n      gutterLayerElement.style.position = \"absolute\";\n      this.gutterLayer.element.style.position = \"absolute\";\n      this.gutterLayer.element.style.width = \"100%\";\n      this.gutterLayer.element.classList.add(\"ace_mini-diff_gutter_other\");\n      this.gutterLayer.$updateGutterWidth = function () {};\n      this.initMouse();\n      this.initTextInput();\n      this.initTextLayer();\n      this.initRenderer();\n      this.$attachEventHandlers();\n      this.selectEditor(this.activeEditor);\n    };\n    InlineDiffView.prototype.initRenderer = function (restore) {\n      var _this = this;\n      if (restore) {\n        delete this.activeEditor.renderer.$getLongestLine;\n      } else {\n        this.editorA.renderer.$getLongestLine = this.editorB.renderer.$getLongestLine = function () {\n          var getLongestLine = Renderer.prototype.$getLongestLine;\n          return Math.max(getLongestLine.call(_this.editorA.renderer), getLongestLine.call(_this.editorB.renderer));\n        };\n      }\n    };\n    InlineDiffView.prototype.initTextLayer = function () {\n      var renderLine = this.textLayer.$renderLine;\n      var diffView = this;\n      this.otherEditor.renderer.$textLayer.$renderLine = function (parent, row, foldLIne) {\n        if (isVisibleRow(diffView.chunks, row)) {\n          renderLine.call(this, parent, row, foldLIne);\n        }\n      };\n      var side = this.showSideA ? \"new\" : \"old\";\n      function isVisibleRow(chunks, row) {\n        var min = 0;\n        var max = chunks.length - 1;\n        var result = -1;\n        while (min < max) {\n          var mid = Math.floor((min + max) / 2);\n          var chunkStart = chunks[mid][side].start.row;\n          if (chunkStart < row) {\n            result = mid;\n            min = mid + 1;\n          } else if (chunkStart > row) {\n            max = mid - 1;\n          } else {\n            result = mid;\n            break;\n          }\n        }\n        if (chunks[result + 1] && chunks[result + 1][side].start.row <= row) {\n          result++;\n        }\n        var range = chunks[result] && chunks[result][side];\n        if (range && range.end.row > row) {\n          return true;\n        }\n        return false;\n      }\n    };\n    InlineDiffView.prototype.initTextInput = function (restore) {\n      if (restore) {\n        this.otherEditor.textInput = this.othertextInput;\n        this.otherEditor.container = this.otherEditorContainer;\n      } else {\n        this.othertextInput = this.otherEditor.textInput;\n        this.otherEditor.textInput = this.activeEditor.textInput;\n        this.otherEditorContainer = this.otherEditor.container;\n        this.otherEditor.container = this.activeEditor.container;\n      }\n    };\n    InlineDiffView.prototype.selectEditor = function (editor) {\n      if (editor == this.activeEditor) {\n        this.otherEditor.selection.clearSelection();\n        this.activeEditor.textInput.setHost(this.activeEditor);\n        this.activeEditor.setStyle(\"ace_diff_other\", false);\n        this.cursorLayer.element.remove();\n        this.activeEditor.renderer.$cursorLayer.element.style.display = \"block\";\n        if (this.showSideA) {\n          this.sessionA.removeMarker(this.syncSelectionMarkerA.id);\n          this.sessionA.addDynamicMarker(this.syncSelectionMarkerA, true);\n        }\n        this.markerLayer.element.classList.add(\"ace_hidden_marker-layer\");\n        this.activeEditor.renderer.$markerBack.element.classList.remove(\"ace_hidden_marker-layer\");\n        this.removeBracketHighlight(this.otherEditor);\n      } else {\n        this.activeEditor.selection.clearSelection();\n        this.activeEditor.textInput.setHost(this.otherEditor);\n        this.activeEditor.setStyle(\"ace_diff_other\");\n        this.activeEditor.renderer.$cursorLayer.element.parentNode.appendChild(this.cursorLayer.element);\n        this.activeEditor.renderer.$cursorLayer.element.style.display = \"none\";\n        if (this.activeEditor.$isFocused) {\n          this.otherEditor.onFocus();\n        }\n        if (this.showSideA) {\n          this.sessionA.removeMarker(this.syncSelectionMarkerA.id);\n        }\n        this.markerLayer.element.classList.remove(\"ace_hidden_marker-layer\");\n        this.activeEditor.renderer.$markerBack.element.classList.add(\"ace_hidden_marker-layer\");\n        this.removeBracketHighlight(this.activeEditor);\n      }\n    };\n    InlineDiffView.prototype.removeBracketHighlight = function (editor) {\n      var session = editor.session;\n      if (session.$bracketHighlight) {\n        session.$bracketHighlight.markerIds.forEach(function (id) {\n          session.removeMarker(id);\n        });\n        session.$bracketHighlight = null;\n      }\n    };\n    InlineDiffView.prototype.initMouse = function () {\n      var _this = this;\n      this.otherEditor.renderer.$loop = this.activeEditor.renderer.$loop;\n      this.otherEditor.renderer.scroller = {\n        getBoundingClientRect: function () {\n          return _this.activeEditor.renderer.scroller.getBoundingClientRect();\n        },\n        style: this.activeEditor.renderer.scroller.style\n      };\n      var forwardEvent = function (ev) {\n        if (!ev.domEvent) return;\n        var screenPos = ev.editor.renderer.pixelToScreenCoordinates(ev.clientX, ev.clientY);\n        var sessionA = _this.activeEditor.session;\n        var sessionB = _this.otherEditor.session;\n        var posA = sessionA.screenToDocumentPosition(screenPos.row, screenPos.column, screenPos.offsetX);\n        var posB = sessionB.screenToDocumentPosition(screenPos.row, screenPos.column, screenPos.offsetX);\n        var posAx = sessionA.documentToScreenPosition(posA);\n        var posBx = sessionB.documentToScreenPosition(posB);\n        if (ev.editor == _this.activeEditor) {\n          if (posBx.row == screenPos.row && posAx.row != screenPos.row) {\n            if (ev.type == \"mousedown\") {\n              _this.selectEditor(_this.otherEditor);\n            }\n            ev.propagationStopped = true;\n            ev.defaultPrevented = true;\n            _this.otherEditor.$mouseHandler.onMouseEvent(ev.type, ev.domEvent);\n          } else if (ev.type == \"mousedown\") {\n            _this.selectEditor(_this.activeEditor);\n          }\n        }\n      };\n      var events = [\"mousedown\", \"click\", \"mouseup\", \"dblclick\", \"tripleclick\", \"quadclick\"];\n      events.forEach(function (event) {\n        _this.activeEditor.on(event, forwardEvent, true);\n        _this.activeEditor.on(\"gutter\" + event, forwardEvent, true);\n      });\n      var onFocus = function (e) {\n        _this.activeEditor.onFocus(e);\n      };\n      var onBlur = function (e) {\n        _this.activeEditor.onBlur(e);\n      };\n      this.otherEditor.on(\"focus\", onFocus);\n      this.otherEditor.on(\"blur\", onBlur);\n      this.onMouseDetach = function () {\n        events.forEach(function (event) {\n          _this.activeEditor.off(event, forwardEvent, true);\n          _this.activeEditor.off(\"gutter\" + event, forwardEvent, true);\n        });\n        _this.otherEditor.off(\"focus\", onFocus);\n        _this.otherEditor.off(\"blur\", onBlur);\n      };\n    };\n    InlineDiffView.prototype.align = function () {\n      var diffView = this;\n      this.$initWidgets(diffView.editorA);\n      this.$initWidgets(diffView.editorB);\n      diffView.chunks.forEach(function (ch) {\n        var diff1 = diffView.$screenRow(ch.old.end, diffView.sessionA) - diffView.$screenRow(ch.old.start, diffView.sessionA);\n        var diff2 = diffView.$screenRow(ch.new.end, diffView.sessionB) - diffView.$screenRow(ch.new.start, diffView.sessionB);\n        diffView.$addWidget(diffView.sessionA, {\n          rowCount: diff2,\n          rowsAbove: ch.old.end.row === 0 ? diff2 : 0,\n          row: ch.old.end.row === 0 ? 0 : ch.old.end.row - 1\n        });\n        diffView.$addWidget(diffView.sessionB, {\n          rowCount: diff1,\n          rowsAbove: diff1,\n          row: ch.new.start.row\n        });\n      });\n      diffView.sessionA[\"_emit\"](\"changeFold\", {\n        data: {\n          start: {\n            row: 0\n          }\n        }\n      });\n      diffView.sessionB[\"_emit\"](\"changeFold\", {\n        data: {\n          start: {\n            row: 0\n          }\n        }\n      });\n    };\n    InlineDiffView.prototype.onChangeWrapLimit = function () {\n      this.sessionB.adjustWrapLimit(this.sessionA.$wrapLimit);\n      this.scheduleRealign();\n    };\n    InlineDiffView.prototype.$attachSessionsEventHandlers = function () {\n      this.$attachSessionEventHandlers(this.editorA, this.markerA);\n      this.$attachSessionEventHandlers(this.editorB, this.markerB);\n      this.sessionA.on(\"changeWrapLimit\", this.onChangeWrapLimit);\n      this.sessionA.on(\"changeWrapMode\", this.onChangeWrapLimit);\n    };\n    InlineDiffView.prototype.$attachSessionEventHandlers = function (editor, marker) {\n      editor.session.on(\"changeFold\", this.onChangeFold);\n      editor.session.addDynamicMarker(marker);\n      editor.selection.on(\"changeCursor\", this.onSelect);\n      editor.selection.on(\"changeSelection\", this.onSelect);\n    };\n    InlineDiffView.prototype.$detachSessionsEventHandlers = function () {\n      this.$detachSessionHandlers(this.editorA, this.markerA);\n      this.$detachSessionHandlers(this.editorB, this.markerB);\n      this.otherSession.bgTokenizer.lines.fill(undefined);\n      this.sessionA.off(\"changeWrapLimit\", this.onChangeWrapLimit);\n      this.sessionA.off(\"changeWrapMode\", this.onChangeWrapLimit);\n    };\n    InlineDiffView.prototype.$detachSessionHandlers = function (editor, marker) {\n      editor.session.removeMarker(marker.id);\n      editor.selection.off(\"changeCursor\", this.onSelect);\n      editor.selection.off(\"changeSelection\", this.onSelect);\n      editor.session.off(\"changeFold\", this.onChangeFold);\n    };\n    InlineDiffView.prototype.$attachEventHandlers = function () {\n      this.activeEditor.on(\"input\", this.onInput);\n      this.activeEditor.renderer.on(\"afterRender\", this.onAfterRender);\n      this.otherSession.on(\"change\", this.onInput);\n    };\n    InlineDiffView.prototype.$detachEventHandlers = function () {\n      this.$detachSessionsEventHandlers();\n      this.activeEditor.off(\"input\", this.onInput);\n      this.activeEditor.renderer.off(\"afterRender\", this.onAfterRender);\n      this.otherSession.off(\"change\", this.onInput);\n      this.textLayer.element.textContent = \"\";\n      this.textLayer.element.remove();\n      this.gutterLayer.element.textContent = \"\";\n      this.gutterLayer.element.remove();\n      this.markerLayer.element.textContent = \"\";\n      this.markerLayer.element.remove();\n      this.onMouseDetach();\n      this.selectEditor(this.activeEditor);\n      this.clearSelectionMarkers();\n      this.otherEditor.setSession(null);\n      this.otherEditor.renderer.$loop = null;\n      this.initTextInput(true);\n      this.initRenderer(true);\n      this.otherEditor.destroy();\n    };\n    InlineDiffView.prototype.onAfterRender = function (changes, renderer) {\n      var config = renderer.layerConfig;\n      var session = this.otherSession;\n      var cloneRenderer = this.otherEditor.renderer;\n      session.$scrollTop = renderer.scrollTop;\n      session.$scrollLeft = renderer.scrollLeft;\n      [\"characterWidth\", \"lineHeight\", \"scrollTop\", \"scrollLeft\", \"scrollMargin\", \"$padding\", \"$size\", \"layerConfig\", \"$horizScroll\", \"$vScroll\"].forEach(function (prop) {\n        cloneRenderer[prop] = renderer[prop];\n      });\n      cloneRenderer.$computeLayerConfig();\n      var newConfig = cloneRenderer.layerConfig;\n      this.gutterLayer.update(newConfig);\n      newConfig.firstRowScreen = config.firstRowScreen;\n      cloneRenderer.$cursorLayer.config = newConfig;\n      cloneRenderer.$cursorLayer.update(newConfig);\n      if (changes & cloneRenderer.CHANGE_LINES || changes & cloneRenderer.CHANGE_FULL || changes & cloneRenderer.CHANGE_SCROLL || changes & cloneRenderer.CHANGE_TEXT) this.textLayer.update(newConfig);\n      this.markerLayer.setMarkers(this.otherSession.getMarkers());\n      this.markerLayer.update(newConfig);\n    };\n    InlineDiffView.prototype.detach = function () {\n      _super.prototype.detach.call(this);\n      this.otherEditor && this.otherEditor.destroy();\n    };\n    return InlineDiffView;\n  }(BaseDiffView);\n  exports.InlineDiffView = InlineDiffView;\n});\nace.define(\"ace/ext/diff/split_diff_view\", [\"require\", \"exports\", \"module\", \"ace/ext/diff/base_diff_view\", \"ace/config\"], function (require, exports, module) {\n  \"use strict\";\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = function (d, b) {\n      extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      };\n      return extendStatics(d, b);\n    };\n    return function (d, b) {\n      if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n      extendStatics(d, b);\n      function __() {\n        this.constructor = d;\n      }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n  var BaseDiffView = require(\"./base_diff_view\").BaseDiffView;\n  var config = require(\"../../config\");\n  var SplitDiffView = /** @class */function (_super) {\n    __extends(SplitDiffView, _super);\n    function SplitDiffView(diffModel) {\n      var _this = this;\n      diffModel = diffModel || {};\n      _this = _super.call(this) || this;\n      _this.init(diffModel);\n      return _this;\n    }\n    SplitDiffView.prototype.init = function (diffModel) {\n      this.onChangeTheme = this.onChangeTheme.bind(this);\n      this.onMouseWheel = this.onMouseWheel.bind(this);\n      this.onScroll = this.onScroll.bind(this);\n      this.$setupModels(diffModel);\n      this.addGutterDecorators();\n      this.onChangeTheme();\n      config.resetOptions(this);\n      config[\"_signal\"](\"diffView\", this);\n      this.$attachEventHandlers();\n    };\n    SplitDiffView.prototype.onChangeWrapLimit = function () {\n      this.scheduleRealign();\n    };\n    SplitDiffView.prototype.align = function () {\n      var diffView = this;\n      this.$initWidgets(diffView.editorA);\n      this.$initWidgets(diffView.editorB);\n      diffView.chunks.forEach(function (ch) {\n        var diff1 = diffView.$screenRow(ch.old.start, diffView.sessionA);\n        var diff2 = diffView.$screenRow(ch.new.start, diffView.sessionB);\n        if (diff1 < diff2) {\n          diffView.$addWidget(diffView.sessionA, {\n            rowCount: diff2 - diff1,\n            rowsAbove: ch.old.start.row === 0 ? diff2 - diff1 : 0,\n            row: ch.old.start.row === 0 ? 0 : ch.old.start.row - 1\n          });\n        } else if (diff1 > diff2) {\n          diffView.$addWidget(diffView.sessionB, {\n            rowCount: diff1 - diff2,\n            rowsAbove: ch.new.start.row === 0 ? diff1 - diff2 : 0,\n            row: ch.new.start.row === 0 ? 0 : ch.new.start.row - 1\n          });\n        }\n        var diff1 = diffView.$screenRow(ch.old.end, diffView.sessionA);\n        var diff2 = diffView.$screenRow(ch.new.end, diffView.sessionB);\n        if (diff1 < diff2) {\n          diffView.$addWidget(diffView.sessionA, {\n            rowCount: diff2 - diff1,\n            rowsAbove: ch.old.end.row === 0 ? diff2 - diff1 : 0,\n            row: ch.old.end.row === 0 ? 0 : ch.old.end.row - 1\n          });\n        } else if (diff1 > diff2) {\n          diffView.$addWidget(diffView.sessionB, {\n            rowCount: diff1 - diff2,\n            rowsAbove: ch.new.end.row === 0 ? diff1 - diff2 : 0,\n            row: ch.new.end.row === 0 ? 0 : ch.new.end.row - 1\n          });\n        }\n      });\n      diffView.sessionA[\"_emit\"](\"changeFold\", {\n        data: {\n          start: {\n            row: 0\n          }\n        }\n      });\n      diffView.sessionB[\"_emit\"](\"changeFold\", {\n        data: {\n          start: {\n            row: 0\n          }\n        }\n      });\n    };\n    SplitDiffView.prototype.onScroll = function (e, session) {\n      this.syncScroll(this.sessionA === session ? this.editorA.renderer : this.editorB.renderer);\n    };\n    SplitDiffView.prototype.syncScroll = function (renderer) {\n      if (this.$syncScroll == false) return;\n      var r1 = this.editorA.renderer;\n      var r2 = this.editorB.renderer;\n      var isOrig = renderer == r1;\n      if (r1[\"$scrollAnimation\"] && r2[\"$scrollAnimation\"]) return;\n      var now = Date.now();\n      if (this.scrollSetBy != renderer && now - this.scrollSetAt < 500) return;\n      var r = isOrig ? r1 : r2;\n      if (this.scrollSetBy != renderer) {\n        if (isOrig && this.scrollA == r.session.getScrollTop()) return;else if (!isOrig && this.scrollB == r.session.getScrollTop()) return;\n      }\n      var rOther = isOrig ? r2 : r1;\n      var targetPos = r.session.getScrollTop();\n      this.$syncScroll = false;\n      if (isOrig) {\n        this.scrollA = r.session.getScrollTop();\n        this.scrollB = targetPos;\n      } else {\n        this.scrollA = targetPos;\n        this.scrollB = r.session.getScrollTop();\n      }\n      this.scrollSetBy = renderer;\n      rOther.session.setScrollTop(targetPos);\n      this.$syncScroll = true;\n      this.scrollSetAt = now;\n    };\n    SplitDiffView.prototype.onMouseWheel = function (ev) {\n      if (ev.getAccelKey()) return;\n      if (ev.getShiftKey() && ev.wheelY && !ev.wheelX) {\n        ev.wheelX = ev.wheelY;\n        ev.wheelY = 0;\n      }\n      var editor = ev.editor;\n      var isScrolable = editor.renderer.isScrollableBy(ev.wheelX * ev.speed, ev.wheelY * ev.speed);\n      if (!isScrolable) {\n        var other = editor == this.editorA ? this.editorB : this.editorA;\n        if (other.renderer.isScrollableBy(ev.wheelX * ev.speed, ev.wheelY * ev.speed)) other.renderer.scrollBy(ev.wheelX * ev.speed, ev.wheelY * ev.speed);\n        return ev.stop();\n      }\n    };\n    SplitDiffView.prototype.$attachSessionsEventHandlers = function () {\n      this.$attachSessionEventHandlers(this.editorA, this.markerA);\n      this.$attachSessionEventHandlers(this.editorB, this.markerB);\n    };\n    SplitDiffView.prototype.$attachSessionEventHandlers = function (editor, marker) {\n      editor.session.on(\"changeScrollTop\", this.onScroll);\n      editor.session.on(\"changeFold\", this.onChangeFold);\n      editor.session.addDynamicMarker(marker);\n      editor.selection.on(\"changeCursor\", this.onSelect);\n      editor.selection.on(\"changeSelection\", this.onSelect);\n      editor.session.on(\"changeWrapLimit\", this.onChangeWrapLimit);\n      editor.session.on(\"changeWrapMode\", this.onChangeWrapLimit);\n    };\n    SplitDiffView.prototype.$detachSessionsEventHandlers = function () {\n      this.$detachSessionHandlers(this.editorA, this.markerA);\n      this.$detachSessionHandlers(this.editorB, this.markerB);\n    };\n    SplitDiffView.prototype.$detachSessionHandlers = function (editor, marker) {\n      editor.session.off(\"changeScrollTop\", this.onScroll);\n      editor.session.off(\"changeFold\", this.onChangeFold);\n      editor.session.removeMarker(marker.id);\n      editor.selection.off(\"changeCursor\", this.onSelect);\n      editor.selection.off(\"changeSelection\", this.onSelect);\n      editor.session.off(\"changeWrapLimit\", this.onChangeWrapLimit);\n      editor.session.off(\"changeWrapMode\", this.onChangeWrapLimit);\n    };\n    SplitDiffView.prototype.$attachEventHandlers = function () {\n      this.editorA.renderer.on(\"themeChange\", this.onChangeTheme);\n      this.editorB.renderer.on(\"themeChange\", this.onChangeTheme);\n      this.editorA.on(\"mousewheel\", this.onMouseWheel);\n      this.editorB.on(\"mousewheel\", this.onMouseWheel);\n      this.editorA.on(\"input\", this.onInput);\n      this.editorB.on(\"input\", this.onInput);\n    };\n    SplitDiffView.prototype.$detachEventHandlers = function () {\n      this.$detachSessionsEventHandlers();\n      this.clearSelectionMarkers();\n      this.editorA.renderer.off(\"themeChange\", this.onChangeTheme);\n      this.editorB.renderer.off(\"themeChange\", this.onChangeTheme);\n      this.$detachEditorEventHandlers(this.editorA);\n      this.$detachEditorEventHandlers(this.editorB);\n    };\n    SplitDiffView.prototype.$detachEditorEventHandlers = function (editor) {\n      editor.off(\"mousewheel\", this.onMouseWheel);\n      editor.off(\"input\", this.onInput);\n    };\n    return SplitDiffView;\n  }(BaseDiffView);\n  exports.SplitDiffView = SplitDiffView;\n});\nace.define(\"ace/ext/diff/providers/default\", [\"require\", \"exports\", \"module\", \"ace/range\", \"ace/ext/diff/base_diff_view\"], function (require, exports, module) {\n  'use strict';\n\n  var __extends = this && this.__extends || function () {\n    var extendStatics = function (d, b) {\n      extendStatics = Object.setPrototypeOf || {\n        __proto__: []\n      } instanceof Array && function (d, b) {\n        d.__proto__ = b;\n      } || function (d, b) {\n        for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      };\n      return extendStatics(d, b);\n    };\n    return function (d, b) {\n      if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n      extendStatics(d, b);\n      function __() {\n        this.constructor = d;\n      }\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n  var __generator = this && this.__generator || function (thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function () {\n          if (t[0] & 1) throw t[1];\n          return t[1];\n        },\n        trys: [],\n        ops: []\n      },\n      f,\n      y,\n      t,\n      g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n      return this;\n    }), g;\n    function verb(n) {\n      return function (v) {\n        return step([n, v]);\n      };\n    }\n    function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n          case 7:\n            op = _.ops.pop();\n            _.trys.pop();\n            continue;\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n              _.ops.push(op);\n              break;\n            }\n            if (t[2]) _.ops.pop();\n            _.trys.pop();\n            continue;\n        }\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n      if (op[0] & 5) throw op[1];\n      return {\n        value: op[0] ? op[1] : void 0,\n        done: true\n      };\n    }\n  };\n  var __values = this && this.__values || function (o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n      next: function () {\n        if (o && i >= o.length) o = void 0;\n        return {\n          value: o && o[i++],\n          done: !o\n        };\n      }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n  };\n  var _a;\n  var _b, _c, _d, _e, _f;\n  function equals(one, other, itemEquals) {\n    if (itemEquals === void 0) {\n      itemEquals = function (a, b) {\n        return a === b;\n      };\n    }\n    if (one === other) {\n      return true;\n    }\n    if (!one || !other) {\n      return false;\n    }\n    if (one.length !== other.length) {\n      return false;\n    }\n    for (var i = 0, len = one.length; i < len; i++) {\n      if (!itemEquals(one[i], other[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function groupAdjacentBy(items, shouldBeGrouped) {\n    var currentGroup, last, items_1, items_1_1, item, e_1_1;\n    var e_1, _a;\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _g.trys.push([0, 8, 9, 10]);\n          items_1 = __values(items), items_1_1 = items_1.next();\n          _g.label = 1;\n        case 1:\n          if (!!items_1_1.done) return [3 /*break*/, 7];\n          item = items_1_1.value;\n          if (!(last !== undefined && shouldBeGrouped(last, item))) return [3 /*break*/, 2];\n          currentGroup.push(item);\n          return [3 /*break*/, 5];\n        case 2:\n          if (!currentGroup) return [3 /*break*/, 4];\n          return [4 /*yield*/, currentGroup];\n        case 3:\n          _g.sent();\n          _g.label = 4;\n        case 4:\n          currentGroup = [item];\n          _g.label = 5;\n        case 5:\n          last = item;\n          _g.label = 6;\n        case 6:\n          items_1_1 = items_1.next();\n          return [3 /*break*/, 1];\n        case 7:\n          return [3 /*break*/, 10];\n        case 8:\n          e_1_1 = _g.sent();\n          e_1 = {\n            error: e_1_1\n          };\n          return [3 /*break*/, 10];\n        case 9:\n          try {\n            if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n          } finally {\n            if (e_1) throw e_1.error;\n          }\n          return [7 /*endfinally*/];\n        case 10:\n          if (!currentGroup) return [3 /*break*/, 12];\n          return [4 /*yield*/, currentGroup];\n        case 11:\n          _g.sent();\n          _g.label = 12;\n        case 12:\n          return [2 /*return*/];\n      }\n    });\n  }\n  function forEachAdjacent(arr, f) {\n    for (var i = 0; i <= arr.length; i++) {\n      f(i === 0 ? undefined : arr[i - 1], i === arr.length ? undefined : arr[i]);\n    }\n  }\n  function forEachWithNeighbors(arr, f) {\n    for (var i = 0; i < arr.length; i++) {\n      f(i === 0 ? undefined : arr[i - 1], arr[i], i + 1 === arr.length ? undefined : arr[i + 1]);\n    }\n  }\n  function pushMany(arr, items) {\n    var e_2, _a;\n    try {\n      for (var items_2 = __values(items), items_2_1 = items_2.next(); !items_2_1.done; items_2_1 = items_2.next()) {\n        var item = items_2_1.value;\n        arr.push(item);\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (items_2_1 && !items_2_1.done && (_a = items_2.return)) _a.call(items_2);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n  }\n  function compareBy(selector, comparator) {\n    return function (a, b) {\n      return comparator(selector(a), selector(b));\n    };\n  }\n  var numberComparator = function (a, b) {\n    return a - b;\n  };\n  function reverseOrder(comparator) {\n    return function (a, b) {\n      return -comparator(a, b);\n    };\n  }\n  var BugIndicatingError = /** @class */function (_super) {\n    __extends(BugIndicatingError, _super);\n    function BugIndicatingError(message) {\n      var _this = _super.call(this, message || \"An unexpected bug occurred.\") || this;\n      Object.setPrototypeOf(_this, BugIndicatingError.prototype);\n      return _this;\n    }\n    return BugIndicatingError;\n  }(Error);\n  function assert(condition, message) {\n    if (message === void 0) {\n      message = \"unexpected state\";\n    }\n    if (!condition) {\n      throw new BugIndicatingError(\"Assertion Failed: \".concat(message));\n    }\n  }\n  function assertFn(condition) {\n    condition();\n  }\n  function checkAdjacentItems(items, predicate) {\n    var i = 0;\n    while (i < items.length - 1) {\n      var a = items[i];\n      var b = items[i + 1];\n      if (!predicate(a, b)) {\n        return false;\n      }\n      i++;\n    }\n    return true;\n  }\n  var OffsetRange = /** @class */function () {\n    function OffsetRange(start, endExclusive) {\n      this.start = start;\n      this.endExclusive = endExclusive;\n      if (start > endExclusive) {\n        throw new BugIndicatingError(\"Invalid range: \".concat(this.toString()));\n      }\n    }\n    OffsetRange.fromTo = function (start, endExclusive) {\n      return new OffsetRange(start, endExclusive);\n    };\n    OffsetRange.addRange = function (range, sortedRanges) {\n      var i = 0;\n      while (i < sortedRanges.length && sortedRanges[i].endExclusive < range.start) {\n        i++;\n      }\n      var j = i;\n      while (j < sortedRanges.length && sortedRanges[j].start <= range.endExclusive) {\n        j++;\n      }\n      if (i === j) {\n        sortedRanges.splice(i, 0, range);\n      } else {\n        var start = Math.min(range.start, sortedRanges[i].start);\n        var end = Math.max(range.endExclusive, sortedRanges[j - 1].endExclusive);\n        sortedRanges.splice(i, j - i, new OffsetRange(start, end));\n      }\n    };\n    OffsetRange.tryCreate = function (start, endExclusive) {\n      if (start > endExclusive) {\n        return undefined;\n      }\n      return new OffsetRange(start, endExclusive);\n    };\n    OffsetRange.ofLength = function (length) {\n      return new OffsetRange(0, length);\n    };\n    OffsetRange.ofStartAndLength = function (start, length) {\n      return new OffsetRange(start, start + length);\n    };\n    OffsetRange.emptyAt = function (offset) {\n      return new OffsetRange(offset, offset);\n    };\n    Object.defineProperty(OffsetRange.prototype, \"isEmpty\", {\n      get: function () {\n        return this.start === this.endExclusive;\n      },\n      enumerable: false,\n      configurable: true\n    });\n    OffsetRange.prototype.delta = function (offset) {\n      return new OffsetRange(this.start + offset, this.endExclusive + offset);\n    };\n    OffsetRange.prototype.deltaStart = function (offset) {\n      return new OffsetRange(this.start + offset, this.endExclusive);\n    };\n    OffsetRange.prototype.deltaEnd = function (offset) {\n      return new OffsetRange(this.start, this.endExclusive + offset);\n    };\n    Object.defineProperty(OffsetRange.prototype, \"length\", {\n      get: function () {\n        return this.endExclusive - this.start;\n      },\n      enumerable: false,\n      configurable: true\n    });\n    OffsetRange.prototype.toString = function () {\n      return \"[\".concat(this.start, \", \").concat(this.endExclusive, \")\");\n    };\n    OffsetRange.prototype.equals = function (other) {\n      return this.start === other.start && this.endExclusive === other.endExclusive;\n    };\n    OffsetRange.prototype.containsRange = function (other) {\n      return this.start <= other.start && other.endExclusive <= this.endExclusive;\n    };\n    OffsetRange.prototype.contains = function (offset) {\n      return this.start <= offset && offset < this.endExclusive;\n    };\n    OffsetRange.prototype.join = function (other) {\n      return new OffsetRange(Math.min(this.start, other.start), Math.max(this.endExclusive, other.endExclusive));\n    };\n    OffsetRange.prototype.intersect = function (other) {\n      var start = Math.max(this.start, other.start);\n      var end = Math.min(this.endExclusive, other.endExclusive);\n      if (start <= end) {\n        return new OffsetRange(start, end);\n      }\n      return undefined;\n    };\n    OffsetRange.prototype.intersectionLength = function (range) {\n      var start = Math.max(this.start, range.start);\n      var end = Math.min(this.endExclusive, range.endExclusive);\n      return Math.max(0, end - start);\n    };\n    OffsetRange.prototype.intersects = function (other) {\n      var start = Math.max(this.start, other.start);\n      var end = Math.min(this.endExclusive, other.endExclusive);\n      return start < end;\n    };\n    OffsetRange.prototype.intersectsOrTouches = function (other) {\n      var start = Math.max(this.start, other.start);\n      var end = Math.min(this.endExclusive, other.endExclusive);\n      return start <= end;\n    };\n    OffsetRange.prototype.isBefore = function (other) {\n      return this.endExclusive <= other.start;\n    };\n    OffsetRange.prototype.isAfter = function (other) {\n      return this.start >= other.endExclusive;\n    };\n    OffsetRange.prototype.slice = function (arr) {\n      return arr.slice(this.start, this.endExclusive);\n    };\n    OffsetRange.prototype.substring = function (str) {\n      return str.substring(this.start, this.endExclusive);\n    };\n    OffsetRange.prototype.clip = function (value) {\n      if (this.isEmpty) {\n        throw new BugIndicatingError(\"Invalid clipping range: \".concat(this.toString()));\n      }\n      return Math.max(this.start, Math.min(this.endExclusive - 1, value));\n    };\n    OffsetRange.prototype.clipCyclic = function (value) {\n      if (this.isEmpty) {\n        throw new BugIndicatingError(\"Invalid clipping range: \".concat(this.toString()));\n      }\n      if (value < this.start) {\n        return this.endExclusive - (this.start - value) % this.length;\n      }\n      if (value >= this.endExclusive) {\n        return this.start + (value - this.start) % this.length;\n      }\n      return value;\n    };\n    OffsetRange.prototype.map = function (f) {\n      var result = [];\n      for (var i = this.start; i < this.endExclusive; i++) {\n        result.push(f(i));\n      }\n      return result;\n    };\n    OffsetRange.prototype.forEach = function (f) {\n      for (var i = this.start; i < this.endExclusive; i++) {\n        f(i);\n      }\n    };\n    return OffsetRange;\n  }();\n  var Position = /** @class */function () {\n    function Position(lineNumber, column) {\n      this.lineNumber = lineNumber;\n      this.column = column;\n    }\n    Position.prototype.equals = function (other) {\n      return Position.equals(this, other);\n    };\n    Position.equals = function (a, b) {\n      if (!a && !b) {\n        return true;\n      }\n      return !!a && !!b && a.lineNumber === b.lineNumber && a.column === b.column;\n    };\n    Position.prototype.isBefore = function (other) {\n      return Position.isBefore(this, other);\n    };\n    Position.isBefore = function (a, b) {\n      if (a.lineNumber < b.lineNumber) {\n        return true;\n      }\n      if (b.lineNumber < a.lineNumber) {\n        return false;\n      }\n      return a.column < b.column;\n    };\n    Position.prototype.isBeforeOrEqual = function (other) {\n      return Position.isBeforeOrEqual(this, other);\n    };\n    Position.isBeforeOrEqual = function (a, b) {\n      if (a.lineNumber < b.lineNumber) {\n        return true;\n      }\n      if (b.lineNumber < a.lineNumber) {\n        return false;\n      }\n      return a.column <= b.column;\n    };\n    return Position;\n  }();\n  var Range = /** @class */function () {\n    function Range(startLineNumber, startColumn, endLineNumber, endColumn) {\n      if (startLineNumber > endLineNumber || startLineNumber === endLineNumber && startColumn > endColumn) {\n        this.startLineNumber = endLineNumber;\n        this.startColumn = endColumn;\n        this.endLineNumber = startLineNumber;\n        this.endColumn = startColumn;\n      } else {\n        this.startLineNumber = startLineNumber;\n        this.startColumn = startColumn;\n        this.endLineNumber = endLineNumber;\n        this.endColumn = endColumn;\n      }\n    }\n    Range.prototype.isEmpty = function () {\n      return Range.isEmpty(this);\n    };\n    Range.isEmpty = function (range) {\n      return range.startLineNumber === range.endLineNumber && range.startColumn === range.endColumn;\n    };\n    Range.prototype.containsPosition = function (position) {\n      return Range.containsPosition(this, position);\n    };\n    Range.containsPosition = function (range, position) {\n      if (position.lineNumber < range.startLineNumber || position.lineNumber > range.endLineNumber) {\n        return false;\n      }\n      if (position.lineNumber === range.startLineNumber && position.column < range.startColumn) {\n        return false;\n      }\n      if (position.lineNumber === range.endLineNumber && position.column > range.endColumn) {\n        return false;\n      }\n      return true;\n    };\n    Range.prototype.containsRange = function (range) {\n      return Range.containsRange(this, range);\n    };\n    Range.containsRange = function (range, otherRange) {\n      if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n        return false;\n      }\n      if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n        return false;\n      }\n      if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn < range.startColumn) {\n        return false;\n      }\n      if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn > range.endColumn) {\n        return false;\n      }\n      return true;\n    };\n    Range.prototype.strictContainsRange = function (range) {\n      return Range.strictContainsRange(this, range);\n    };\n    Range.strictContainsRange = function (range, otherRange) {\n      if (otherRange.startLineNumber < range.startLineNumber || otherRange.endLineNumber < range.startLineNumber) {\n        return false;\n      }\n      if (otherRange.startLineNumber > range.endLineNumber || otherRange.endLineNumber > range.endLineNumber) {\n        return false;\n      }\n      if (otherRange.startLineNumber === range.startLineNumber && otherRange.startColumn <= range.startColumn) {\n        return false;\n      }\n      if (otherRange.endLineNumber === range.endLineNumber && otherRange.endColumn >= range.endColumn) {\n        return false;\n      }\n      return true;\n    };\n    Range.prototype.plusRange = function (range) {\n      return Range.plusRange(this, range);\n    };\n    Range.plusRange = function (a, b) {\n      var startLineNumber;\n      var startColumn;\n      var endLineNumber;\n      var endColumn;\n      if (b.startLineNumber < a.startLineNumber) {\n        startLineNumber = b.startLineNumber;\n        startColumn = b.startColumn;\n      } else if (b.startLineNumber === a.startLineNumber) {\n        startLineNumber = b.startLineNumber;\n        startColumn = Math.min(b.startColumn, a.startColumn);\n      } else {\n        startLineNumber = a.startLineNumber;\n        startColumn = a.startColumn;\n      }\n      if (b.endLineNumber > a.endLineNumber) {\n        endLineNumber = b.endLineNumber;\n        endColumn = b.endColumn;\n      } else if (b.endLineNumber === a.endLineNumber) {\n        endLineNumber = b.endLineNumber;\n        endColumn = Math.max(b.endColumn, a.endColumn);\n      } else {\n        endLineNumber = a.endLineNumber;\n        endColumn = a.endColumn;\n      }\n      return new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n    };\n    Range.prototype.intersectRanges = function (range) {\n      return Range.intersectRanges(this, range);\n    };\n    Range.intersectRanges = function (a, b) {\n      var resultStartLineNumber = a.startLineNumber;\n      var resultStartColumn = a.startColumn;\n      var resultEndLineNumber = a.endLineNumber;\n      var resultEndColumn = a.endColumn;\n      var otherStartLineNumber = b.startLineNumber;\n      var otherStartColumn = b.startColumn;\n      var otherEndLineNumber = b.endLineNumber;\n      var otherEndColumn = b.endColumn;\n      if (resultStartLineNumber < otherStartLineNumber) {\n        resultStartLineNumber = otherStartLineNumber;\n        resultStartColumn = otherStartColumn;\n      } else if (resultStartLineNumber === otherStartLineNumber) {\n        resultStartColumn = Math.max(resultStartColumn, otherStartColumn);\n      }\n      if (resultEndLineNumber > otherEndLineNumber) {\n        resultEndLineNumber = otherEndLineNumber;\n        resultEndColumn = otherEndColumn;\n      } else if (resultEndLineNumber === otherEndLineNumber) {\n        resultEndColumn = Math.min(resultEndColumn, otherEndColumn);\n      }\n      if (resultStartLineNumber > resultEndLineNumber) {\n        return null;\n      }\n      if (resultStartLineNumber === resultEndLineNumber && resultStartColumn > resultEndColumn) {\n        return null;\n      }\n      return new Range(resultStartLineNumber, resultStartColumn, resultEndLineNumber, resultEndColumn);\n    };\n    Range.prototype.equalsRange = function (other) {\n      return Range.equalsRange(this, other);\n    };\n    Range.equalsRange = function (a, b) {\n      if (!a && !b) {\n        return true;\n      }\n      return !!a && !!b && a.startLineNumber === b.startLineNumber && a.startColumn === b.startColumn && a.endLineNumber === b.endLineNumber && a.endColumn === b.endColumn;\n    };\n    Range.prototype.getEndPosition = function () {\n      return Range.getEndPosition(this);\n    };\n    Range.getEndPosition = function (range) {\n      return new Position(range.endLineNumber, range.endColumn);\n    };\n    Range.prototype.getStartPosition = function () {\n      return Range.getStartPosition(this);\n    };\n    Range.getStartPosition = function (range) {\n      return new Position(range.startLineNumber, range.startColumn);\n    };\n    Range.prototype.collapseToStart = function () {\n      return Range.collapseToStart(this);\n    };\n    Range.collapseToStart = function (range) {\n      return new Range(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n    };\n    Range.prototype.collapseToEnd = function () {\n      return Range.collapseToEnd(this);\n    };\n    Range.collapseToEnd = function (range) {\n      return new Range(range.endLineNumber, range.endColumn, range.endLineNumber, range.endColumn);\n    };\n    Range.fromPositions = function (start, end) {\n      if (end === void 0) {\n        end = start;\n      }\n      return new Range(start.lineNumber, start.column, end.lineNumber, end.column);\n    };\n    return Range;\n  }();\n  function findLastMonotonous(array, predicate) {\n    var idx = findLastIdxMonotonous(array, predicate);\n    return idx === -1 ? undefined : array[idx];\n  }\n  function findLastIdxMonotonous(array, predicate, startIdx, endIdxEx) {\n    if (startIdx === void 0) {\n      startIdx = 0;\n    }\n    if (endIdxEx === void 0) {\n      endIdxEx = array.length;\n    }\n    var i = startIdx;\n    var j = endIdxEx;\n    while (i < j) {\n      var k = Math.floor((i + j) / 2);\n      if (predicate(array[k])) {\n        i = k + 1;\n      } else {\n        j = k;\n      }\n    }\n    return i - 1;\n  }\n  function findFirstMonotonous(array, predicate) {\n    var idx = findFirstIdxMonotonousOrArrLen(array, predicate);\n    return idx === array.length ? undefined : array[idx];\n  }\n  function findFirstIdxMonotonousOrArrLen(array, predicate, startIdx, endIdxEx) {\n    if (startIdx === void 0) {\n      startIdx = 0;\n    }\n    if (endIdxEx === void 0) {\n      endIdxEx = array.length;\n    }\n    var i = startIdx;\n    var j = endIdxEx;\n    while (i < j) {\n      var k = Math.floor((i + j) / 2);\n      if (predicate(array[k])) {\n        j = k;\n      } else {\n        i = k + 1;\n      }\n    }\n    return i;\n  }\n  var MonotonousArray = /** @class */function () {\n    function MonotonousArray(_array) {\n      this._array = _array;\n      this._findLastMonotonousLastIdx = 0;\n    }\n    MonotonousArray.prototype.findLastMonotonous = function (predicate) {\n      var e_3, _a;\n      if (_b.assertInvariants) {\n        if (this._prevFindLastPredicate) {\n          try {\n            for (var _g = __values(this._array), _h = _g.next(); !_h.done; _h = _g.next()) {\n              var item = _h.value;\n              if (this._prevFindLastPredicate(item) && !predicate(item)) {\n                throw new Error(\"MonotonousArray: current predicate must be weaker than (or equal to) the previous predicate.\");\n              }\n            }\n          } catch (e_3_1) {\n            e_3 = {\n              error: e_3_1\n            };\n          } finally {\n            try {\n              if (_h && !_h.done && (_a = _g.return)) _a.call(_g);\n            } finally {\n              if (e_3) throw e_3.error;\n            }\n          }\n        }\n        this._prevFindLastPredicate = predicate;\n      }\n      var idx = findLastIdxMonotonous(this._array, predicate, this._findLastMonotonousLastIdx);\n      this._findLastMonotonousLastIdx = idx + 1;\n      return idx === -1 ? undefined : this._array[idx];\n    };\n    return MonotonousArray;\n  }();\n  _b = MonotonousArray;\n  (function () {\n    _b.assertInvariants = false;\n  })();\n  var LineRange = /** @class */function () {\n    function LineRange(startLineNumber, endLineNumberExclusive) {\n      if (startLineNumber > endLineNumberExclusive) {\n        throw new BugIndicatingError(\"startLineNumber \".concat(startLineNumber, \" cannot be after endLineNumberExclusive \").concat(endLineNumberExclusive));\n      }\n      this.startLineNumber = startLineNumber;\n      this.endLineNumberExclusive = endLineNumberExclusive;\n    }\n    LineRange.fromRangeInclusive = function (range) {\n      return new LineRange(range.startLineNumber, range.endLineNumber + 1);\n    };\n    LineRange.join = function (lineRanges) {\n      if (lineRanges.length === 0) {\n        throw new BugIndicatingError(\"lineRanges cannot be empty\");\n      }\n      var startLineNumber = lineRanges[0].startLineNumber;\n      var endLineNumberExclusive = lineRanges[0].endLineNumberExclusive;\n      for (var i = 1; i < lineRanges.length; i++) {\n        startLineNumber = Math.min(startLineNumber, lineRanges[i].startLineNumber);\n        endLineNumberExclusive = Math.max(endLineNumberExclusive, lineRanges[i].endLineNumberExclusive);\n      }\n      return new LineRange(startLineNumber, endLineNumberExclusive);\n    };\n    LineRange.ofLength = function (startLineNumber, length) {\n      return new LineRange(startLineNumber, startLineNumber + length);\n    };\n    Object.defineProperty(LineRange.prototype, \"isEmpty\", {\n      get: function () {\n        return this.startLineNumber === this.endLineNumberExclusive;\n      },\n      enumerable: false,\n      configurable: true\n    });\n    LineRange.prototype.delta = function (offset) {\n      return new LineRange(this.startLineNumber + offset, this.endLineNumberExclusive + offset);\n    };\n    Object.defineProperty(LineRange.prototype, \"length\", {\n      get: function () {\n        return this.endLineNumberExclusive - this.startLineNumber;\n      },\n      enumerable: false,\n      configurable: true\n    });\n    LineRange.prototype.join = function (other) {\n      return new LineRange(Math.min(this.startLineNumber, other.startLineNumber), Math.max(this.endLineNumberExclusive, other.endLineNumberExclusive));\n    };\n    LineRange.prototype.intersect = function (other) {\n      var startLineNumber = Math.max(this.startLineNumber, other.startLineNumber);\n      var endLineNumberExclusive = Math.min(this.endLineNumberExclusive, other.endLineNumberExclusive);\n      if (startLineNumber <= endLineNumberExclusive) {\n        return new LineRange(startLineNumber, endLineNumberExclusive);\n      }\n      return undefined;\n    };\n    LineRange.prototype.overlapOrTouch = function (other) {\n      return this.startLineNumber <= other.endLineNumberExclusive && other.startLineNumber <= this.endLineNumberExclusive;\n    };\n    LineRange.prototype.toInclusiveRange = function () {\n      if (this.isEmpty) {\n        return null;\n      }\n      return new Range(this.startLineNumber, 1, this.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER);\n    };\n    LineRange.prototype.toOffsetRange = function () {\n      return new OffsetRange(this.startLineNumber - 1, this.endLineNumberExclusive - 1);\n    };\n    return LineRange;\n  }();\n  var LineRangeSet = /** @class */function () {\n    function LineRangeSet(_normalizedRanges) {\n      if (_normalizedRanges === void 0) {\n        _normalizedRanges = [];\n      }\n      this._normalizedRanges = _normalizedRanges;\n    }\n    Object.defineProperty(LineRangeSet.prototype, \"ranges\", {\n      get: function () {\n        return this._normalizedRanges;\n      },\n      enumerable: false,\n      configurable: true\n    });\n    LineRangeSet.prototype.addRange = function (range) {\n      if (range.length === 0) {\n        return;\n      }\n      var joinRangeStartIdx = findFirstIdxMonotonousOrArrLen(this._normalizedRanges, function (r) {\n        return r.endLineNumberExclusive >= range.startLineNumber;\n      });\n      var joinRangeEndIdxExclusive = findLastIdxMonotonous(this._normalizedRanges, function (r) {\n        return r.startLineNumber <= range.endLineNumberExclusive;\n      }) + 1;\n      if (joinRangeStartIdx === joinRangeEndIdxExclusive) {\n        this._normalizedRanges.splice(joinRangeStartIdx, 0, range);\n      } else if (joinRangeStartIdx === joinRangeEndIdxExclusive - 1) {\n        var joinRange = this._normalizedRanges[joinRangeStartIdx];\n        this._normalizedRanges[joinRangeStartIdx] = joinRange.join(range);\n      } else {\n        var joinRange = this._normalizedRanges[joinRangeStartIdx].join(this._normalizedRanges[joinRangeEndIdxExclusive - 1]).join(range);\n        this._normalizedRanges.splice(joinRangeStartIdx, joinRangeEndIdxExclusive - joinRangeStartIdx, joinRange);\n      }\n    };\n    LineRangeSet.prototype.contains = function (lineNumber) {\n      var rangeThatStartsBeforeEnd = findLastMonotonous(this._normalizedRanges, function (r) {\n        return r.startLineNumber <= lineNumber;\n      });\n      return !!rangeThatStartsBeforeEnd && rangeThatStartsBeforeEnd.endLineNumberExclusive > lineNumber;\n    };\n    LineRangeSet.prototype.subtractFrom = function (range) {\n      var joinRangeStartIdx = findFirstIdxMonotonousOrArrLen(this._normalizedRanges, function (r) {\n        return r.endLineNumberExclusive >= range.startLineNumber;\n      });\n      var joinRangeEndIdxExclusive = findLastIdxMonotonous(this._normalizedRanges, function (r) {\n        return r.startLineNumber <= range.endLineNumberExclusive;\n      }) + 1;\n      if (joinRangeStartIdx === joinRangeEndIdxExclusive) {\n        return new LineRangeSet([range]);\n      }\n      var result = [];\n      var startLineNumber = range.startLineNumber;\n      for (var i = joinRangeStartIdx; i < joinRangeEndIdxExclusive; i++) {\n        var r = this._normalizedRanges[i];\n        if (r.startLineNumber > startLineNumber) {\n          result.push(new LineRange(startLineNumber, r.startLineNumber));\n        }\n        startLineNumber = r.endLineNumberExclusive;\n      }\n      if (startLineNumber < range.endLineNumberExclusive) {\n        result.push(new LineRange(startLineNumber, range.endLineNumberExclusive));\n      }\n      return new LineRangeSet(result);\n    };\n    LineRangeSet.prototype.getIntersection = function (other) {\n      var result = [];\n      var i1 = 0;\n      var i2 = 0;\n      while (i1 < this._normalizedRanges.length && i2 < other._normalizedRanges.length) {\n        var r1 = this._normalizedRanges[i1];\n        var r2 = other._normalizedRanges[i2];\n        var i = r1.intersect(r2);\n        if (i && !i.isEmpty) {\n          result.push(i);\n        }\n        if (r1.endLineNumberExclusive < r2.endLineNumberExclusive) {\n          i1++;\n        } else {\n          i2++;\n        }\n      }\n      return new LineRangeSet(result);\n    };\n    LineRangeSet.prototype.getWithDelta = function (value) {\n      return new LineRangeSet(this._normalizedRanges.map(function (r) {\n        return r.delta(value);\n      }));\n    };\n    return LineRangeSet;\n  }();\n  var TextLength = /** @class */function () {\n    function TextLength(lineCount, columnCount) {\n      this.lineCount = lineCount;\n      this.columnCount = columnCount;\n    }\n    TextLength.prototype.toLineRange = function () {\n      return LineRange.ofLength(1, this.lineCount);\n    };\n    TextLength.prototype.addToPosition = function (position) {\n      if (this.lineCount === 0) {\n        return new Position(position.lineNumber, position.column + this.columnCount);\n      } else {\n        return new Position(position.lineNumber + this.lineCount, this.columnCount + 1);\n      }\n    };\n    return TextLength;\n  }();\n  _c = TextLength;\n  (function () {\n    _c.zero = new _c(0, 0);\n  })();\n  var LineBasedText = /** @class */function () {\n    function LineBasedText(_getLineContent, _lineCount) {\n      assert(_lineCount >= 1);\n      this._getLineContent = _getLineContent;\n      this._lineCount = _lineCount;\n    }\n    LineBasedText.prototype.getValueOfRange = function (range) {\n      if (range.startLineNumber === range.endLineNumber) {\n        return this._getLineContent(range.startLineNumber).substring(range.startColumn - 1, range.endColumn - 1);\n      }\n      var result = this._getLineContent(range.startLineNumber).substring(range.startColumn - 1);\n      for (var i = range.startLineNumber + 1; i < range.endLineNumber; i++) {\n        result += \"\\n\" + this._getLineContent(i);\n      }\n      result += \"\\n\" + this._getLineContent(range.endLineNumber).substring(0, range.endColumn - 1);\n      return result;\n    };\n    LineBasedText.prototype.getLineLength = function (lineNumber) {\n      return this._getLineContent(lineNumber).length;\n    };\n    Object.defineProperty(LineBasedText.prototype, \"length\", {\n      get: function () {\n        var lastLine = this._getLineContent(this._lineCount);\n        return new TextLength(this._lineCount - 1, lastLine.length);\n      },\n      enumerable: false,\n      configurable: true\n    });\n    return LineBasedText;\n  }();\n  var ArrayText = /** @class */function (_super) {\n    __extends(ArrayText, _super);\n    function ArrayText(lines) {\n      return _super.call(this, function (lineNumber) {\n        return lines[lineNumber - 1];\n      }, lines.length) || this;\n    }\n    return ArrayText;\n  }(LineBasedText);\n  var LinesDiff = /** @class */function () {\n    function LinesDiff(changes, moves, hitTimeout) {\n      this.changes = changes;\n      this.moves = moves;\n      this.hitTimeout = hitTimeout;\n    }\n    return LinesDiff;\n  }();\n  var MovedText = /** @class */function () {\n    function MovedText(lineRangeMapping, changes) {\n      this.lineRangeMapping = lineRangeMapping;\n      this.changes = changes;\n    }\n    return MovedText;\n  }();\n  var LineRangeMapping = /** @class */function () {\n    function LineRangeMapping(originalRange, modifiedRange) {\n      this.original = originalRange;\n      this.modified = modifiedRange;\n    }\n    LineRangeMapping.prototype.join = function (other) {\n      return new LineRangeMapping(this.original.join(other.original), this.modified.join(other.modified));\n    };\n    Object.defineProperty(LineRangeMapping.prototype, \"changedLineCount\", {\n      get: function () {\n        return Math.max(this.original.length, this.modified.length);\n      },\n      enumerable: false,\n      configurable: true\n    });\n    LineRangeMapping.prototype.toRangeMapping = function () {\n      var origInclusiveRange = this.original.toInclusiveRange();\n      var modInclusiveRange = this.modified.toInclusiveRange();\n      if (origInclusiveRange && modInclusiveRange) {\n        return new RangeMapping(origInclusiveRange, modInclusiveRange);\n      } else if (this.original.startLineNumber === 1 || this.modified.startLineNumber === 1) {\n        if (!(this.modified.startLineNumber === 1 && this.original.startLineNumber === 1)) {\n          throw new BugIndicatingError(\"not a valid diff\");\n        }\n        return new RangeMapping(new Range(this.original.startLineNumber, 1, this.original.endLineNumberExclusive, 1), new Range(this.modified.startLineNumber, 1, this.modified.endLineNumberExclusive, 1));\n      } else {\n        return new RangeMapping(new Range(this.original.startLineNumber - 1, Number.MAX_SAFE_INTEGER, this.original.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER), new Range(this.modified.startLineNumber - 1, Number.MAX_SAFE_INTEGER, this.modified.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER));\n      }\n    };\n    LineRangeMapping.prototype.toRangeMapping2 = function (original, modified) {\n      if (isValidLineNumber(this.original.endLineNumberExclusive, original) && isValidLineNumber(this.modified.endLineNumberExclusive, modified)) {\n        return new RangeMapping(new Range(this.original.startLineNumber, 1, this.original.endLineNumberExclusive, 1), new Range(this.modified.startLineNumber, 1, this.modified.endLineNumberExclusive, 1));\n      }\n      if (!this.original.isEmpty && !this.modified.isEmpty) {\n        return new RangeMapping(Range.fromPositions(new Position(this.original.startLineNumber, 1), normalizePosition(new Position(this.original.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER), original)), Range.fromPositions(new Position(this.modified.startLineNumber, 1), normalizePosition(new Position(this.modified.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER), modified)));\n      }\n      if (this.original.startLineNumber > 1 && this.modified.startLineNumber > 1) {\n        return new RangeMapping(Range.fromPositions(normalizePosition(new Position(this.original.startLineNumber - 1, Number.MAX_SAFE_INTEGER), original), normalizePosition(new Position(this.original.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER), original)), Range.fromPositions(normalizePosition(new Position(this.modified.startLineNumber - 1, Number.MAX_SAFE_INTEGER), modified), normalizePosition(new Position(this.modified.endLineNumberExclusive - 1, Number.MAX_SAFE_INTEGER), modified)));\n      }\n      throw new BugIndicatingError();\n    };\n    return LineRangeMapping;\n  }();\n  function normalizePosition(position, content) {\n    if (position.lineNumber < 1) {\n      return new Position(1, 1);\n    }\n    if (position.lineNumber > content.length) {\n      return new Position(content.length, content[content.length - 1].length + 1);\n    }\n    var line = content[position.lineNumber - 1];\n    if (position.column > line.length + 1) {\n      return new Position(position.lineNumber, line.length + 1);\n    }\n    return position;\n  }\n  function isValidLineNumber(lineNumber, lines) {\n    return lineNumber >= 1 && lineNumber <= lines.length;\n  }\n  var DetailedLineRangeMapping = /** @class */function (_super) {\n    __extends(DetailedLineRangeMapping, _super);\n    function DetailedLineRangeMapping(originalRange, modifiedRange, innerChanges) {\n      var _this = _super.call(this, originalRange, modifiedRange) || this;\n      _this.innerChanges = innerChanges;\n      return _this;\n    }\n    DetailedLineRangeMapping.fromRangeMappings = function (rangeMappings) {\n      var originalRange = LineRange.join(rangeMappings.map(function (r) {\n        return LineRange.fromRangeInclusive(r.originalRange);\n      }));\n      var modifiedRange = LineRange.join(rangeMappings.map(function (r) {\n        return LineRange.fromRangeInclusive(r.modifiedRange);\n      }));\n      return new DetailedLineRangeMapping(originalRange, modifiedRange, rangeMappings);\n    };\n    DetailedLineRangeMapping.prototype.flip = function () {\n      var _a;\n      return new DetailedLineRangeMapping(this.modified, this.original, (_a = this.innerChanges) === null || _a === void 0 ? void 0 : _a.map(function (c) {\n        return c.flip();\n      }));\n    };\n    DetailedLineRangeMapping.prototype.withInnerChangesFromLineRanges = function () {\n      return new DetailedLineRangeMapping(this.original, this.modified, [this.toRangeMapping()]);\n    };\n    return DetailedLineRangeMapping;\n  }(LineRangeMapping);\n  var RangeMapping = /** @class */function () {\n    function RangeMapping(originalRange, modifiedRange) {\n      this.originalRange = originalRange;\n      this.modifiedRange = modifiedRange;\n    }\n    RangeMapping.join = function (rangeMappings) {\n      if (rangeMappings.length === 0) {\n        throw new BugIndicatingError(\"Cannot join an empty list of range mappings\");\n      }\n      var result = rangeMappings[0];\n      for (var i = 1; i < rangeMappings.length; i++) {\n        result = result.join(rangeMappings[i]);\n      }\n      return result;\n    };\n    RangeMapping.assertSorted = function (rangeMappings) {\n      for (var i = 1; i < rangeMappings.length; i++) {\n        var previous = rangeMappings[i - 1];\n        var current = rangeMappings[i];\n        if (!(previous.originalRange.getEndPosition().isBeforeOrEqual(current.originalRange.getStartPosition()) && previous.modifiedRange.getEndPosition().isBeforeOrEqual(current.modifiedRange.getStartPosition()))) {\n          throw new BugIndicatingError(\"Range mappings must be sorted\");\n        }\n      }\n    };\n    RangeMapping.prototype.flip = function () {\n      return new RangeMapping(this.modifiedRange, this.originalRange);\n    };\n    RangeMapping.prototype.join = function (other) {\n      return new RangeMapping(this.originalRange.plusRange(other.originalRange), this.modifiedRange.plusRange(other.modifiedRange));\n    };\n    return RangeMapping;\n  }();\n  function lineRangeMappingFromRangeMappings(alignments, originalLines, modifiedLines, dontAssertStartLine) {\n    var e_4, _a;\n    if (dontAssertStartLine === void 0) {\n      dontAssertStartLine = false;\n    }\n    var changes = [];\n    try {\n      for (var _g = __values(groupAdjacentBy(alignments.map(function (a) {\n          return getLineRangeMapping(a, originalLines, modifiedLines);\n        }), function (a1, a2) {\n          return a1.original.overlapOrTouch(a2.original) || a1.modified.overlapOrTouch(a2.modified);\n        })), _h = _g.next(); !_h.done; _h = _g.next()) {\n        var g = _h.value;\n        var first = g[0];\n        var last = g[g.length - 1];\n        changes.push(new DetailedLineRangeMapping(first.original.join(last.original), first.modified.join(last.modified), g.map(function (a) {\n          return a.innerChanges[0];\n        })));\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_h && !_h.done && (_a = _g.return)) _a.call(_g);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n    assertFn(function () {\n      if (!dontAssertStartLine && changes.length > 0) {\n        if (changes[0].modified.startLineNumber !== changes[0].original.startLineNumber) {\n          return false;\n        }\n        if (modifiedLines.length.lineCount - changes[changes.length - 1].modified.endLineNumberExclusive !== originalLines.length.lineCount - changes[changes.length - 1].original.endLineNumberExclusive) {\n          return false;\n        }\n      }\n      return checkAdjacentItems(changes, function (m1, m2) {\n        return m2.original.startLineNumber - m1.original.endLineNumberExclusive === m2.modified.startLineNumber - m1.modified.endLineNumberExclusive &&\n        // There has to be an unchanged line in between (otherwise both diffs should have been joined)\n        m1.original.endLineNumberExclusive < m2.original.startLineNumber && m1.modified.endLineNumberExclusive < m2.modified.startLineNumber;\n      });\n    });\n    return changes;\n  }\n  function getLineRangeMapping(rangeMapping, originalLines, modifiedLines) {\n    var lineStartDelta = 0;\n    var lineEndDelta = 0;\n    if (rangeMapping.modifiedRange.endColumn === 1 && rangeMapping.originalRange.endColumn === 1 && rangeMapping.originalRange.startLineNumber + lineStartDelta <= rangeMapping.originalRange.endLineNumber && rangeMapping.modifiedRange.startLineNumber + lineStartDelta <= rangeMapping.modifiedRange.endLineNumber) {\n      lineEndDelta = -1;\n    }\n    if (rangeMapping.modifiedRange.startColumn - 1 >= modifiedLines.getLineLength(rangeMapping.modifiedRange.startLineNumber) && rangeMapping.originalRange.startColumn - 1 >= originalLines.getLineLength(rangeMapping.originalRange.startLineNumber) && rangeMapping.originalRange.startLineNumber <= rangeMapping.originalRange.endLineNumber + lineEndDelta && rangeMapping.modifiedRange.startLineNumber <= rangeMapping.modifiedRange.endLineNumber + lineEndDelta) {\n      lineStartDelta = 1;\n    }\n    var originalLineRange = new LineRange(rangeMapping.originalRange.startLineNumber + lineStartDelta, rangeMapping.originalRange.endLineNumber + 1 + lineEndDelta);\n    var modifiedLineRange = new LineRange(rangeMapping.modifiedRange.startLineNumber + lineStartDelta, rangeMapping.modifiedRange.endLineNumber + 1 + lineEndDelta);\n    return new DetailedLineRangeMapping(originalLineRange, modifiedLineRange, [rangeMapping]);\n  }\n  var DiffAlgorithmResult = /** @class */function () {\n    function DiffAlgorithmResult(diffs, hitTimeout) {\n      this.diffs = diffs;\n      this.hitTimeout = hitTimeout;\n    }\n    DiffAlgorithmResult.trivial = function (seq1, seq2) {\n      return new DiffAlgorithmResult([new SequenceDiff(OffsetRange.ofLength(seq1.length), OffsetRange.ofLength(seq2.length))], false);\n    };\n    DiffAlgorithmResult.trivialTimedOut = function (seq1, seq2) {\n      return new DiffAlgorithmResult([new SequenceDiff(OffsetRange.ofLength(seq1.length), OffsetRange.ofLength(seq2.length))], true);\n    };\n    return DiffAlgorithmResult;\n  }();\n  var SequenceDiff = /** @class */function () {\n    function SequenceDiff(seq1Range, seq2Range) {\n      this.seq1Range = seq1Range;\n      this.seq2Range = seq2Range;\n    }\n    SequenceDiff.invert = function (sequenceDiffs, doc1Length) {\n      var result = [];\n      forEachAdjacent(sequenceDiffs, function (a, b) {\n        result.push(SequenceDiff.fromOffsetPairs(a ? a.getEndExclusives() : OffsetPair.zero, b ? b.getStarts() : new OffsetPair(doc1Length, (a ? a.seq2Range.endExclusive - a.seq1Range.endExclusive : 0) + doc1Length)));\n      });\n      return result;\n    };\n    SequenceDiff.fromOffsetPairs = function (start, endExclusive) {\n      return new SequenceDiff(new OffsetRange(start.offset1, endExclusive.offset1), new OffsetRange(start.offset2, endExclusive.offset2));\n    };\n    SequenceDiff.assertSorted = function (sequenceDiffs) {\n      var e_5, _a;\n      var last = undefined;\n      try {\n        for (var sequenceDiffs_1 = __values(sequenceDiffs), sequenceDiffs_1_1 = sequenceDiffs_1.next(); !sequenceDiffs_1_1.done; sequenceDiffs_1_1 = sequenceDiffs_1.next()) {\n          var cur = sequenceDiffs_1_1.value;\n          if (last) {\n            if (!(last.seq1Range.endExclusive <= cur.seq1Range.start && last.seq2Range.endExclusive <= cur.seq2Range.start)) {\n              throw new BugIndicatingError(\"Sequence diffs must be sorted\");\n            }\n          }\n          last = cur;\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (sequenceDiffs_1_1 && !sequenceDiffs_1_1.done && (_a = sequenceDiffs_1.return)) _a.call(sequenceDiffs_1);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n    };\n    SequenceDiff.prototype.swap = function () {\n      return new SequenceDiff(this.seq2Range, this.seq1Range);\n    };\n    SequenceDiff.prototype.join = function (other) {\n      return new SequenceDiff(this.seq1Range.join(other.seq1Range), this.seq2Range.join(other.seq2Range));\n    };\n    SequenceDiff.prototype.delta = function (offset) {\n      if (offset === 0) {\n        return this;\n      }\n      return new SequenceDiff(this.seq1Range.delta(offset), this.seq2Range.delta(offset));\n    };\n    SequenceDiff.prototype.deltaStart = function (offset) {\n      if (offset === 0) {\n        return this;\n      }\n      return new SequenceDiff(this.seq1Range.deltaStart(offset), this.seq2Range.deltaStart(offset));\n    };\n    SequenceDiff.prototype.deltaEnd = function (offset) {\n      if (offset === 0) {\n        return this;\n      }\n      return new SequenceDiff(this.seq1Range.deltaEnd(offset), this.seq2Range.deltaEnd(offset));\n    };\n    SequenceDiff.prototype.intersect = function (other) {\n      var i1 = this.seq1Range.intersect(other.seq1Range);\n      var i2 = this.seq2Range.intersect(other.seq2Range);\n      if (!i1 || !i2) {\n        return undefined;\n      }\n      return new SequenceDiff(i1, i2);\n    };\n    SequenceDiff.prototype.getStarts = function () {\n      return new OffsetPair(this.seq1Range.start, this.seq2Range.start);\n    };\n    SequenceDiff.prototype.getEndExclusives = function () {\n      return new OffsetPair(this.seq1Range.endExclusive, this.seq2Range.endExclusive);\n    };\n    return SequenceDiff;\n  }();\n  var OffsetPair = /** @class */function () {\n    function OffsetPair(offset1, offset2) {\n      this.offset1 = offset1;\n      this.offset2 = offset2;\n    }\n    OffsetPair.prototype.delta = function (offset) {\n      if (offset === 0) {\n        return this;\n      }\n      return new _d(this.offset1 + offset, this.offset2 + offset);\n    };\n    OffsetPair.prototype.equals = function (other) {\n      return this.offset1 === other.offset1 && this.offset2 === other.offset2;\n    };\n    return OffsetPair;\n  }();\n  _d = OffsetPair;\n  (function () {\n    _d.zero = new _d(0, 0);\n  })();\n  (function () {\n    _d.max = new _d(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\n  })();\n  var InfiniteTimeout = /** @class */function () {\n    function InfiniteTimeout() {}\n    InfiniteTimeout.prototype.isValid = function () {\n      return true;\n    };\n    return InfiniteTimeout;\n  }();\n  _e = InfiniteTimeout;\n  (function () {\n    _e.instance = new _e();\n  })();\n  var DateTimeout = /** @class */function () {\n    function DateTimeout(timeout) {\n      this.timeout = timeout;\n      this.startTime = Date.now();\n      this.valid = true;\n      if (timeout <= 0) {\n        throw new BugIndicatingError(\"timeout must be positive\");\n      }\n    }\n    DateTimeout.prototype.isValid = function () {\n      var valid = Date.now() - this.startTime < this.timeout;\n      if (!valid && this.valid) {\n        this.valid = false;\n      }\n      return this.valid;\n    };\n    DateTimeout.prototype.disable = function () {\n      this.timeout = Number.MAX_SAFE_INTEGER;\n      this.isValid = function () {\n        return true;\n      };\n      this.valid = true;\n    };\n    return DateTimeout;\n  }();\n  var Array2D = /** @class */function () {\n    function Array2D(width, height) {\n      this.width = width;\n      this.height = height;\n      this.array = [];\n      this.array = new Array(width * height);\n    }\n    Array2D.prototype.get = function (x, y) {\n      return this.array[x + y * this.width];\n    };\n    Array2D.prototype.set = function (x, y, value) {\n      this.array[x + y * this.width] = value;\n    };\n    return Array2D;\n  }();\n  function isSpace(charCode) {\n    return charCode === 32 || charCode === 9;\n  }\n  var LineRangeFragment = /** @class */function () {\n    function LineRangeFragment(range, lines, source) {\n      this.range = range;\n      this.lines = lines;\n      this.source = source;\n      this.histogram = [];\n      var counter = 0;\n      for (var i = range.startLineNumber - 1; i < range.endLineNumberExclusive - 1; i++) {\n        var line = lines[i];\n        for (var j = 0; j < line.length; j++) {\n          counter++;\n          var chr = line[j];\n          var key2 = _f.getKey(chr);\n          this.histogram[key2] = (this.histogram[key2] || 0) + 1;\n        }\n        counter++;\n        var key = _f.getKey(\"\\n\");\n        this.histogram[key] = (this.histogram[key] || 0) + 1;\n      }\n      this.totalCount = counter;\n    }\n    LineRangeFragment.getKey = function (chr) {\n      var key = this.chrKeys.get(chr);\n      if (key === undefined) {\n        key = this.chrKeys.size;\n        this.chrKeys.set(chr, key);\n      }\n      return key;\n    };\n    LineRangeFragment.prototype.computeSimilarity = function (other) {\n      var _a, _g;\n      var sumDifferences = 0;\n      var maxLength = Math.max(this.histogram.length, other.histogram.length);\n      for (var i = 0; i < maxLength; i++) {\n        sumDifferences += Math.abs(((_a = this.histogram[i]) !== null && _a !== void 0 ? _a : 0) - ((_g = other.histogram[i]) !== null && _g !== void 0 ? _g : 0));\n      }\n      return 1 - sumDifferences / (this.totalCount + other.totalCount);\n    };\n    return LineRangeFragment;\n  }();\n  _f = LineRangeFragment;\n  (function () {\n    _f.chrKeys = /* @__PURE__ */new Map();\n  })();\n  var DynamicProgrammingDiffing = /** @class */function () {\n    function DynamicProgrammingDiffing() {}\n    DynamicProgrammingDiffing.prototype.compute = function (sequence1, sequence2, timeout, equalityScore) {\n      if (timeout === void 0) {\n        timeout = InfiniteTimeout.instance;\n      }\n      if (sequence1.length === 0 || sequence2.length === 0) {\n        return DiffAlgorithmResult.trivial(sequence1, sequence2);\n      }\n      var lcsLengths = new Array2D(sequence1.length, sequence2.length);\n      var directions = new Array2D(sequence1.length, sequence2.length);\n      var lengths = new Array2D(sequence1.length, sequence2.length);\n      for (var s12 = 0; s12 < sequence1.length; s12++) {\n        for (var s22 = 0; s22 < sequence2.length; s22++) {\n          if (!timeout.isValid()) {\n            return DiffAlgorithmResult.trivialTimedOut(sequence1, sequence2);\n          }\n          var horizontalLen = s12 === 0 ? 0 : lcsLengths.get(s12 - 1, s22);\n          var verticalLen = s22 === 0 ? 0 : lcsLengths.get(s12, s22 - 1);\n          var extendedSeqScore = void 0;\n          if (sequence1.getElement(s12) === sequence2.getElement(s22)) {\n            if (s12 === 0 || s22 === 0) {\n              extendedSeqScore = 0;\n            } else {\n              extendedSeqScore = lcsLengths.get(s12 - 1, s22 - 1);\n            }\n            if (s12 > 0 && s22 > 0 && directions.get(s12 - 1, s22 - 1) === 3) {\n              extendedSeqScore += lengths.get(s12 - 1, s22 - 1);\n            }\n            extendedSeqScore += equalityScore ? equalityScore(s12, s22) : 1;\n          } else {\n            extendedSeqScore = -1;\n          }\n          var newValue = Math.max(horizontalLen, verticalLen, extendedSeqScore);\n          if (newValue === extendedSeqScore) {\n            var prevLen = s12 > 0 && s22 > 0 ? lengths.get(s12 - 1, s22 - 1) : 0;\n            lengths.set(s12, s22, prevLen + 1);\n            directions.set(s12, s22, 3);\n          } else if (newValue === horizontalLen) {\n            lengths.set(s12, s22, 0);\n            directions.set(s12, s22, 1);\n          } else if (newValue === verticalLen) {\n            lengths.set(s12, s22, 0);\n            directions.set(s12, s22, 2);\n          }\n          lcsLengths.set(s12, s22, newValue);\n        }\n      }\n      var result = [];\n      var lastAligningPosS1 = sequence1.length;\n      var lastAligningPosS2 = sequence2.length;\n      function reportDecreasingAligningPositions(s12, s22) {\n        if (s12 + 1 !== lastAligningPosS1 || s22 + 1 !== lastAligningPosS2) {\n          result.push(new SequenceDiff(new OffsetRange(s12 + 1, lastAligningPosS1), new OffsetRange(s22 + 1, lastAligningPosS2)));\n        }\n        lastAligningPosS1 = s12;\n        lastAligningPosS2 = s22;\n      }\n      var s1 = sequence1.length - 1;\n      var s2 = sequence2.length - 1;\n      while (s1 >= 0 && s2 >= 0) {\n        if (directions.get(s1, s2) === 3) {\n          reportDecreasingAligningPositions(s1, s2);\n          s1--;\n          s2--;\n        } else {\n          if (directions.get(s1, s2) === 1) {\n            s1--;\n          } else {\n            s2--;\n          }\n        }\n      }\n      reportDecreasingAligningPositions(-1, -1);\n      result.reverse();\n      return new DiffAlgorithmResult(result, false);\n    };\n    return DynamicProgrammingDiffing;\n  }();\n  var MyersDiffAlgorithm = /** @class */function () {\n    function MyersDiffAlgorithm() {}\n    MyersDiffAlgorithm.prototype.compute = function (seq1, seq2, timeout) {\n      if (timeout === void 0) {\n        timeout = InfiniteTimeout.instance;\n      }\n      if (seq1.length === 0 || seq2.length === 0) {\n        return DiffAlgorithmResult.trivial(seq1, seq2);\n      }\n      var seqX = seq1;\n      var seqY = seq2;\n      function getXAfterSnake(x, y) {\n        while (x < seqX.length && y < seqY.length && seqX.getElement(x) === seqY.getElement(y)) {\n          x++;\n          y++;\n        }\n        return x;\n      }\n      var d = 0;\n      var V = new FastInt32Array();\n      V.set(0, getXAfterSnake(0, 0));\n      var paths = new FastArrayNegativeIndices();\n      paths.set(0, V.get(0) === 0 ? null : new SnakePath(null, 0, 0, V.get(0)));\n      var k = 0;\n      loop: while (true) {\n        d++;\n        if (!timeout.isValid()) {\n          return DiffAlgorithmResult.trivialTimedOut(seqX, seqY);\n        }\n        var lowerBound = -Math.min(d, seqY.length + d % 2);\n        var upperBound = Math.min(d, seqX.length + d % 2);\n        for (k = lowerBound; k <= upperBound; k += 2) {\n          var maxXofDLineTop = k === upperBound ? -1 : V.get(k + 1);\n          var maxXofDLineLeft = k === lowerBound ? -1 : V.get(k - 1) + 1;\n          var x = Math.min(Math.max(maxXofDLineTop, maxXofDLineLeft), seqX.length);\n          var y = x - k;\n          if (x > seqX.length || y > seqY.length) {\n            continue;\n          }\n          var newMaxX = getXAfterSnake(x, y);\n          V.set(k, newMaxX);\n          var lastPath = x === maxXofDLineTop ? paths.get(k + 1) : paths.get(k - 1);\n          paths.set(k, newMaxX !== x ? new SnakePath(lastPath, x, y, newMaxX - x) : lastPath);\n          if (V.get(k) === seqX.length && V.get(k) - k === seqY.length) {\n            break loop;\n          }\n        }\n      }\n      var path = paths.get(k);\n      var result = [];\n      var lastAligningPosS1 = seqX.length;\n      var lastAligningPosS2 = seqY.length;\n      while (true) {\n        var endX = path ? path.x + path.length : 0;\n        var endY = path ? path.y + path.length : 0;\n        if (endX !== lastAligningPosS1 || endY !== lastAligningPosS2) {\n          result.push(new SequenceDiff(new OffsetRange(endX, lastAligningPosS1), new OffsetRange(endY, lastAligningPosS2)));\n        }\n        if (!path) {\n          break;\n        }\n        lastAligningPosS1 = path.x;\n        lastAligningPosS2 = path.y;\n        path = path.prev;\n      }\n      result.reverse();\n      return new DiffAlgorithmResult(result, false);\n    };\n    return MyersDiffAlgorithm;\n  }();\n  var SnakePath = /** @class */function () {\n    function SnakePath(prev, x, y, length) {\n      this.prev = prev;\n      this.x = x;\n      this.y = y;\n      this.length = length;\n    }\n    return SnakePath;\n  }();\n  var FastInt32Array = /** @class */function () {\n    function FastInt32Array() {\n      this.positiveArr = new Int32Array(10);\n      this.negativeArr = new Int32Array(10);\n    }\n    FastInt32Array.prototype.get = function (idx) {\n      if (idx < 0) {\n        idx = -idx - 1;\n        return this.negativeArr[idx];\n      } else {\n        return this.positiveArr[idx];\n      }\n    };\n    FastInt32Array.prototype.set = function (idx, value) {\n      if (idx < 0) {\n        idx = -idx - 1;\n        if (idx >= this.negativeArr.length) {\n          var arr = this.negativeArr;\n          this.negativeArr = new Int32Array(arr.length * 2);\n          this.negativeArr.set(arr);\n        }\n        this.negativeArr[idx] = value;\n      } else {\n        if (idx >= this.positiveArr.length) {\n          var arr = this.positiveArr;\n          this.positiveArr = new Int32Array(arr.length * 2);\n          this.positiveArr.set(arr);\n        }\n        this.positiveArr[idx] = value;\n      }\n    };\n    return FastInt32Array;\n  }();\n  var FastArrayNegativeIndices = /** @class */function () {\n    function FastArrayNegativeIndices() {\n      this.positiveArr = [];\n      this.negativeArr = [];\n    }\n    FastArrayNegativeIndices.prototype.get = function (idx) {\n      if (idx < 0) {\n        idx = -idx - 1;\n        return this.negativeArr[idx];\n      } else {\n        return this.positiveArr[idx];\n      }\n    };\n    FastArrayNegativeIndices.prototype.set = function (idx, value) {\n      if (idx < 0) {\n        idx = -idx - 1;\n        this.negativeArr[idx] = value;\n      } else {\n        this.positiveArr[idx] = value;\n      }\n    };\n    return FastArrayNegativeIndices;\n  }();\n  var SetMap = /** @class */function () {\n    function SetMap() {\n      this.map = /* @__PURE__ */new Map();\n    }\n    SetMap.prototype.add = function (key, value) {\n      var values = this.map.get(key);\n      if (!values) {\n        values = /* @__PURE__ */new Set();\n        this.map.set(key, values);\n      }\n      values.add(value);\n    };\n    SetMap.prototype.forEach = function (key, fn) {\n      var values = this.map.get(key);\n      if (!values) {\n        return;\n      }\n      values.forEach(fn);\n    };\n    SetMap.prototype.get = function (key) {\n      var values = this.map.get(key);\n      if (!values) {\n        return /* @__PURE__ */new Set();\n      }\n      return values;\n    };\n    return SetMap;\n  }();\n  var LinesSliceCharSequence = /** @class */function () {\n    function LinesSliceCharSequence(lines, range, considerWhitespaceChanges) {\n      this.lines = lines;\n      this.range = range;\n      this.considerWhitespaceChanges = considerWhitespaceChanges;\n      this.elements = [];\n      this.firstElementOffsetByLineIdx = [];\n      this.lineStartOffsets = [];\n      this.trimmedWsLengthsByLineIdx = [];\n      this.firstElementOffsetByLineIdx.push(0);\n      for (var lineNumber = this.range.startLineNumber; lineNumber <= this.range.endLineNumber; lineNumber++) {\n        var line = lines[lineNumber - 1];\n        var lineStartOffset = 0;\n        if (lineNumber === this.range.startLineNumber && this.range.startColumn > 1) {\n          lineStartOffset = this.range.startColumn - 1;\n          line = line.substring(lineStartOffset);\n        }\n        this.lineStartOffsets.push(lineStartOffset);\n        var trimmedWsLength = 0;\n        if (!considerWhitespaceChanges) {\n          var trimmedStartLine = line.trimStart();\n          trimmedWsLength = line.length - trimmedStartLine.length;\n          line = trimmedStartLine.trimEnd();\n        }\n        this.trimmedWsLengthsByLineIdx.push(trimmedWsLength);\n        var lineLength = lineNumber === this.range.endLineNumber ? Math.min(this.range.endColumn - 1 - lineStartOffset - trimmedWsLength, line.length) : line.length;\n        for (var i = 0; i < lineLength; i++) {\n          this.elements.push(line.charCodeAt(i));\n        }\n        if (lineNumber < this.range.endLineNumber) {\n          this.elements.push(\"\\n\".charCodeAt(0));\n          this.firstElementOffsetByLineIdx.push(this.elements.length);\n        }\n      }\n    }\n    LinesSliceCharSequence.prototype.toString = function () {\n      return \"Slice: \\\"\".concat(this.text, \"\\\"\");\n    };\n    Object.defineProperty(LinesSliceCharSequence.prototype, \"text\", {\n      get: function () {\n        return this.getText(new OffsetRange(0, this.length));\n      },\n      enumerable: false,\n      configurable: true\n    });\n    LinesSliceCharSequence.prototype.getText = function (range) {\n      return this.elements.slice(range.start, range.endExclusive).map(function (e) {\n        return String.fromCharCode(e);\n      }).join(\"\");\n    };\n    LinesSliceCharSequence.prototype.getElement = function (offset) {\n      return this.elements[offset];\n    };\n    Object.defineProperty(LinesSliceCharSequence.prototype, \"length\", {\n      get: function () {\n        return this.elements.length;\n      },\n      enumerable: false,\n      configurable: true\n    });\n    LinesSliceCharSequence.prototype.getBoundaryScore = function (length) {\n      var prevCategory = getCategory(length > 0 ? this.elements[length - 1] : -1);\n      var nextCategory = getCategory(length < this.elements.length ? this.elements[length] : -1);\n      if (prevCategory === 7 /* LineBreakCR */ && nextCategory === 8 /* LineBreakLF */) {\n        return 0;\n      }\n      if (prevCategory === 8 /* LineBreakLF */) {\n        return 150;\n      }\n      var score2 = 0;\n      if (prevCategory !== nextCategory) {\n        score2 += 10;\n        if (prevCategory === 0 /* WordLower */ && nextCategory === 1 /* WordUpper */) {\n          score2 += 1;\n        }\n      }\n      score2 += getCategoryBoundaryScore(prevCategory);\n      score2 += getCategoryBoundaryScore(nextCategory);\n      return score2;\n    };\n    LinesSliceCharSequence.prototype.translateOffset = function (offset, preference) {\n      if (preference === void 0) {\n        preference = \"right\";\n      }\n      var i = findLastIdxMonotonous(this.firstElementOffsetByLineIdx, function (value) {\n        return value <= offset;\n      });\n      var lineOffset = offset - this.firstElementOffsetByLineIdx[i];\n      return new Position(this.range.startLineNumber + i, 1 + this.lineStartOffsets[i] + lineOffset + (lineOffset === 0 && preference === \"left\" ? 0 : this.trimmedWsLengthsByLineIdx[i]));\n    };\n    LinesSliceCharSequence.prototype.translateRange = function (range) {\n      var pos1 = this.translateOffset(range.start, \"right\");\n      var pos2 = this.translateOffset(range.endExclusive, \"left\");\n      if (pos2.isBefore(pos1)) {\n        return Range.fromPositions(pos2, pos2);\n      }\n      return Range.fromPositions(pos1, pos2);\n    };\n    LinesSliceCharSequence.prototype.findWordContaining = function (offset) {\n      if (offset < 0 || offset >= this.elements.length) {\n        return undefined;\n      }\n      if (!isWordChar(this.elements[offset])) {\n        return undefined;\n      }\n      var start = offset;\n      while (start > 0 && isWordChar(this.elements[start - 1])) {\n        start--;\n      }\n      var end = offset;\n      while (end < this.elements.length && isWordChar(this.elements[end])) {\n        end++;\n      }\n      return new OffsetRange(start, end);\n    };\n    LinesSliceCharSequence.prototype.findSubWordContaining = function (offset) {\n      if (offset < 0 || offset >= this.elements.length) {\n        return undefined;\n      }\n      if (!isWordChar(this.elements[offset])) {\n        return undefined;\n      }\n      var start = offset;\n      while (start > 0 && isWordChar(this.elements[start - 1]) && !isUpperCase(this.elements[start])) {\n        start--;\n      }\n      var end = offset;\n      while (end < this.elements.length && isWordChar(this.elements[end]) && !isUpperCase(this.elements[end])) {\n        end++;\n      }\n      return new OffsetRange(start, end);\n    };\n    LinesSliceCharSequence.prototype.countLinesIn = function (range) {\n      return this.translateOffset(range.endExclusive).lineNumber - this.translateOffset(range.start).lineNumber;\n    };\n    LinesSliceCharSequence.prototype.isStronglyEqual = function (offset1, offset2) {\n      return this.elements[offset1] === this.elements[offset2];\n    };\n    LinesSliceCharSequence.prototype.extendToFullLines = function (range) {\n      var _a, _g;\n      var start = (_a = findLastMonotonous(this.firstElementOffsetByLineIdx, function (x) {\n        return x <= range.start;\n      })) !== null && _a !== void 0 ? _a : 0;\n      var end = (_g = findFirstMonotonous(this.firstElementOffsetByLineIdx, function (x) {\n        return range.endExclusive <= x;\n      })) !== null && _g !== void 0 ? _g : this.elements.length;\n      return new OffsetRange(start, end);\n    };\n    return LinesSliceCharSequence;\n  }();\n  function isWordChar(charCode) {\n    return charCode >= 97 && charCode <= 122 || charCode >= 65 && charCode <= 90 || charCode >= 48 && charCode <= 57;\n  }\n  function isUpperCase(charCode) {\n    return charCode >= 65 && charCode <= 90;\n  }\n  var score = (_a = {}, _a[0 /* WordLower */] = 0, _a[1 /* WordUpper */] = 0, _a[2 /* WordNumber */] = 0, _a[3 /* End */] = 10, _a[4 /* Other */] = 2, _a[5 /* Separator */] = 30, _a[6 /* Space */] = 3, _a[7 /* LineBreakCR */] = 10, _a[8 /* LineBreakLF */] = 10, _a);\n  function getCategoryBoundaryScore(category) {\n    return score[category];\n  }\n  function getCategory(charCode) {\n    if (charCode === 10) {\n      return 8 /* LineBreakLF */;\n    } else if (charCode === 13) {\n      return 7 /* LineBreakCR */;\n    } else if (isSpace(charCode)) {\n      return 6 /* Space */;\n    } else if (charCode >= 97 && charCode <= 122) {\n      return 0 /* WordLower */;\n    } else if (charCode >= 65 && charCode <= 90) {\n      return 1 /* WordUpper */;\n    } else if (charCode >= 48 && charCode <= 57) {\n      return 2 /* WordNumber */;\n    } else if (charCode === -1) {\n      return 3 /* End */;\n    } else if (charCode === 44 || charCode === 59) {\n      return 5 /* Separator */;\n    } else {\n      return 4 /* Other */;\n    }\n  }\n  function computeMovedLines(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout) {\n    var _a = computeMovesFromSimpleDeletionsToSimpleInsertions(changes, originalLines, modifiedLines, timeout),\n      moves = _a.moves,\n      excludedChanges = _a.excludedChanges;\n    if (!timeout.isValid()) {\n      return [];\n    }\n    var filteredChanges = changes.filter(function (c) {\n      return !excludedChanges.has(c);\n    });\n    var unchangedMoves = computeUnchangedMoves(filteredChanges, hashedOriginalLines, hashedModifiedLines, originalLines, modifiedLines, timeout);\n    pushMany(moves, unchangedMoves);\n    moves = joinCloseConsecutiveMoves(moves);\n    moves = moves.filter(function (current) {\n      var lines = current.original.toOffsetRange().slice(originalLines).map(function (l) {\n        return l.trim();\n      });\n      var originalText = lines.join(\"\\n\");\n      return originalText.length >= 15 && countWhere(lines, function (l) {\n        return l.length >= 2;\n      }) >= 2;\n    });\n    moves = removeMovesInSameDiff(changes, moves);\n    return moves;\n  }\n  function countWhere(arr, predicate) {\n    var e_6, _a;\n    var count = 0;\n    try {\n      for (var arr_1 = __values(arr), arr_1_1 = arr_1.next(); !arr_1_1.done; arr_1_1 = arr_1.next()) {\n        var t = arr_1_1.value;\n        if (predicate(t)) {\n          count++;\n        }\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (arr_1_1 && !arr_1_1.done && (_a = arr_1.return)) _a.call(arr_1);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n    return count;\n  }\n  function computeMovesFromSimpleDeletionsToSimpleInsertions(changes, originalLines, modifiedLines, timeout) {\n    var e_7, _a, e_8, _g;\n    var moves = [];\n    var deletions = changes.filter(function (c) {\n      return c.modified.isEmpty && c.original.length >= 3;\n    }).map(function (d) {\n      return new LineRangeFragment(d.original, originalLines, d);\n    });\n    var insertions = new Set(changes.filter(function (c) {\n      return c.original.isEmpty && c.modified.length >= 3;\n    }).map(function (d) {\n      return new LineRangeFragment(d.modified, modifiedLines, d);\n    }));\n    var excludedChanges = /* @__PURE__ */new Set();\n    try {\n      for (var deletions_1 = __values(deletions), deletions_1_1 = deletions_1.next(); !deletions_1_1.done; deletions_1_1 = deletions_1.next()) {\n        var deletion = deletions_1_1.value;\n        var highestSimilarity = -1;\n        var best = void 0;\n        try {\n          for (var insertions_1 = (e_8 = void 0, __values(insertions)), insertions_1_1 = insertions_1.next(); !insertions_1_1.done; insertions_1_1 = insertions_1.next()) {\n            var insertion = insertions_1_1.value;\n            var similarity = deletion.computeSimilarity(insertion);\n            if (similarity > highestSimilarity) {\n              highestSimilarity = similarity;\n              best = insertion;\n            }\n          }\n        } catch (e_8_1) {\n          e_8 = {\n            error: e_8_1\n          };\n        } finally {\n          try {\n            if (insertions_1_1 && !insertions_1_1.done && (_g = insertions_1.return)) _g.call(insertions_1);\n          } finally {\n            if (e_8) throw e_8.error;\n          }\n        }\n        if (highestSimilarity > 0.9 && best) {\n          insertions.delete(best);\n          moves.push(new LineRangeMapping(deletion.range, best.range));\n          excludedChanges.add(deletion.source);\n          excludedChanges.add(best.source);\n        }\n        if (!timeout.isValid()) {\n          return {\n            moves: moves,\n            excludedChanges: excludedChanges\n          };\n        }\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (deletions_1_1 && !deletions_1_1.done && (_a = deletions_1.return)) _a.call(deletions_1);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n    return {\n      moves: moves,\n      excludedChanges: excludedChanges\n    };\n  }\n  function computeUnchangedMoves(changes, hashedOriginalLines, hashedModifiedLines, originalLines, modifiedLines, timeout) {\n    var e_9, _a, e_10, _g, e_11, _h, e_12, _j;\n    var moves = [];\n    var original3LineHashes = new SetMap();\n    try {\n      for (var changes_1 = __values(changes), changes_1_1 = changes_1.next(); !changes_1_1.done; changes_1_1 = changes_1.next()) {\n        var change = changes_1_1.value;\n        for (var i = change.original.startLineNumber; i < change.original.endLineNumberExclusive - 2; i++) {\n          var key = \"\".concat(hashedOriginalLines[i - 1], \":\").concat(hashedOriginalLines[i + 1 - 1], \":\").concat(hashedOriginalLines[i + 2 - 1]);\n          original3LineHashes.add(key, {\n            range: new LineRange(i, i + 3)\n          });\n        }\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (changes_1_1 && !changes_1_1.done && (_a = changes_1.return)) _a.call(changes_1);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    }\n    var possibleMappings = [];\n    changes.sort(compareBy(function (c) {\n      return c.modified.startLineNumber;\n    }, numberComparator));\n    var _loop_1 = function (change) {\n      var lastMappings = [];\n      var _loop_3 = function (i) {\n        var key = \"\".concat(hashedModifiedLines[i - 1], \":\").concat(hashedModifiedLines[i + 1 - 1], \":\").concat(hashedModifiedLines[i + 2 - 1]);\n        var currentModifiedRange = new LineRange(i, i + 3);\n        var nextMappings = [];\n        original3LineHashes.forEach(key, function (_a) {\n          var e_13, _g;\n          var range = _a.range;\n          try {\n            for (var lastMappings_1 = (e_13 = void 0, __values(lastMappings)), lastMappings_1_1 = lastMappings_1.next(); !lastMappings_1_1.done; lastMappings_1_1 = lastMappings_1.next()) {\n              var lastMapping = lastMappings_1_1.value;\n              if (lastMapping.originalLineRange.endLineNumberExclusive + 1 === range.endLineNumberExclusive && lastMapping.modifiedLineRange.endLineNumberExclusive + 1 === currentModifiedRange.endLineNumberExclusive) {\n                lastMapping.originalLineRange = new LineRange(lastMapping.originalLineRange.startLineNumber, range.endLineNumberExclusive);\n                lastMapping.modifiedLineRange = new LineRange(lastMapping.modifiedLineRange.startLineNumber, currentModifiedRange.endLineNumberExclusive);\n                nextMappings.push(lastMapping);\n                return;\n              }\n            }\n          } catch (e_13_1) {\n            e_13 = {\n              error: e_13_1\n            };\n          } finally {\n            try {\n              if (lastMappings_1_1 && !lastMappings_1_1.done && (_g = lastMappings_1.return)) _g.call(lastMappings_1);\n            } finally {\n              if (e_13) throw e_13.error;\n            }\n          }\n          var mapping = {\n            modifiedLineRange: currentModifiedRange,\n            originalLineRange: range\n          };\n          possibleMappings.push(mapping);\n          nextMappings.push(mapping);\n        });\n        lastMappings = nextMappings;\n      };\n      for (var i = change.modified.startLineNumber; i < change.modified.endLineNumberExclusive - 2; i++) {\n        _loop_3(i);\n      }\n      if (!timeout.isValid()) {\n        return {\n          value: []\n        };\n      }\n    };\n    try {\n      for (var changes_2 = __values(changes), changes_2_1 = changes_2.next(); !changes_2_1.done; changes_2_1 = changes_2.next()) {\n        var change = changes_2_1.value;\n        var state_1 = _loop_1(change);\n        if (typeof state_1 === \"object\") return state_1.value;\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (changes_2_1 && !changes_2_1.done && (_g = changes_2.return)) _g.call(changes_2);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    }\n    possibleMappings.sort(reverseOrder(compareBy(function (m) {\n      return m.modifiedLineRange.length;\n    }, numberComparator)));\n    var modifiedSet = new LineRangeSet();\n    var originalSet = new LineRangeSet();\n    try {\n      for (var possibleMappings_1 = __values(possibleMappings), possibleMappings_1_1 = possibleMappings_1.next(); !possibleMappings_1_1.done; possibleMappings_1_1 = possibleMappings_1.next()) {\n        var mapping = possibleMappings_1_1.value;\n        var diffOrigToMod = mapping.modifiedLineRange.startLineNumber - mapping.originalLineRange.startLineNumber;\n        var modifiedSections = modifiedSet.subtractFrom(mapping.modifiedLineRange);\n        var originalTranslatedSections = originalSet.subtractFrom(mapping.originalLineRange).getWithDelta(diffOrigToMod);\n        var modifiedIntersectedSections = modifiedSections.getIntersection(originalTranslatedSections);\n        try {\n          for (var _k = (e_12 = void 0, __values(modifiedIntersectedSections.ranges)), _l = _k.next(); !_l.done; _l = _k.next()) {\n            var s = _l.value;\n            if (s.length < 3) {\n              continue;\n            }\n            var modifiedLineRange = s;\n            var originalLineRange = s.delta(-diffOrigToMod);\n            moves.push(new LineRangeMapping(originalLineRange, modifiedLineRange));\n            modifiedSet.addRange(modifiedLineRange);\n            originalSet.addRange(originalLineRange);\n          }\n        } catch (e_12_1) {\n          e_12 = {\n            error: e_12_1\n          };\n        } finally {\n          try {\n            if (_l && !_l.done && (_j = _k.return)) _j.call(_k);\n          } finally {\n            if (e_12) throw e_12.error;\n          }\n        }\n      }\n    } catch (e_11_1) {\n      e_11 = {\n        error: e_11_1\n      };\n    } finally {\n      try {\n        if (possibleMappings_1_1 && !possibleMappings_1_1.done && (_h = possibleMappings_1.return)) _h.call(possibleMappings_1);\n      } finally {\n        if (e_11) throw e_11.error;\n      }\n    }\n    moves.sort(compareBy(function (m) {\n      return m.original.startLineNumber;\n    }, numberComparator));\n    var monotonousChanges = new MonotonousArray(changes);\n    var _loop_2 = function (i) {\n      var move = moves[i];\n      var firstTouchingChangeOrig = monotonousChanges.findLastMonotonous(function (c) {\n        return c.original.startLineNumber <= move.original.startLineNumber;\n      });\n      var firstTouchingChangeMod = findLastMonotonous(changes, function (c) {\n        return c.modified.startLineNumber <= move.modified.startLineNumber;\n      });\n      var linesAbove = Math.max(move.original.startLineNumber - firstTouchingChangeOrig.original.startLineNumber, move.modified.startLineNumber - firstTouchingChangeMod.modified.startLineNumber);\n      var lastTouchingChangeOrig = monotonousChanges.findLastMonotonous(function (c) {\n        return c.original.startLineNumber < move.original.endLineNumberExclusive;\n      });\n      var lastTouchingChangeMod = findLastMonotonous(changes, function (c) {\n        return c.modified.startLineNumber < move.modified.endLineNumberExclusive;\n      });\n      var linesBelow = Math.max(lastTouchingChangeOrig.original.endLineNumberExclusive - move.original.endLineNumberExclusive, lastTouchingChangeMod.modified.endLineNumberExclusive - move.modified.endLineNumberExclusive);\n      var extendToTop = void 0;\n      for (extendToTop = 0; extendToTop < linesAbove; extendToTop++) {\n        var origLine = move.original.startLineNumber - extendToTop - 1;\n        var modLine = move.modified.startLineNumber - extendToTop - 1;\n        if (origLine > originalLines.length || modLine > modifiedLines.length) {\n          break;\n        }\n        if (modifiedSet.contains(modLine) || originalSet.contains(origLine)) {\n          break;\n        }\n        if (!areLinesSimilar(originalLines[origLine - 1], modifiedLines[modLine - 1], timeout)) {\n          break;\n        }\n      }\n      if (extendToTop > 0) {\n        originalSet.addRange(new LineRange(move.original.startLineNumber - extendToTop, move.original.startLineNumber));\n        modifiedSet.addRange(new LineRange(move.modified.startLineNumber - extendToTop, move.modified.startLineNumber));\n      }\n      var extendToBottom = void 0;\n      for (extendToBottom = 0; extendToBottom < linesBelow; extendToBottom++) {\n        var origLine = move.original.endLineNumberExclusive + extendToBottom;\n        var modLine = move.modified.endLineNumberExclusive + extendToBottom;\n        if (origLine > originalLines.length || modLine > modifiedLines.length) {\n          break;\n        }\n        if (modifiedSet.contains(modLine) || originalSet.contains(origLine)) {\n          break;\n        }\n        if (!areLinesSimilar(originalLines[origLine - 1], modifiedLines[modLine - 1], timeout)) {\n          break;\n        }\n      }\n      if (extendToBottom > 0) {\n        originalSet.addRange(new LineRange(move.original.endLineNumberExclusive, move.original.endLineNumberExclusive + extendToBottom));\n        modifiedSet.addRange(new LineRange(move.modified.endLineNumberExclusive, move.modified.endLineNumberExclusive + extendToBottom));\n      }\n      if (extendToTop > 0 || extendToBottom > 0) {\n        moves[i] = new LineRangeMapping(new LineRange(move.original.startLineNumber - extendToTop, move.original.endLineNumberExclusive + extendToBottom), new LineRange(move.modified.startLineNumber - extendToTop, move.modified.endLineNumberExclusive + extendToBottom));\n      }\n    };\n    for (var i = 0; i < moves.length; i++) {\n      _loop_2(i);\n    }\n    return moves;\n  }\n  function areLinesSimilar(line1, line2, timeout) {\n    var e_14, _a;\n    if (line1.trim() === line2.trim()) {\n      return true;\n    }\n    if (line1.length > 300 && line2.length > 300) {\n      return false;\n    }\n    var myersDiffingAlgorithm = new MyersDiffAlgorithm();\n    var result = myersDiffingAlgorithm.compute(new LinesSliceCharSequence([line1], new Range(1, 1, 1, line1.length), false), new LinesSliceCharSequence([line2], new Range(1, 1, 1, line2.length), false), timeout);\n    var commonNonSpaceCharCount = 0;\n    var inverted = SequenceDiff.invert(result.diffs, line1.length);\n    try {\n      for (var inverted_1 = __values(inverted), inverted_1_1 = inverted_1.next(); !inverted_1_1.done; inverted_1_1 = inverted_1.next()) {\n        var seq = inverted_1_1.value;\n        seq.seq1Range.forEach(function (idx) {\n          if (!isSpace(line1.charCodeAt(idx))) {\n            commonNonSpaceCharCount++;\n          }\n        });\n      }\n    } catch (e_14_1) {\n      e_14 = {\n        error: e_14_1\n      };\n    } finally {\n      try {\n        if (inverted_1_1 && !inverted_1_1.done && (_a = inverted_1.return)) _a.call(inverted_1);\n      } finally {\n        if (e_14) throw e_14.error;\n      }\n    }\n    function countNonWsChars(str) {\n      var count = 0;\n      for (var i = 0; i < line1.length; i++) {\n        if (!isSpace(str.charCodeAt(i))) {\n          count++;\n        }\n      }\n      return count;\n    }\n    var longerLineLength = countNonWsChars(line1.length > line2.length ? line1 : line2);\n    var r = commonNonSpaceCharCount / longerLineLength > 0.6 && longerLineLength > 10;\n    return r;\n  }\n  function joinCloseConsecutiveMoves(moves) {\n    if (moves.length === 0) {\n      return moves;\n    }\n    moves.sort(compareBy(function (m) {\n      return m.original.startLineNumber;\n    }, numberComparator));\n    var result = [moves[0]];\n    for (var i = 1; i < moves.length; i++) {\n      var last = result[result.length - 1];\n      var current = moves[i];\n      var originalDist = current.original.startLineNumber - last.original.endLineNumberExclusive;\n      var modifiedDist = current.modified.startLineNumber - last.modified.endLineNumberExclusive;\n      var currentMoveAfterLast = originalDist >= 0 && modifiedDist >= 0;\n      if (currentMoveAfterLast && originalDist + modifiedDist <= 2) {\n        result[result.length - 1] = last.join(current);\n        continue;\n      }\n      result.push(current);\n    }\n    return result;\n  }\n  function removeMovesInSameDiff(changes, moves) {\n    var changesMonotonous = new MonotonousArray(changes);\n    moves = moves.filter(function (m) {\n      var diffBeforeEndOfMoveOriginal = changesMonotonous.findLastMonotonous(function (c) {\n        return c.original.startLineNumber < m.original.endLineNumberExclusive;\n      }) || new LineRangeMapping(new LineRange(1, 1), new LineRange(1, 1));\n      var diffBeforeEndOfMoveModified = findLastMonotonous(changes, function (c) {\n        return c.modified.startLineNumber < m.modified.endLineNumberExclusive;\n      });\n      var differentDiffs = diffBeforeEndOfMoveOriginal !== diffBeforeEndOfMoveModified;\n      return differentDiffs;\n    });\n    return moves;\n  }\n  function optimizeSequenceDiffs(sequence1, sequence2, sequenceDiffs) {\n    var result = sequenceDiffs;\n    result = joinSequenceDiffsByShifting(sequence1, sequence2, result);\n    result = joinSequenceDiffsByShifting(sequence1, sequence2, result);\n    result = shiftSequenceDiffs(sequence1, sequence2, result);\n    return result;\n  }\n  function joinSequenceDiffsByShifting(sequence1, sequence2, sequenceDiffs) {\n    if (sequenceDiffs.length === 0) {\n      return sequenceDiffs;\n    }\n    var result = [];\n    result.push(sequenceDiffs[0]);\n    for (var i = 1; i < sequenceDiffs.length; i++) {\n      var prevResult = result[result.length - 1];\n      var cur = sequenceDiffs[i];\n      if (cur.seq1Range.isEmpty || cur.seq2Range.isEmpty) {\n        var length = cur.seq1Range.start - prevResult.seq1Range.endExclusive;\n        var d = void 0;\n        for (d = 1; d <= length; d++) {\n          if (sequence1.getElement(cur.seq1Range.start - d) !== sequence1.getElement(cur.seq1Range.endExclusive - d) || sequence2.getElement(cur.seq2Range.start - d) !== sequence2.getElement(cur.seq2Range.endExclusive - d)) {\n            break;\n          }\n        }\n        d--;\n        if (d === length) {\n          result[result.length - 1] = new SequenceDiff(new OffsetRange(prevResult.seq1Range.start, cur.seq1Range.endExclusive - length), new OffsetRange(prevResult.seq2Range.start, cur.seq2Range.endExclusive - length));\n          continue;\n        }\n        cur = cur.delta(-d);\n      }\n      result.push(cur);\n    }\n    var result2 = [];\n    for (var i = 0; i < result.length - 1; i++) {\n      var nextResult = result[i + 1];\n      var cur = result[i];\n      if (cur.seq1Range.isEmpty || cur.seq2Range.isEmpty) {\n        var length = nextResult.seq1Range.start - cur.seq1Range.endExclusive;\n        var d = void 0;\n        for (d = 0; d < length; d++) {\n          if (!sequence1.isStronglyEqual(cur.seq1Range.start + d, cur.seq1Range.endExclusive + d) || !sequence2.isStronglyEqual(cur.seq2Range.start + d, cur.seq2Range.endExclusive + d)) {\n            break;\n          }\n        }\n        if (d === length) {\n          result[i + 1] = new SequenceDiff(new OffsetRange(cur.seq1Range.start + length, nextResult.seq1Range.endExclusive), new OffsetRange(cur.seq2Range.start + length, nextResult.seq2Range.endExclusive));\n          continue;\n        }\n        if (d > 0) {\n          cur = cur.delta(d);\n        }\n      }\n      result2.push(cur);\n    }\n    if (result.length > 0) {\n      result2.push(result[result.length - 1]);\n    }\n    return result2;\n  }\n  function shiftSequenceDiffs(sequence1, sequence2, sequenceDiffs) {\n    if (!sequence1.getBoundaryScore || !sequence2.getBoundaryScore) {\n      return sequenceDiffs;\n    }\n    for (var i = 0; i < sequenceDiffs.length; i++) {\n      var prevDiff = i > 0 ? sequenceDiffs[i - 1] : undefined;\n      var diff = sequenceDiffs[i];\n      var nextDiff = i + 1 < sequenceDiffs.length ? sequenceDiffs[i + 1] : undefined;\n      var seq1ValidRange = new OffsetRange(prevDiff ? prevDiff.seq1Range.endExclusive + 1 : 0, nextDiff ? nextDiff.seq1Range.start - 1 : sequence1.length);\n      var seq2ValidRange = new OffsetRange(prevDiff ? prevDiff.seq2Range.endExclusive + 1 : 0, nextDiff ? nextDiff.seq2Range.start - 1 : sequence2.length);\n      if (diff.seq1Range.isEmpty) {\n        sequenceDiffs[i] = shiftDiffToBetterPosition(diff, sequence1, sequence2, seq1ValidRange, seq2ValidRange);\n      } else if (diff.seq2Range.isEmpty) {\n        sequenceDiffs[i] = shiftDiffToBetterPosition(diff.swap(), sequence2, sequence1, seq2ValidRange, seq1ValidRange).swap();\n      }\n    }\n    return sequenceDiffs;\n  }\n  function shiftDiffToBetterPosition(diff, sequence1, sequence2, seq1ValidRange, seq2ValidRange) {\n    var maxShiftLimit = 100;\n    var deltaBefore = 1;\n    while (diff.seq1Range.start - deltaBefore >= seq1ValidRange.start && diff.seq2Range.start - deltaBefore >= seq2ValidRange.start && sequence2.isStronglyEqual(diff.seq2Range.start - deltaBefore, diff.seq2Range.endExclusive - deltaBefore) && deltaBefore < maxShiftLimit) {\n      deltaBefore++;\n    }\n    deltaBefore--;\n    var deltaAfter = 0;\n    while (diff.seq1Range.start + deltaAfter < seq1ValidRange.endExclusive && diff.seq2Range.endExclusive + deltaAfter < seq2ValidRange.endExclusive && sequence2.isStronglyEqual(diff.seq2Range.start + deltaAfter, diff.seq2Range.endExclusive + deltaAfter) && deltaAfter < maxShiftLimit) {\n      deltaAfter++;\n    }\n    if (deltaBefore === 0 && deltaAfter === 0) {\n      return diff;\n    }\n    var bestDelta = 0;\n    var bestScore = -1;\n    for (var delta = -deltaBefore; delta <= deltaAfter; delta++) {\n      var seq2OffsetStart = diff.seq2Range.start + delta;\n      var seq2OffsetEndExclusive = diff.seq2Range.endExclusive + delta;\n      var seq1Offset = diff.seq1Range.start + delta;\n      var score_1 = sequence1.getBoundaryScore(seq1Offset) + sequence2.getBoundaryScore(seq2OffsetStart) + sequence2.getBoundaryScore(seq2OffsetEndExclusive);\n      if (score_1 > bestScore) {\n        bestScore = score_1;\n        bestDelta = delta;\n      }\n    }\n    return diff.delta(bestDelta);\n  }\n  function removeShortMatches(sequence1, sequence2, sequenceDiffs) {\n    var e_15, _a;\n    var result = [];\n    try {\n      for (var sequenceDiffs_2 = __values(sequenceDiffs), sequenceDiffs_2_1 = sequenceDiffs_2.next(); !sequenceDiffs_2_1.done; sequenceDiffs_2_1 = sequenceDiffs_2.next()) {\n        var s = sequenceDiffs_2_1.value;\n        var last = result[result.length - 1];\n        if (!last) {\n          result.push(s);\n          continue;\n        }\n        if (s.seq1Range.start - last.seq1Range.endExclusive <= 2 || s.seq2Range.start - last.seq2Range.endExclusive <= 2) {\n          result[result.length - 1] = new SequenceDiff(last.seq1Range.join(s.seq1Range), last.seq2Range.join(s.seq2Range));\n        } else {\n          result.push(s);\n        }\n      }\n    } catch (e_15_1) {\n      e_15 = {\n        error: e_15_1\n      };\n    } finally {\n      try {\n        if (sequenceDiffs_2_1 && !sequenceDiffs_2_1.done && (_a = sequenceDiffs_2.return)) _a.call(sequenceDiffs_2);\n      } finally {\n        if (e_15) throw e_15.error;\n      }\n    }\n    return result;\n  }\n  function extendDiffsToEntireWordIfAppropriate(sequence1, sequence2, sequenceDiffs, findParent, force) {\n    if (force === void 0) {\n      force = false;\n    }\n    var equalMappings = SequenceDiff.invert(sequenceDiffs, sequence1.length);\n    var additional = [];\n    var lastPoint = new OffsetPair(0, 0);\n    function scanWord(pair, equalMapping) {\n      if (pair.offset1 < lastPoint.offset1 || pair.offset2 < lastPoint.offset2) {\n        return;\n      }\n      var w1 = findParent(sequence1, pair.offset1);\n      var w2 = findParent(sequence2, pair.offset2);\n      if (!w1 || !w2) {\n        return;\n      }\n      var w = new SequenceDiff(w1, w2);\n      var equalPart = w.intersect(equalMapping);\n      var equalChars1 = equalPart.seq1Range.length;\n      var equalChars2 = equalPart.seq2Range.length;\n      while (equalMappings.length > 0) {\n        var next = equalMappings[0];\n        var intersects = next.seq1Range.intersects(w.seq1Range) || next.seq2Range.intersects(w.seq2Range);\n        if (!intersects) {\n          break;\n        }\n        var v1 = findParent(sequence1, next.seq1Range.start);\n        var v2 = findParent(sequence2, next.seq2Range.start);\n        var v = new SequenceDiff(v1, v2);\n        var equalPart2 = v.intersect(next);\n        equalChars1 += equalPart2.seq1Range.length;\n        equalChars2 += equalPart2.seq2Range.length;\n        w = w.join(v);\n        if (w.seq1Range.endExclusive >= next.seq1Range.endExclusive) {\n          equalMappings.shift();\n        } else {\n          break;\n        }\n      }\n      if (force && equalChars1 + equalChars2 < w.seq1Range.length + w.seq2Range.length || equalChars1 + equalChars2 < (w.seq1Range.length + w.seq2Range.length) * 2 / 3) {\n        additional.push(w);\n      }\n      lastPoint = w.getEndExclusives();\n    }\n    while (equalMappings.length > 0) {\n      var next = equalMappings.shift();\n      if (next.seq1Range.isEmpty) {\n        continue;\n      }\n      scanWord(next.getStarts(), next);\n      scanWord(next.getEndExclusives().delta(-1), next);\n    }\n    var merged = mergeSequenceDiffs(sequenceDiffs, additional);\n    return merged;\n  }\n  function mergeSequenceDiffs(sequenceDiffs1, sequenceDiffs2) {\n    var result = [];\n    while (sequenceDiffs1.length > 0 || sequenceDiffs2.length > 0) {\n      var sd1 = sequenceDiffs1[0];\n      var sd2 = sequenceDiffs2[0];\n      var next = void 0;\n      if (sd1 && (!sd2 || sd1.seq1Range.start < sd2.seq1Range.start)) {\n        next = sequenceDiffs1.shift();\n      } else {\n        next = sequenceDiffs2.shift();\n      }\n      if (result.length > 0 && result[result.length - 1].seq1Range.endExclusive >= next.seq1Range.start) {\n        result[result.length - 1] = result[result.length - 1].join(next);\n      } else {\n        result.push(next);\n      }\n    }\n    return result;\n  }\n  function removeVeryShortMatchingLinesBetweenDiffs(sequence1, _sequence2, sequenceDiffs) {\n    var diffs = sequenceDiffs;\n    if (diffs.length === 0) {\n      return diffs;\n    }\n    var counter = 0;\n    var shouldRepeat;\n    do {\n      shouldRepeat = false;\n      var result = [diffs[0]];\n      var _loop_4 = function (i) {\n        var shouldJoinDiffs = function (before, after) {\n          var unchangedRange = new OffsetRange(lastResult.seq1Range.endExclusive, cur.seq1Range.start);\n          var unchangedText = sequence1.getText(unchangedRange);\n          var unchangedTextWithoutWs = unchangedText.replace(/\\s/g, \"\");\n          if (unchangedTextWithoutWs.length <= 4 && (before.seq1Range.length + before.seq2Range.length > 5 || after.seq1Range.length + after.seq2Range.length > 5)) {\n            return true;\n          }\n          return false;\n        };\n        var cur = diffs[i];\n        var lastResult = result[result.length - 1];\n        var shouldJoin = shouldJoinDiffs(lastResult, cur);\n        if (shouldJoin) {\n          shouldRepeat = true;\n          result[result.length - 1] = result[result.length - 1].join(cur);\n        } else {\n          result.push(cur);\n        }\n      };\n      for (var i = 1; i < diffs.length; i++) {\n        _loop_4(i);\n      }\n      diffs = result;\n    } while (counter++ < 10 && shouldRepeat);\n    return diffs;\n  }\n  function removeVeryShortMatchingTextBetweenLongDiffs(sequence1, sequence2, sequenceDiffs) {\n    var diffs = sequenceDiffs;\n    if (diffs.length === 0) {\n      return diffs;\n    }\n    var counter = 0;\n    var shouldRepeat;\n    do {\n      shouldRepeat = false;\n      var result = [diffs[0]];\n      var _loop_5 = function (i) {\n        var shouldJoinDiffs = function (before, after) {\n          var unchangedRange = new OffsetRange(lastResult.seq1Range.endExclusive, cur.seq1Range.start);\n          var unchangedLineCount = sequence1.countLinesIn(unchangedRange);\n          if (unchangedLineCount > 5 || unchangedRange.length > 500) {\n            return false;\n          }\n          var unchangedText = sequence1.getText(unchangedRange).trim();\n          if (unchangedText.length > 20 || unchangedText.split(/\\r\\n|\\r|\\n/).length > 1) {\n            return false;\n          }\n          var beforeLineCount1 = sequence1.countLinesIn(before.seq1Range);\n          var beforeSeq1Length = before.seq1Range.length;\n          var beforeLineCount2 = sequence2.countLinesIn(before.seq2Range);\n          var beforeSeq2Length = before.seq2Range.length;\n          var afterLineCount1 = sequence1.countLinesIn(after.seq1Range);\n          var afterSeq1Length = after.seq1Range.length;\n          var afterLineCount2 = sequence2.countLinesIn(after.seq2Range);\n          var afterSeq2Length = after.seq2Range.length;\n          var max = 2 * 40 + 50;\n          function cap(v) {\n            return Math.min(v, max);\n          }\n          if (Math.pow(Math.pow(cap(beforeLineCount1 * 40 + beforeSeq1Length), 1.5) + Math.pow(cap(beforeLineCount2 * 40 + beforeSeq2Length), 1.5), 1.5) + Math.pow(Math.pow(cap(afterLineCount1 * 40 + afterSeq1Length), 1.5) + Math.pow(cap(afterLineCount2 * 40 + afterSeq2Length), 1.5), 1.5) > Math.pow(Math.pow(max, 1.5), 1.5) * 1.3) {\n            return true;\n          }\n          return false;\n        };\n        var cur = diffs[i];\n        var lastResult = result[result.length - 1];\n        var shouldJoin = shouldJoinDiffs(lastResult, cur);\n        if (shouldJoin) {\n          shouldRepeat = true;\n          result[result.length - 1] = result[result.length - 1].join(cur);\n        } else {\n          result.push(cur);\n        }\n      };\n      for (var i = 1; i < diffs.length; i++) {\n        _loop_5(i);\n      }\n      diffs = result;\n    } while (counter++ < 10 && shouldRepeat);\n    var newDiffs = [];\n    forEachWithNeighbors(diffs, function (prev, cur, next) {\n      var newDiff = cur;\n      function shouldMarkAsChanged(text) {\n        return text.length > 0 && text.trim().length <= 3 && cur.seq1Range.length + cur.seq2Range.length > 100;\n      }\n      var fullRange1 = sequence1.extendToFullLines(cur.seq1Range);\n      var prefix = sequence1.getText(new OffsetRange(fullRange1.start, cur.seq1Range.start));\n      if (shouldMarkAsChanged(prefix)) {\n        newDiff = newDiff.deltaStart(-prefix.length);\n      }\n      var suffix = sequence1.getText(new OffsetRange(cur.seq1Range.endExclusive, fullRange1.endExclusive));\n      if (shouldMarkAsChanged(suffix)) {\n        newDiff = newDiff.deltaEnd(suffix.length);\n      }\n      var availableSpace = SequenceDiff.fromOffsetPairs(prev ? prev.getEndExclusives() : OffsetPair.zero, next ? next.getStarts() : OffsetPair.max);\n      var result = newDiff.intersect(availableSpace);\n      if (newDiffs.length > 0 && result.getStarts().equals(newDiffs[newDiffs.length - 1].getEndExclusives())) {\n        newDiffs[newDiffs.length - 1] = newDiffs[newDiffs.length - 1].join(result);\n      } else {\n        newDiffs.push(result);\n      }\n    });\n    return newDiffs;\n  }\n  var LineSequence = /** @class */function () {\n    function LineSequence(trimmedHash, lines) {\n      this.trimmedHash = trimmedHash;\n      this.lines = lines;\n    }\n    LineSequence.prototype.getElement = function (offset) {\n      return this.trimmedHash[offset];\n    };\n    Object.defineProperty(LineSequence.prototype, \"length\", {\n      get: function () {\n        return this.trimmedHash.length;\n      },\n      enumerable: false,\n      configurable: true\n    });\n    LineSequence.prototype.getBoundaryScore = function (length) {\n      var indentationBefore = length === 0 ? 0 : getIndentation(this.lines[length - 1]);\n      var indentationAfter = length === this.lines.length ? 0 : getIndentation(this.lines[length]);\n      return 1e3 - (indentationBefore + indentationAfter);\n    };\n    LineSequence.prototype.getText = function (range) {\n      return this.lines.slice(range.start, range.endExclusive).join(\"\\n\");\n    };\n    LineSequence.prototype.isStronglyEqual = function (offset1, offset2) {\n      return this.lines[offset1] === this.lines[offset2];\n    };\n    return LineSequence;\n  }();\n  function getIndentation(str) {\n    var i = 0;\n    while (i < str.length && (str.charCodeAt(i) === 32 || str.charCodeAt(i) === 9)) {\n      i++;\n    }\n    return i;\n  }\n  var DefaultLinesDiffComputer = /** @class */function () {\n    function DefaultLinesDiffComputer() {\n      this.dynamicProgrammingDiffing = new DynamicProgrammingDiffing();\n      this.myersDiffingAlgorithm = new MyersDiffAlgorithm();\n    }\n    DefaultLinesDiffComputer.prototype.computeDiff = function (originalLines, modifiedLines, options) {\n      var e_16, _a;\n      var _this = this;\n      if (originalLines.length <= 1 && equals(originalLines, modifiedLines, function (a, b) {\n        return a === b;\n      })) {\n        return new LinesDiff([], [], false);\n      }\n      if (originalLines.length === 1 && originalLines[0].length === 0 || modifiedLines.length === 1 && modifiedLines[0].length === 0) {\n        return new LinesDiff([new DetailedLineRangeMapping(new LineRange(1, originalLines.length + 1), new LineRange(1, modifiedLines.length + 1), [new RangeMapping(new Range(1, 1, originalLines.length, originalLines[originalLines.length - 1].length + 1), new Range(1, 1, modifiedLines.length, modifiedLines[modifiedLines.length - 1].length + 1))])], [], false);\n      }\n      var timeout = options.maxComputationTimeMs === 0 ? InfiniteTimeout.instance : new DateTimeout(options.maxComputationTimeMs);\n      var considerWhitespaceChanges = !options.ignoreTrimWhitespace;\n      var perfectHashes = /* @__PURE__ */new Map();\n      function getOrCreateHash(text) {\n        var hash = perfectHashes.get(text);\n        if (hash === undefined) {\n          hash = perfectHashes.size;\n          perfectHashes.set(text, hash);\n        }\n        return hash;\n      }\n      var originalLinesHashes = originalLines.map(function (l) {\n        return getOrCreateHash(l.trim());\n      });\n      var modifiedLinesHashes = modifiedLines.map(function (l) {\n        return getOrCreateHash(l.trim());\n      });\n      var sequence1 = new LineSequence(originalLinesHashes, originalLines);\n      var sequence2 = new LineSequence(modifiedLinesHashes, modifiedLines);\n      var lineAlignmentResult = function () {\n        if (sequence1.length + sequence2.length < 1700) {\n          return _this.dynamicProgrammingDiffing.compute(sequence1, sequence2, timeout, function (offset1, offset2) {\n            return originalLines[offset1] === modifiedLines[offset2] ? modifiedLines[offset2].length === 0 ? 0.1 : 1 + Math.log(1 + modifiedLines[offset2].length) : 0.99;\n          });\n        }\n        return _this.myersDiffingAlgorithm.compute(sequence1, sequence2, timeout);\n      }();\n      var lineAlignments = lineAlignmentResult.diffs;\n      var hitTimeout = lineAlignmentResult.hitTimeout;\n      lineAlignments = optimizeSequenceDiffs(sequence1, sequence2, lineAlignments);\n      lineAlignments = removeVeryShortMatchingLinesBetweenDiffs(sequence1, sequence2, lineAlignments);\n      var alignments = [];\n      var scanForWhitespaceChanges = function (equalLinesCount) {\n        var e_17, _a;\n        if (!considerWhitespaceChanges) {\n          return;\n        }\n        for (var i = 0; i < equalLinesCount; i++) {\n          var seq1Offset = seq1LastStart + i;\n          var seq2Offset = seq2LastStart + i;\n          if (originalLines[seq1Offset] !== modifiedLines[seq2Offset]) {\n            var characterDiffs = _this.refineDiff(originalLines, modifiedLines, new SequenceDiff(new OffsetRange(seq1Offset, seq1Offset + 1), new OffsetRange(seq2Offset, seq2Offset + 1)), timeout, considerWhitespaceChanges, options);\n            try {\n              for (var _g = (e_17 = void 0, __values(characterDiffs.mappings)), _h = _g.next(); !_h.done; _h = _g.next()) {\n                var a = _h.value;\n                alignments.push(a);\n              }\n            } catch (e_17_1) {\n              e_17 = {\n                error: e_17_1\n              };\n            } finally {\n              try {\n                if (_h && !_h.done && (_a = _g.return)) _a.call(_g);\n              } finally {\n                if (e_17) throw e_17.error;\n              }\n            }\n            if (characterDiffs.hitTimeout) {\n              hitTimeout = true;\n            }\n          }\n        }\n      };\n      var seq1LastStart = 0;\n      var seq2LastStart = 0;\n      var _loop_6 = function (diff) {\n        var e_18, _g;\n        assertFn(function () {\n          return diff.seq1Range.start - seq1LastStart === diff.seq2Range.start - seq2LastStart;\n        });\n        var equalLinesCount = diff.seq1Range.start - seq1LastStart;\n        scanForWhitespaceChanges(equalLinesCount);\n        seq1LastStart = diff.seq1Range.endExclusive;\n        seq2LastStart = diff.seq2Range.endExclusive;\n        var characterDiffs = this_1.refineDiff(originalLines, modifiedLines, diff, timeout, considerWhitespaceChanges, options);\n        if (characterDiffs.hitTimeout) {\n          hitTimeout = true;\n        }\n        try {\n          for (var _h = (e_18 = void 0, __values(characterDiffs.mappings)), _j = _h.next(); !_j.done; _j = _h.next()) {\n            var a = _j.value;\n            alignments.push(a);\n          }\n        } catch (e_18_1) {\n          e_18 = {\n            error: e_18_1\n          };\n        } finally {\n          try {\n            if (_j && !_j.done && (_g = _h.return)) _g.call(_h);\n          } finally {\n            if (e_18) throw e_18.error;\n          }\n        }\n      };\n      var this_1 = this;\n      try {\n        for (var lineAlignments_1 = __values(lineAlignments), lineAlignments_1_1 = lineAlignments_1.next(); !lineAlignments_1_1.done; lineAlignments_1_1 = lineAlignments_1.next()) {\n          var diff = lineAlignments_1_1.value;\n          _loop_6(diff);\n        }\n      } catch (e_16_1) {\n        e_16 = {\n          error: e_16_1\n        };\n      } finally {\n        try {\n          if (lineAlignments_1_1 && !lineAlignments_1_1.done && (_a = lineAlignments_1.return)) _a.call(lineAlignments_1);\n        } finally {\n          if (e_16) throw e_16.error;\n        }\n      }\n      scanForWhitespaceChanges(originalLines.length - seq1LastStart);\n      var changes = lineRangeMappingFromRangeMappings(alignments, new ArrayText(originalLines), new ArrayText(modifiedLines));\n      var moves = [];\n      if (options.computeMoves) {\n        moves = this.computeMoves(changes, originalLines, modifiedLines, originalLinesHashes, modifiedLinesHashes, timeout, considerWhitespaceChanges, options);\n      }\n      assertFn(function () {\n        var e_19, _a, e_20, _g;\n        function validatePosition(pos, lines) {\n          if (pos.lineNumber < 1 || pos.lineNumber > lines.length) {\n            return false;\n          }\n          var line = lines[pos.lineNumber - 1];\n          if (pos.column < 1 || pos.column > line.length + 1) {\n            return false;\n          }\n          return true;\n        }\n        function validateRange(range, lines) {\n          if (range.startLineNumber < 1 || range.startLineNumber > lines.length + 1) {\n            return false;\n          }\n          if (range.endLineNumberExclusive < 1 || range.endLineNumberExclusive > lines.length + 1) {\n            return false;\n          }\n          return true;\n        }\n        try {\n          for (var changes_3 = __values(changes), changes_3_1 = changes_3.next(); !changes_3_1.done; changes_3_1 = changes_3.next()) {\n            var c = changes_3_1.value;\n            if (!c.innerChanges) {\n              return false;\n            }\n            try {\n              for (var _h = (e_20 = void 0, __values(c.innerChanges)), _j = _h.next(); !_j.done; _j = _h.next()) {\n                var ic = _j.value;\n                var valid = validatePosition(ic.modifiedRange.getStartPosition(), modifiedLines) && validatePosition(ic.modifiedRange.getEndPosition(), modifiedLines) && validatePosition(ic.originalRange.getStartPosition(), originalLines) && validatePosition(ic.originalRange.getEndPosition(), originalLines);\n                if (!valid) {\n                  return false;\n                }\n              }\n            } catch (e_20_1) {\n              e_20 = {\n                error: e_20_1\n              };\n            } finally {\n              try {\n                if (_j && !_j.done && (_g = _h.return)) _g.call(_h);\n              } finally {\n                if (e_20) throw e_20.error;\n              }\n            }\n            if (!validateRange(c.modified, modifiedLines) || !validateRange(c.original, originalLines)) {\n              return false;\n            }\n          }\n        } catch (e_19_1) {\n          e_19 = {\n            error: e_19_1\n          };\n        } finally {\n          try {\n            if (changes_3_1 && !changes_3_1.done && (_a = changes_3.return)) _a.call(changes_3);\n          } finally {\n            if (e_19) throw e_19.error;\n          }\n        }\n        return true;\n      });\n      return new LinesDiff(changes, moves, hitTimeout);\n    };\n    DefaultLinesDiffComputer.prototype.computeMoves = function (changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout, considerWhitespaceChanges, options) {\n      var _this = this;\n      var moves = computeMovedLines(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout);\n      var movesWithDiffs = moves.map(function (m) {\n        var moveChanges = _this.refineDiff(originalLines, modifiedLines, new SequenceDiff(m.original.toOffsetRange(), m.modified.toOffsetRange()), timeout, considerWhitespaceChanges, options);\n        var mappings = lineRangeMappingFromRangeMappings(moveChanges.mappings, new ArrayText(originalLines), new ArrayText(modifiedLines), true);\n        return new MovedText(m, mappings);\n      });\n      return movesWithDiffs;\n    };\n    DefaultLinesDiffComputer.prototype.refineDiff = function (originalLines, modifiedLines, diff, timeout, considerWhitespaceChanges, options) {\n      var lineRangeMapping = toLineRangeMapping(diff);\n      var rangeMapping = lineRangeMapping.toRangeMapping2(originalLines, modifiedLines);\n      var slice1 = new LinesSliceCharSequence(originalLines, rangeMapping.originalRange, considerWhitespaceChanges);\n      var slice2 = new LinesSliceCharSequence(modifiedLines, rangeMapping.modifiedRange, considerWhitespaceChanges);\n      var diffResult = slice1.length + slice2.length < 500 ? this.dynamicProgrammingDiffing.compute(slice1, slice2, timeout) : this.myersDiffingAlgorithm.compute(slice1, slice2, timeout);\n      var diffs = diffResult.diffs;\n      diffs = optimizeSequenceDiffs(slice1, slice2, diffs);\n      diffs = extendDiffsToEntireWordIfAppropriate(slice1, slice2, diffs, function (seq, idx) {\n        return seq.findWordContaining(idx);\n      });\n      if (options.extendToSubwords) {\n        diffs = extendDiffsToEntireWordIfAppropriate(slice1, slice2, diffs, function (seq, idx) {\n          return seq.findSubWordContaining(idx);\n        }, true);\n      }\n      diffs = removeShortMatches(slice1, slice2, diffs);\n      diffs = removeVeryShortMatchingTextBetweenLongDiffs(slice1, slice2, diffs);\n      var result = diffs.map(function (d) {\n        return new RangeMapping(slice1.translateRange(d.seq1Range), slice2.translateRange(d.seq2Range));\n      });\n      return {\n        mappings: result,\n        hitTimeout: diffResult.hitTimeout\n      };\n    };\n    return DefaultLinesDiffComputer;\n  }();\n  function toLineRangeMapping(sequenceDiff) {\n    return new LineRangeMapping(new LineRange(sequenceDiff.seq1Range.start + 1, sequenceDiff.seq1Range.endExclusive + 1), new LineRange(sequenceDiff.seq2Range.start + 1, sequenceDiff.seq2Range.endExclusive + 1));\n  }\n  function computeDiff(originalLines, modifiedLines, options) {\n    var diffComputer = new DefaultLinesDiffComputer();\n    var result = diffComputer.computeDiff(originalLines, modifiedLines, options);\n    return result === null || result === void 0 ? void 0 : result.changes.map(function (changes) {\n      var originalStartLineNumber;\n      var originalEndLineNumber;\n      var modifiedStartLineNumber;\n      var modifiedEndLineNumber;\n      var innerChanges = changes.innerChanges;\n      originalStartLineNumber = changes.original.startLineNumber - 1;\n      originalEndLineNumber = changes.original.endLineNumberExclusive - 1;\n      modifiedStartLineNumber = changes.modified.startLineNumber - 1;\n      modifiedEndLineNumber = changes.modified.endLineNumberExclusive - 1;\n      return {\n        origStart: originalStartLineNumber,\n        origEnd: originalEndLineNumber,\n        editStart: modifiedStartLineNumber,\n        editEnd: modifiedEndLineNumber,\n        charChanges: innerChanges === null || innerChanges === void 0 ? void 0 : innerChanges.map(function (m) {\n          return {\n            originalStartLineNumber: m.originalRange.startLineNumber - 1,\n            originalStartColumn: m.originalRange.startColumn - 1,\n            originalEndLineNumber: m.originalRange.endLineNumber - 1,\n            originalEndColumn: m.originalRange.endColumn - 1,\n            modifiedStartLineNumber: m.modifiedRange.startLineNumber - 1,\n            modifiedStartColumn: m.modifiedRange.startColumn - 1,\n            modifiedEndLineNumber: m.modifiedRange.endLineNumber - 1,\n            modifiedEndColumn: m.modifiedRange.endColumn - 1\n          };\n        })\n      };\n    });\n  }\n  exports.computeDiff = computeDiff;\n  var AceRange = require(\"../../../range\").Range;\n  var DiffChunk = require(\"../base_diff_view\").DiffChunk;\n  var DiffProvider = /** @class */function () {\n    function DiffProvider() {}\n    DiffProvider.prototype.compute = function (originalLines, modifiedLines, opts) {\n      if (!opts) opts = {};\n      if (!opts.maxComputationTimeMs) opts.maxComputationTimeMs = 500;\n      var chunks = computeDiff(originalLines, modifiedLines, opts) || [];\n      return chunks.map(function (c) {\n        return new DiffChunk(new AceRange(c.origStart, 0, c.origEnd, 0), new AceRange(c.editStart, 0, c.editEnd, 0), c.charChanges);\n      });\n    };\n    return DiffProvider;\n  }();\n  exports.DiffProvider = DiffProvider;\n});\nace.define(\"ace/ext/diff\", [\"require\", \"exports\", \"module\", \"ace/ext/diff/inline_diff_view\", \"ace/ext/diff/split_diff_view\", \"ace/ext/diff/providers/default\"], function (require, exports, module) {\n  /**\n  * ## Diff extension\n  *\n  * Provides side-by-side and inline diff view capabilities for comparing code differences between two versions.\n  * Supports visual highlighting of additions, deletions, and modifications with customizable diff providers\n  * and rendering options. Includes features for synchronized scrolling, line number alignment, and\n  * various diff computation algorithms.\n  *\n  * **Components:**\n  * - `InlineDiffView`: Single editor view showing changes inline with markers\n  * - `SplitDiffView`: Side-by-side comparison view with two synchronized editors\n  * - `DiffProvider`: Configurable algorithms for computing differences\n  *\n  * **Usage:**\n  * ```javascript\n  * const diffView = createDiffView({\n  *   valueA: originalContent,\n  *   valueB: modifiedContent,\n  *   inline: false // or 'a'/'b' for inline view\n  * });\n  * ```\n  *\n  * @module\n  */\n  var InlineDiffView = require(\"./diff/inline_diff_view\").InlineDiffView;\n  var SplitDiffView = require(\"./diff/split_diff_view\").SplitDiffView;\n  var DiffProvider = require(\"./diff/providers/default\").DiffProvider;\n  function createDiffView(diffModel, options) {\n    diffModel = diffModel || {};\n    diffModel.diffProvider = diffModel.diffProvider || new DiffProvider(); //use default diff provider;\n    var diffView;\n    if (diffModel.inline) {\n      diffView = new InlineDiffView(diffModel);\n    } else {\n      diffView = new SplitDiffView(diffModel);\n    }\n    if (options) {\n      diffView.setOptions(options);\n    }\n    return diffView;\n  }\n  exports.InlineDiffView = InlineDiffView;\n  exports.SplitDiffView = SplitDiffView;\n  exports.DiffProvider = DiffProvider;\n  exports.createDiffView = createDiffView;\n});\n(function () {\n  ace.require([\"ace/ext/diff\"], function (m) {\n    if (typeof module == \"object\" && typeof exports == \"object\" && module) {\n      module.exports = m;\n    }\n  });\n})();"}